{"ast":null,"code":"import { extend } from '../vue';\nimport { arrayIncludes } from '../utils/array';\nimport { keys } from '../utils/object';\nimport { getEventRoot } from '../utils/get-event-root'; // --- Constants ---\n\nvar PROP = '$_rootListeners'; // --- Mixin ---\n// @vue/component\n\nexport var listenOnRootMixin = extend({\n  computed: {\n    bvEventRoot: function bvEventRoot() {\n      return getEventRoot(this);\n    }\n  },\n  created: function created() {\n    // Define non-reactive property\n    // Object of arrays, keyed by event name,\n    // where value is an array of callbacks\n    this[PROP] = {};\n  },\n  beforeDestroy: function beforeDestroy() {\n    var _this = this; // Unregister all registered listeners\n\n\n    keys(this[PROP] || {}).forEach(function (event) {\n      _this[PROP][event].forEach(function (callback) {\n        _this.listenOffRoot(event, callback);\n      });\n    });\n    this[PROP] = null;\n  },\n  methods: {\n    registerRootListener: function registerRootListener(event, callback) {\n      if (this[PROP]) {\n        this[PROP][event] = this[PROP][event] || [];\n\n        if (!arrayIncludes(this[PROP][event], callback)) {\n          this[PROP][event].push(callback);\n        }\n      }\n    },\n    unregisterRootListener: function unregisterRootListener(event, callback) {\n      if (this[PROP] && this[PROP][event]) {\n        this[PROP][event] = this[PROP][event].filter(function (cb) {\n          return cb !== callback;\n        });\n      }\n    },\n\n    /**\r\n     * Safely register event listeners on the root Vue node\r\n     * While Vue automatically removes listeners for individual components,\r\n     * when a component registers a listener on `$root` and is destroyed,\r\n     * this orphans a callback because the node is gone, but the `$root`\r\n     * does not clear the callback\r\n     *\r\n     * When registering a `$root` listener, it also registers the listener\r\n     * to be removed in the component's `beforeDestroy()` hook\r\n     *\r\n     * @param {string} event\r\n     * @param {function} callback\r\n     */\n    listenOnRoot: function listenOnRoot(event, callback) {\n      if (this.bvEventRoot) {\n        this.bvEventRoot.$on(event, callback);\n        this.registerRootListener(event, callback);\n      }\n    },\n\n    /**\r\n     * Safely register a `$once()` event listener on the root Vue node\r\n     * While Vue automatically removes listeners for individual components,\r\n     * when a component registers a listener on `$root` and is destroyed,\r\n     * this orphans a callback because the node is gone, but the `$root`\r\n     * does not clear the callback\r\n     *\r\n     * When registering a `$root` listener, it also registers the listener\r\n     * to be removed in the component's `beforeDestroy()` hook\r\n     *\r\n     * @param {string} event\r\n     * @param {function} callback\r\n     */\n    listenOnRootOnce: function listenOnRootOnce(event, callback) {\n      var _this2 = this;\n\n      if (this.bvEventRoot) {\n        var _callback = function _callback() {\n          _this2.unregisterRootListener(_callback); // eslint-disable-next-line node/no-callback-literal\n\n\n          callback.apply(void 0, arguments);\n        };\n\n        this.bvEventRoot.$once(event, _callback);\n        this.registerRootListener(event, _callback);\n      }\n    },\n\n    /**\r\n     * Safely unregister event listeners from the root Vue node\r\n     *\r\n     * @param {string} event\r\n     * @param {function} callback\r\n     */\n    listenOffRoot: function listenOffRoot(event, callback) {\n      this.unregisterRootListener(event, callback);\n\n      if (this.bvEventRoot) {\n        this.bvEventRoot.$off(event, callback);\n      }\n    },\n\n    /**\r\n     * Convenience method for calling `vm.$emit()` on `$root`\r\n     *\r\n     * @param {string} event\r\n     * @param {*} args\r\n     */\n    emitOnRoot: function emitOnRoot(event) {\n      if (this.bvEventRoot) {\n        var _this$bvEventRoot;\n\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        (_this$bvEventRoot = this.bvEventRoot).$emit.apply(_this$bvEventRoot, [event].concat(args));\n      }\n    }\n  }\n});","map":{"version":3,"names":["extend","arrayIncludes","keys","getEventRoot","PROP","listenOnRootMixin","computed","bvEventRoot","created","beforeDestroy","_this","forEach","event","callback","listenOffRoot","methods","registerRootListener","push","unregisterRootListener","filter","cb","listenOnRoot","$on","listenOnRootOnce","_this2","_callback","apply","arguments","$once","$off","emitOnRoot","_this$bvEventRoot","_len","length","args","Array","_key","$emit","concat"],"sources":["D:/VUE/adminDeal/node_modules/bootstrap-vue/esm/mixins/listen-on-root.js"],"sourcesContent":["import { extend } from '../vue';\r\nimport { arrayIncludes } from '../utils/array';\r\nimport { keys } from '../utils/object';\r\nimport { getEventRoot } from '../utils/get-event-root'; // --- Constants ---\r\n\r\nvar PROP = '$_rootListeners'; // --- Mixin ---\r\n// @vue/component\r\n\r\nexport var listenOnRootMixin = extend({\r\n  computed: {\r\n    bvEventRoot: function bvEventRoot() {\r\n      return getEventRoot(this);\r\n    }\r\n  },\r\n  created: function created() {\r\n    // Define non-reactive property\r\n    // Object of arrays, keyed by event name,\r\n    // where value is an array of callbacks\r\n    this[PROP] = {};\r\n  },\r\n  beforeDestroy: function beforeDestroy() {\r\n    var _this = this;\r\n\r\n    // Unregister all registered listeners\r\n    keys(this[PROP] || {}).forEach(function (event) {\r\n      _this[PROP][event].forEach(function (callback) {\r\n        _this.listenOffRoot(event, callback);\r\n      });\r\n    });\r\n    this[PROP] = null;\r\n  },\r\n  methods: {\r\n    registerRootListener: function registerRootListener(event, callback) {\r\n      if (this[PROP]) {\r\n        this[PROP][event] = this[PROP][event] || [];\r\n\r\n        if (!arrayIncludes(this[PROP][event], callback)) {\r\n          this[PROP][event].push(callback);\r\n        }\r\n      }\r\n    },\r\n    unregisterRootListener: function unregisterRootListener(event, callback) {\r\n      if (this[PROP] && this[PROP][event]) {\r\n        this[PROP][event] = this[PROP][event].filter(function (cb) {\r\n          return cb !== callback;\r\n        });\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Safely register event listeners on the root Vue node\r\n     * While Vue automatically removes listeners for individual components,\r\n     * when a component registers a listener on `$root` and is destroyed,\r\n     * this orphans a callback because the node is gone, but the `$root`\r\n     * does not clear the callback\r\n     *\r\n     * When registering a `$root` listener, it also registers the listener\r\n     * to be removed in the component's `beforeDestroy()` hook\r\n     *\r\n     * @param {string} event\r\n     * @param {function} callback\r\n     */\r\n    listenOnRoot: function listenOnRoot(event, callback) {\r\n      if (this.bvEventRoot) {\r\n        this.bvEventRoot.$on(event, callback);\r\n        this.registerRootListener(event, callback);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Safely register a `$once()` event listener on the root Vue node\r\n     * While Vue automatically removes listeners for individual components,\r\n     * when a component registers a listener on `$root` and is destroyed,\r\n     * this orphans a callback because the node is gone, but the `$root`\r\n     * does not clear the callback\r\n     *\r\n     * When registering a `$root` listener, it also registers the listener\r\n     * to be removed in the component's `beforeDestroy()` hook\r\n     *\r\n     * @param {string} event\r\n     * @param {function} callback\r\n     */\r\n    listenOnRootOnce: function listenOnRootOnce(event, callback) {\r\n      var _this2 = this;\r\n\r\n      if (this.bvEventRoot) {\r\n        var _callback = function _callback() {\r\n          _this2.unregisterRootListener(_callback); // eslint-disable-next-line node/no-callback-literal\r\n\r\n\r\n          callback.apply(void 0, arguments);\r\n        };\r\n\r\n        this.bvEventRoot.$once(event, _callback);\r\n        this.registerRootListener(event, _callback);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Safely unregister event listeners from the root Vue node\r\n     *\r\n     * @param {string} event\r\n     * @param {function} callback\r\n     */\r\n    listenOffRoot: function listenOffRoot(event, callback) {\r\n      this.unregisterRootListener(event, callback);\r\n\r\n      if (this.bvEventRoot) {\r\n        this.bvEventRoot.$off(event, callback);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Convenience method for calling `vm.$emit()` on `$root`\r\n     *\r\n     * @param {string} event\r\n     * @param {*} args\r\n     */\r\n    emitOnRoot: function emitOnRoot(event) {\r\n      if (this.bvEventRoot) {\r\n        var _this$bvEventRoot;\r\n\r\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\r\n          args[_key - 1] = arguments[_key];\r\n        }\r\n\r\n        (_this$bvEventRoot = this.bvEventRoot).$emit.apply(_this$bvEventRoot, [event].concat(args));\r\n      }\r\n    }\r\n  }\r\n});"],"mappings":"AAAA,SAASA,MAAT,QAAuB,QAAvB;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,YAAT,QAA6B,yBAA7B,C,CAAwD;;AAExD,IAAIC,IAAI,GAAG,iBAAX,C,CAA8B;AAC9B;;AAEA,OAAO,IAAIC,iBAAiB,GAAGL,MAAM,CAAC;EACpCM,QAAQ,EAAE;IACRC,WAAW,EAAE,SAASA,WAAT,GAAuB;MAClC,OAAOJ,YAAY,CAAC,IAAD,CAAnB;IACD;EAHO,CAD0B;EAMpCK,OAAO,EAAE,SAASA,OAAT,GAAmB;IAC1B;IACA;IACA;IACA,KAAKJ,IAAL,IAAa,EAAb;EACD,CAXmC;EAYpCK,aAAa,EAAE,SAASA,aAAT,GAAyB;IACtC,IAAIC,KAAK,GAAG,IAAZ,CADsC,CAGtC;;;IACAR,IAAI,CAAC,KAAKE,IAAL,KAAc,EAAf,CAAJ,CAAuBO,OAAvB,CAA+B,UAAUC,KAAV,EAAiB;MAC9CF,KAAK,CAACN,IAAD,CAAL,CAAYQ,KAAZ,EAAmBD,OAAnB,CAA2B,UAAUE,QAAV,EAAoB;QAC7CH,KAAK,CAACI,aAAN,CAAoBF,KAApB,EAA2BC,QAA3B;MACD,CAFD;IAGD,CAJD;IAKA,KAAKT,IAAL,IAAa,IAAb;EACD,CAtBmC;EAuBpCW,OAAO,EAAE;IACPC,oBAAoB,EAAE,SAASA,oBAAT,CAA8BJ,KAA9B,EAAqCC,QAArC,EAA+C;MACnE,IAAI,KAAKT,IAAL,CAAJ,EAAgB;QACd,KAAKA,IAAL,EAAWQ,KAAX,IAAoB,KAAKR,IAAL,EAAWQ,KAAX,KAAqB,EAAzC;;QAEA,IAAI,CAACX,aAAa,CAAC,KAAKG,IAAL,EAAWQ,KAAX,CAAD,EAAoBC,QAApB,CAAlB,EAAiD;UAC/C,KAAKT,IAAL,EAAWQ,KAAX,EAAkBK,IAAlB,CAAuBJ,QAAvB;QACD;MACF;IACF,CATM;IAUPK,sBAAsB,EAAE,SAASA,sBAAT,CAAgCN,KAAhC,EAAuCC,QAAvC,EAAiD;MACvE,IAAI,KAAKT,IAAL,KAAc,KAAKA,IAAL,EAAWQ,KAAX,CAAlB,EAAqC;QACnC,KAAKR,IAAL,EAAWQ,KAAX,IAAoB,KAAKR,IAAL,EAAWQ,KAAX,EAAkBO,MAAlB,CAAyB,UAAUC,EAAV,EAAc;UACzD,OAAOA,EAAE,KAAKP,QAAd;QACD,CAFmB,CAApB;MAGD;IACF,CAhBM;;IAkBP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACIQ,YAAY,EAAE,SAASA,YAAT,CAAsBT,KAAtB,EAA6BC,QAA7B,EAAuC;MACnD,IAAI,KAAKN,WAAT,EAAsB;QACpB,KAAKA,WAAL,CAAiBe,GAAjB,CAAqBV,KAArB,EAA4BC,QAA5B;QACA,KAAKG,oBAAL,CAA0BJ,KAA1B,EAAiCC,QAAjC;MACD;IACF,CApCM;;IAsCP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACIU,gBAAgB,EAAE,SAASA,gBAAT,CAA0BX,KAA1B,EAAiCC,QAAjC,EAA2C;MAC3D,IAAIW,MAAM,GAAG,IAAb;;MAEA,IAAI,KAAKjB,WAAT,EAAsB;QACpB,IAAIkB,SAAS,GAAG,SAASA,SAAT,GAAqB;UACnCD,MAAM,CAACN,sBAAP,CAA8BO,SAA9B,EADmC,CACO;;;UAG1CZ,QAAQ,CAACa,KAAT,CAAe,KAAK,CAApB,EAAuBC,SAAvB;QACD,CALD;;QAOA,KAAKpB,WAAL,CAAiBqB,KAAjB,CAAuBhB,KAAvB,EAA8Ba,SAA9B;QACA,KAAKT,oBAAL,CAA0BJ,KAA1B,EAAiCa,SAAjC;MACD;IACF,CAjEM;;IAmEP;AACJ;AACA;AACA;AACA;AACA;IACIX,aAAa,EAAE,SAASA,aAAT,CAAuBF,KAAvB,EAA8BC,QAA9B,EAAwC;MACrD,KAAKK,sBAAL,CAA4BN,KAA5B,EAAmCC,QAAnC;;MAEA,IAAI,KAAKN,WAAT,EAAsB;QACpB,KAAKA,WAAL,CAAiBsB,IAAjB,CAAsBjB,KAAtB,EAA6BC,QAA7B;MACD;IACF,CA/EM;;IAiFP;AACJ;AACA;AACA;AACA;AACA;IACIiB,UAAU,EAAE,SAASA,UAAT,CAAoBlB,KAApB,EAA2B;MACrC,IAAI,KAAKL,WAAT,EAAsB;QACpB,IAAIwB,iBAAJ;;QAEA,KAAK,IAAIC,IAAI,GAAGL,SAAS,CAACM,MAArB,EAA6BC,IAAI,GAAG,IAAIC,KAAJ,CAAUH,IAAI,GAAG,CAAP,GAAWA,IAAI,GAAG,CAAlB,GAAsB,CAAhC,CAApC,EAAwEI,IAAI,GAAG,CAApF,EAAuFA,IAAI,GAAGJ,IAA9F,EAAoGI,IAAI,EAAxG,EAA4G;UAC1GF,IAAI,CAACE,IAAI,GAAG,CAAR,CAAJ,GAAiBT,SAAS,CAACS,IAAD,CAA1B;QACD;;QAED,CAACL,iBAAiB,GAAG,KAAKxB,WAA1B,EAAuC8B,KAAvC,CAA6CX,KAA7C,CAAmDK,iBAAnD,EAAsE,CAACnB,KAAD,EAAQ0B,MAAR,CAAeJ,IAAf,CAAtE;MACD;IACF;EAjGM;AAvB2B,CAAD,CAA9B"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      auth: {\n        isAuthenticated: false,\n        user: {}\n      }\n    };\n  },\n\n  created() {\n    var user = localStorage.getItem(\"user\");\n\n    if (user !== null) {\n      user = JSON.parse(user);\n      this.auth.isAuthenticated = true;\n      this.auth.user = user;\n    }\n  },\n\n  mounted() {\n    this.emitter.emit(\"headerFooter\", false);\n    console.log('unmounted has been called');\n  },\n\n  unmounted() {\n    this.emitter.emit(\"headerFooter\", false);\n    console.log('unmounted has been called');\n  },\n\n  methods: {\n    getOrders() {\n      axios.get(this.selfDomain + 'vueseller/seller/orders?page=' + page, {\n        headers: {\n          Authorization: \"Bearer \" + this.auth.user.access_token\n        }\n      }).then(response => {\n        this.jobs = response.data.jobs.data;\n        this.totalItems = response.data.totalJobs; // console.log(response.data)\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA2HA,OAAOA,KAAP,MAAkB,OAAlB;AACA,eAAe;EACfC,IAAI,GAAE;IACF,OAAM;MACFC,IAAI,EAAC;QACDC,eAAe,EAAE,KADhB;QAEDC,IAAI,EAAE;MAFL;IADH,CAAN;EAMH,CARc;;EASXC,OAAO,GAAE;IACL,IAAID,IAAG,GAAIE,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX;;IACI,IAAGH,IAAG,KAAM,IAAZ,EAAiB;MACbA,IAAG,GAAII,IAAI,CAACC,KAAL,CAAWL,IAAX,CAAP;MACA,KAAKF,IAAL,CAAUC,eAAV,GAA4B,IAA5B;MACA,KAAKD,IAAL,CAAUE,IAAV,GAAiBA,IAAjB;IACJ;EACP,CAhBU;;EAiBXM,OAAO,GAAG;IACV,KAAKC,OAAL,CAAaC,IAAb,CAAkB,cAAlB,EAAkC,KAAlC;IACAC,OAAO,CAACC,GAAR,CAAY,2BAAZ;EACC,CApBU;;EAqBXC,SAAS,GAAG;IACZ,KAAKJ,OAAL,CAAaC,IAAb,CAAkB,cAAlB,EAAkC,KAAlC;IACAC,OAAO,CAACC,GAAR,CAAY,2BAAZ;EACC,CAxBU;;EAyBXE,OAAO,EAAC;IACJC,SAAS,GAAE;MACPjB,KAAK,CAACkB,GAAN,CAAU,KAAKC,UAAL,GAAgB,+BAAhB,GAAgDC,IAA1D,EAA+D;QACnEC,OAAO,EAAE;UACDC,aAAa,EAAE,YAAY,KAAKpB,IAAL,CAAUE,IAAV,CAAemB;QADzC;MAD0D,CAA/D,EAMHC,IANG,CAMGC,QAAD,IAAc;QAChB,KAAKC,IAAL,GAAYD,QAAQ,CAACxB,IAAT,CAAcyB,IAAd,CAAmBzB,IAA/B;QACA,KAAK0B,UAAL,GAAkBF,QAAQ,CAACxB,IAAT,CAAc2B,SAAhC,CAFgB,CAGhB;MACH,CAVG,EAWHC,KAXG,CAWIC,GAAD,IAAO;QACVjB,OAAO,CAACC,GAAR,CAAYgB,GAAZ;MACH,CAbG;IAcJ;;EAhBI;AAzBG,CAAf","names":["axios","data","auth","isAuthenticated","user","created","localStorage","getItem","JSON","parse","mounted","emitter","emit","console","log","unmounted","methods","getOrders","get","selfDomain","page","headers","Authorization","access_token","then","response","jobs","totalItems","totalJobs","catch","err"],"sourceRoot":"","sources":["F:\\adminDeal\\src\\components\\pages\\sellers\\pages\\orders\\index.vue"],"sourcesContent":["<template>\r\n  <div class=\"card\">\r\n        <form id=\"sort_orders\" action=\"\" method=\"GET\">\r\n          <div class=\"card-header row gutters-5\">\r\n            <div class=\"col text-center text-md-left\">\r\n              <h5 class=\"mb-md-0 h6\">Orders</h5>\r\n            </div>\r\n              <div class=\"col-md-3 ml-auto\">\r\n                  <select class=\"form-control aiz-selectpicker\" data-placeholder=\"Filter by Payment Status\" name=\"payment_status\" onchange=\"sort_orders()\">\r\n                      <option value=\"\">Filter by Payment Status</option>\r\n                      <option value=\"paid\">Paid</option>\r\n                      <option value=\"unpaid\">Un-Paid</option>\r\n                  </select>\r\n              </div>\r\n\r\n              <div class=\"col-md-3 ml-auto\">\r\n                <select class=\"form-control aiz-selectpicker\" data-placeholder=\"Filter by Payment Status\" name=\"delivery_status\" onchange=\"sort_orders()\">\r\n                    <option value=\"\">Filter by Deliver Status</option>\r\n                    <option value=\"pending\">Pending</option>\r\n                    <option value=\"confirmed\">Confirmed</option>\r\n                    <option value=\"on_delivery\">On delivery</option>\r\n                    <option value=\"delivered\">Delivered</option>\r\n                </select>\r\n              </div>\r\n              <div class=\"col-md-3\">\r\n                <div class=\"from-group mb-0\">\r\n                    <input type=\"text\" class=\"form-control\" id=\"search\" name=\"search\" placeholder=\"Type Order code & hit Enter') }}\">\r\n                </div>\r\n              </div>\r\n          </div>\r\n        </form>\r\n\r\n        <!-- @if (count($orders) > 0) -->\r\n            <div class=\"card-body p-3\">\r\n                <table class=\"table  mb-0\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>Order Code</th>\r\n                            <th data-breakpoints=\"lg\">Num. of Products</th>\r\n                            <th data-breakpoints=\"lg\">Customer</th>\r\n                            <th data-breakpoints=\"md\">Amount</th>\r\n                            <th data-breakpoints=\"lg\">Delivery Status</th>\r\n                            <th>Payment Status</th>\r\n                            <th>Objection</th>\r\n                            <th class=\"text-right\">Options</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <!-- @foreach ($orders as $key => $order_id)\r\n                            @php\r\n                                $order = \\App\\Models\\Order::find($order_id->id);\r\n                            @endphp\r\n                            @if($order != null) -->\r\n                                <tr>\r\n                                    <td>\r\n                                      1\r\n                                    </td>\r\n                                    <td>\r\n                                        <a href=\"\" onclick=\"show_order_details({{ $order->id }})\">order->code</a>\r\n                                    </td>\r\n                                    <td>\r\n                                        1\r\n                                    </td>\r\n                                    <td>\r\n                                        <!-- @if ($order->user_id != null) -->\r\n                                            order->user)->name\r\n                                        <!-- @else -->\r\n                                            Guest ()\r\n                                        <!-- @endif -->\r\n                                    </td>\r\n                                    <td>\r\n                                       order->grand_total\r\n                                    </td>\r\n                                    <td>\r\n                                        <!-- @php\r\n                                            $status = $order->delivery_status;\r\n                                        @endphp -->\r\n                                         status\r\n                                    </td>\r\n                                    <td>\r\n                                        <!-- @if ($order->payment_status == 'paid') -->\r\n                                            <span class=\"badge badge-inline badge-success\">Paid</span>\r\n                                        <!-- @else -->\r\n                                            <span class=\"badge badge-inline badge-danger\">Unpaid</span>\r\n                                        <!-- @endif -->\r\n                                    </td>\r\n                                     <td>\r\n                            <!-- @php\r\n                                           $today= Carbon\\Carbon::today();\r\n                                           $diffdate = $today->diffInDays($order->updated_at);\r\n                                        @endphp -->\r\n\r\n                            <!-- @if($order->dontpay==null && $order->payment_status == 'paid' &&  $order->delivery_status== 'delivered' && $diffdate<2) -->\r\n\r\n                            <span class=\"badge badge-inline badge-success\">No Objection</span>\r\n                            <!-- @endif\r\n                            @if($order->dontpay!=null && $order->payment_status == 'paid' &&  $order->delivery_status== 'delivered' && $diffdate<2) -->\r\n                            <span class=\"badge badge-inline badge-danger\">DontPay Requested</span>\r\n                            <!-- @endif -->\r\n                        </td>\r\n                                    <td class=\"text-right\">\r\n                                        <a href=\"'seller.orders.show\" class=\"btn btn-soft-info btn-icon btn-circle btn-sm\" title=\"Order Details\">\r\n                                            <i class=\"las la-eye\"></i>\r\n                                        </a>\r\n                                        <a href=\"seller.invoice.download\" class=\"btn btn-soft-warning btn-icon btn-circle btn-sm\" title=\"Download Invoice\">\r\n                                            <i class=\"las la-download\"></i>\r\n                                        </a>\r\n                                    </td>\r\n                                </tr>\r\n                            <!-- @endif\r\n                        @endforeach -->\r\n                    </tbody>\r\n                </table>\r\n                <div class=\"aiz-pagination\">\r\n                    <!-- {{ $orders->links() }} -->\r\n              \t</div>\r\n            </div>\r\n        <!-- @endif -->\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nexport default {\r\ndata(){\r\n    return{\r\n        auth:{\r\n            isAuthenticated: false,\r\n            user: {},\r\n            },\r\n    }\r\n},\r\n    created(){\r\n        var user = localStorage.getItem(\"user\");\r\n            if(user !== null){\r\n                user = JSON.parse(user);\r\n                this.auth.isAuthenticated = true;\r\n                this.auth.user = user;\r\n            }\r\n    },\r\n    mounted() {\r\n    this.emitter.emit(\"headerFooter\", false);\r\n    console.log('unmounted has been called'); \r\n    },\r\n    unmounted() {\r\n    this.emitter.emit(\"headerFooter\", false);\r\n    console.log('unmounted has been called'); \r\n    },\r\n    methods:{\r\n        getOrders(){\r\n            axios.get(this.selfDomain+'vueseller/seller/orders?page='+page,{  \r\n        headers: {\r\n                Authorization: \"Bearer \" + this.auth.user.access_token,\r\n          }\r\n\r\n        })\r\n        .then((response) => {    \r\n            this.jobs = response.data.jobs.data;\r\n            this.totalItems = response.data.totalJobs;\r\n            // console.log(response.data)\r\n        })\r\n        .catch((err)=>{\r\n            console.log(err)\r\n        })\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}
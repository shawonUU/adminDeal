{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n} // Tooltip \"Class\" (Built as a renderless Vue instance)\n//\n// Handles trigger events, etc.\n// Instantiates template on demand\n\n\nimport { COMPONENT_UID_KEY, extend } from '../../../vue';\nimport { NAME_MODAL, NAME_TOOLTIP_HELPER } from '../../../constants/components';\nimport { EVENT_NAME_DISABLE, EVENT_NAME_DISABLED, EVENT_NAME_ENABLE, EVENT_NAME_ENABLED, EVENT_NAME_FOCUSIN, EVENT_NAME_FOCUSOUT, EVENT_NAME_HIDDEN, EVENT_NAME_HIDE, EVENT_NAME_MOUSEENTER, EVENT_NAME_MOUSELEAVE, EVENT_NAME_SHOW, EVENT_NAME_SHOWN, EVENT_OPTIONS_NO_CAPTURE, HOOK_EVENT_NAME_BEFORE_DESTROY, HOOK_EVENT_NAME_DESTROYED } from '../../../constants/events';\nimport { useParentMixin } from '../../../mixins/use-parent';\nimport { arrayIncludes, concat, from as arrayFrom } from '../../../utils/array';\nimport { getInstanceFromElement } from '../../../utils/element-to-vue-instance-registry';\nimport { attemptFocus, closest, contains, getAttr, getById, hasAttr, hasClass, isDisabled, isElement, isVisible, removeAttr, requestAF, select, setAttr } from '../../../utils/dom';\nimport { eventOff, eventOn, eventOnOff, getRootActionEventName, getRootEventName } from '../../../utils/events';\nimport { getScopeId } from '../../../utils/get-scope-id';\nimport { identity } from '../../../utils/identity';\nimport { isFunction, isNumber, isPlainObject, isString, isUndefined, isUndefinedOrNull } from '../../../utils/inspect';\nimport { looseEqual } from '../../../utils/loose-equal';\nimport { mathMax } from '../../../utils/math';\nimport { noop } from '../../../utils/noop';\nimport { toInteger } from '../../../utils/number';\nimport { keys } from '../../../utils/object';\nimport { warn } from '../../../utils/warn';\nimport { BvEvent } from '../../../utils/bv-event.class';\nimport { createNewChildComponent } from '../../../utils/create-new-child-component';\nimport { listenOnRootMixin } from '../../../mixins/listen-on-root';\nimport { BVTooltipTemplate } from './bv-tooltip-template'; // --- Constants ---\n// Modal container selector for appending tooltip/popover\n\nvar MODAL_SELECTOR = '.modal-content'; // Modal `$root` hidden event\n\nvar ROOT_EVENT_NAME_MODAL_HIDDEN = getRootEventName(NAME_MODAL, EVENT_NAME_HIDDEN); // Sidebar container selector for appending tooltip/popover\n\nvar SIDEBAR_SELECTOR = '.b-sidebar'; // For finding the container to append to\n\nvar CONTAINER_SELECTOR = [MODAL_SELECTOR, SIDEBAR_SELECTOR].join(', '); // For dropdown sniffing\n\nvar DROPDOWN_CLASS = 'dropdown';\nvar DROPDOWN_OPEN_SELECTOR = '.dropdown-menu.show'; // Data attribute to temporary store the `title` attribute's value\n\nvar DATA_TITLE_ATTR = 'data-original-title'; // Data specific to popper and template\n// We don't use props, as we need reactivity (we can't pass reactive props)\n\nvar templateData = {\n  // Text string or Scoped slot function\n  title: '',\n  // Text string or Scoped slot function\n  content: '',\n  // String\n  variant: null,\n  // String, Array, Object\n  customClass: null,\n  // String or array of Strings (overwritten by BVPopper)\n  triggers: '',\n  // String (overwritten by BVPopper)\n  placement: 'auto',\n  // String or array of strings\n  fallbackPlacement: 'flip',\n  // Element or Component reference (or function that returns element) of\n  // the element that will have the trigger events bound, and is also\n  // default element for positioning\n  target: null,\n  // HTML ID, Element or Component reference\n  container: null,\n  // 'body'\n  // Boolean\n  noFade: false,\n  // 'scrollParent', 'viewport', 'window', Element, or Component reference\n  boundary: 'scrollParent',\n  // Tooltip/popover will try and stay away from\n  // boundary edge by this many pixels (Number)\n  boundaryPadding: 5,\n  // Arrow offset (Number)\n  offset: 0,\n  // Hover/focus delay (Number or Object)\n  delay: 0,\n  // Arrow of Tooltip/popover will try and stay away from\n  // the edge of tooltip/popover edge by this many pixels\n  arrowPadding: 6,\n  // Interactive state (Boolean)\n  interactive: true,\n  // Disabled state (Boolean)\n  disabled: false,\n  // ID to use for tooltip/popover\n  id: null,\n  // Flag used by directives only, for HTML content\n  html: false\n}; // --- Main component ---\n// @vue/component\n\nexport var BVTooltip = /*#__PURE__*/extend({\n  name: NAME_TOOLTIP_HELPER,\n  mixins: [listenOnRootMixin, useParentMixin],\n  data: function data() {\n    return _objectSpread(_objectSpread({}, templateData), {}, {\n      // State management data\n      activeTrigger: {\n        // manual: false,\n        hover: false,\n        click: false,\n        focus: false\n      },\n      localShow: false\n    });\n  },\n  computed: {\n    templateType: function templateType() {\n      // Overwritten by BVPopover\n      return 'tooltip';\n    },\n    computedId: function computedId() {\n      return this.id || \"__bv_\".concat(this.templateType, \"_\").concat(this[COMPONENT_UID_KEY], \"__\");\n    },\n    computedDelay: function computedDelay() {\n      // Normalizes delay into object form\n      var delay = {\n        show: 0,\n        hide: 0\n      };\n\n      if (isPlainObject(this.delay)) {\n        delay.show = mathMax(toInteger(this.delay.show, 0), 0);\n        delay.hide = mathMax(toInteger(this.delay.hide, 0), 0);\n      } else if (isNumber(this.delay) || isString(this.delay)) {\n        delay.show = delay.hide = mathMax(toInteger(this.delay, 0), 0);\n      }\n\n      return delay;\n    },\n    computedTriggers: function computedTriggers() {\n      // Returns the triggers in sorted array form\n      // TODO: Switch this to object form for easier lookup\n      return concat(this.triggers).filter(identity).join(' ').trim().toLowerCase().split(/\\s+/).sort();\n    },\n    isWithActiveTrigger: function isWithActiveTrigger() {\n      for (var trigger in this.activeTrigger) {\n        if (this.activeTrigger[trigger]) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n    computedTemplateData: function computedTemplateData() {\n      var title = this.title,\n          content = this.content,\n          variant = this.variant,\n          customClass = this.customClass,\n          noFade = this.noFade,\n          interactive = this.interactive;\n      return {\n        title: title,\n        content: content,\n        variant: variant,\n        customClass: customClass,\n        noFade: noFade,\n        interactive: interactive\n      };\n    }\n  },\n  watch: {\n    computedTriggers: function computedTriggers(newTriggers, oldTriggers) {\n      var _this = this; // Triggers have changed, so re-register them\n\n      /* istanbul ignore next */\n\n\n      if (!looseEqual(newTriggers, oldTriggers)) {\n        this.$nextTick(function () {\n          // Disable trigger listeners\n          _this.unListen(); // Clear any active triggers that are no longer in the list of triggers\n\n\n          oldTriggers.forEach(function (trigger) {\n            if (!arrayIncludes(newTriggers, trigger)) {\n              if (_this.activeTrigger[trigger]) {\n                _this.activeTrigger[trigger] = false;\n              }\n            }\n          }); // Re-enable the trigger listeners\n\n          _this.listen();\n        });\n      }\n    },\n    computedTemplateData: function computedTemplateData() {\n      // If any of the while open reactive \"props\" change,\n      // ensure that the template updates accordingly\n      this.handleTemplateUpdate();\n    },\n    title: function title(newValue, oldValue) {\n      // Make sure to hide the tooltip when the title is set empty\n      if (newValue !== oldValue && !newValue) {\n        this.hide();\n      }\n    },\n    disabled: function disabled(newValue) {\n      if (newValue) {\n        this.disable();\n      } else {\n        this.enable();\n      }\n    }\n  },\n  created: function created() {\n    var _this2 = this; // Create non-reactive properties\n\n\n    this.$_tip = null;\n    this.$_hoverTimeout = null;\n    this.$_hoverState = '';\n    this.$_visibleInterval = null;\n    this.$_enabled = !this.disabled;\n    this.$_noop = noop.bind(this); // Destroy ourselves when the parent is destroyed\n\n    if (this.bvParent) {\n      this.bvParent.$once(HOOK_EVENT_NAME_BEFORE_DESTROY, function () {\n        _this2.$nextTick(function () {\n          // In a `requestAF()` to release control back to application\n          requestAF(function () {\n            _this2.$destroy();\n          });\n        });\n      });\n    }\n\n    this.$nextTick(function () {\n      var target = _this2.getTarget();\n\n      if (target && contains(document.body, target)) {\n        // Copy the parent's scoped style attribute\n        _this2.scopeId = getScopeId(_this2.bvParent); // Set up all trigger handlers and listeners\n\n        _this2.listen();\n      } else {\n        /* istanbul ignore next */\n        warn(isString(_this2.target) ? \"Unable to find target element by ID \\\"#\".concat(_this2.target, \"\\\" in document.\") : 'The provided target is no valid HTML element.', _this2.templateType);\n      }\n    });\n  },\n\n  /* istanbul ignore next */\n  updated: function updated() {\n    // Usually called when the slots/data changes\n    this.$nextTick(this.handleTemplateUpdate);\n  },\n\n  /* istanbul ignore next */\n  deactivated: function deactivated() {\n    // In a keepalive that has been deactivated, so hide\n    // the tooltip/popover if it is showing\n    this.forceHide();\n  },\n  beforeDestroy: function beforeDestroy() {\n    // Remove all handler/listeners\n    this.unListen();\n    this.setWhileOpenListeners(false); // Clear any timeouts/intervals\n\n    this.clearHoverTimeout();\n    this.clearVisibilityInterval(); // Destroy the template\n\n    this.destroyTemplate(); // Remove any other private properties created during create\n\n    this.$_noop = null;\n  },\n  methods: {\n    // --- Methods for creating and destroying the template ---\n    getTemplate: function getTemplate() {\n      // Overridden by BVPopover\n      return BVTooltipTemplate;\n    },\n    updateData: function updateData() {\n      var _this3 = this;\n\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}; // Method for updating popper/template data\n      // We only update data if it exists, and has not changed\n\n      var titleUpdated = false;\n      keys(templateData).forEach(function (prop) {\n        if (!isUndefined(data[prop]) && _this3[prop] !== data[prop]) {\n          _this3[prop] = data[prop];\n\n          if (prop === 'title') {\n            titleUpdated = true;\n          }\n        }\n      }); // If the title has updated, we may need to handle the `title`\n      // attribute on the trigger target\n      // We only do this while the template is open\n\n      if (titleUpdated && this.localShow) {\n        this.fixTitle();\n      }\n    },\n    createTemplateAndShow: function createTemplateAndShow() {\n      // Creates the template instance and show it\n      var container = this.getContainer();\n      var Template = this.getTemplate();\n      var $tip = this.$_tip = createNewChildComponent(this, Template, {\n        // The following is not reactive to changes in the props data\n        propsData: {\n          // These values cannot be changed while template is showing\n          id: this.computedId,\n          html: this.html,\n          placement: this.placement,\n          fallbackPlacement: this.fallbackPlacement,\n          target: this.getPlacementTarget(),\n          boundary: this.getBoundary(),\n          // Ensure the following are integers\n          offset: toInteger(this.offset, 0),\n          arrowPadding: toInteger(this.arrowPadding, 0),\n          boundaryPadding: toInteger(this.boundaryPadding, 0)\n        }\n      }); // We set the initial reactive data (values that can be changed while open)\n\n      this.handleTemplateUpdate(); // Template transition phase events (handled once only)\n      // When the template has mounted, but not visibly shown yet\n\n      $tip.$once(EVENT_NAME_SHOW, this.onTemplateShow); // When the template has completed showing\n\n      $tip.$once(EVENT_NAME_SHOWN, this.onTemplateShown); // When the template has started to hide\n\n      $tip.$once(EVENT_NAME_HIDE, this.onTemplateHide); // When the template has completed hiding\n\n      $tip.$once(EVENT_NAME_HIDDEN, this.onTemplateHidden); // When the template gets destroyed for any reason\n\n      $tip.$once(HOOK_EVENT_NAME_DESTROYED, this.destroyTemplate); // Convenience events from template\n      // To save us from manually adding/removing DOM\n      // listeners to tip element when it is open\n\n      $tip.$on(EVENT_NAME_FOCUSIN, this.handleEvent);\n      $tip.$on(EVENT_NAME_FOCUSOUT, this.handleEvent);\n      $tip.$on(EVENT_NAME_MOUSEENTER, this.handleEvent);\n      $tip.$on(EVENT_NAME_MOUSELEAVE, this.handleEvent); // Mount (which triggers the `show`)\n\n      $tip.$mount(container.appendChild(document.createElement('div'))); // Template will automatically remove its markup from DOM when hidden\n    },\n    hideTemplate: function hideTemplate() {\n      // Trigger the template to start hiding\n      // The template will emit the `hide` event after this and\n      // then emit the `hidden` event once it is fully hidden\n      // The `hook:destroyed` will also be called (safety measure)\n      this.$_tip && this.$_tip.hide(); // Clear out any stragging active triggers\n\n      this.clearActiveTriggers(); // Reset the hover state\n\n      this.$_hoverState = '';\n    },\n    // Destroy the template instance and reset state\n    destroyTemplate: function destroyTemplate() {\n      this.setWhileOpenListeners(false);\n      this.clearHoverTimeout();\n      this.$_hoverState = '';\n      this.clearActiveTriggers();\n      this.localPlacementTarget = null;\n\n      try {\n        this.$_tip.$destroy();\n      } catch (_unused) {}\n\n      this.$_tip = null;\n      this.removeAriaDescribedby();\n      this.restoreTitle();\n      this.localShow = false;\n    },\n    getTemplateElement: function getTemplateElement() {\n      return this.$_tip ? this.$_tip.$el : null;\n    },\n    handleTemplateUpdate: function handleTemplateUpdate() {\n      var _this4 = this; // Update our template title/content \"props\"\n      // So that the template updates accordingly\n\n\n      var $tip = this.$_tip;\n\n      if ($tip) {\n        var props = ['title', 'content', 'variant', 'customClass', 'noFade', 'interactive']; // Only update the values if they have changed\n\n        props.forEach(function (prop) {\n          if ($tip[prop] !== _this4[prop]) {\n            $tip[prop] = _this4[prop];\n          }\n        });\n      }\n    },\n    // --- Show/Hide handlers ---\n    // Show the tooltip\n    show: function show() {\n      var target = this.getTarget();\n\n      if (!target || !contains(document.body, target) || !isVisible(target) || this.dropdownOpen() || (isUndefinedOrNull(this.title) || this.title === '') && (isUndefinedOrNull(this.content) || this.content === '')) {\n        // If trigger element isn't in the DOM or is not visible, or\n        // is on an open dropdown toggle, or has no content, then\n        // we exit without showing\n        return;\n      } // If tip already exists, exit early\n\n\n      if (this.$_tip || this.localShow) {\n        /* istanbul ignore next */\n        return;\n      } // In the process of showing\n\n\n      this.localShow = true; // Create a cancelable BvEvent\n\n      var showEvent = this.buildEvent(EVENT_NAME_SHOW, {\n        cancelable: true\n      });\n      this.emitEvent(showEvent); // Don't show if event cancelled\n\n      /* istanbul ignore if */\n\n      if (showEvent.defaultPrevented) {\n        // Destroy the template (if for some reason it was created)\n        this.destroyTemplate();\n        return;\n      } // Fix the title attribute on target\n\n\n      this.fixTitle(); // Set aria-describedby on target\n\n      this.addAriaDescribedby(); // Create and show the tooltip\n\n      this.createTemplateAndShow();\n    },\n    hide: function hide() {\n      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false; // Hide the tooltip\n\n      var tip = this.getTemplateElement();\n      /* istanbul ignore if */\n\n      if (!tip || !this.localShow) {\n        this.restoreTitle();\n        return;\n      } // Emit cancelable BvEvent 'hide'\n      // We disable cancelling if `force` is true\n\n\n      var hideEvent = this.buildEvent(EVENT_NAME_HIDE, {\n        cancelable: !force\n      });\n      this.emitEvent(hideEvent);\n      /* istanbul ignore if: ignore for now */\n\n      if (hideEvent.defaultPrevented) {\n        // Don't hide if event cancelled\n        return;\n      } // Tell the template to hide\n\n\n      this.hideTemplate();\n    },\n    forceHide: function forceHide() {\n      // Forcefully hides/destroys the template, regardless of any active triggers\n      var tip = this.getTemplateElement();\n\n      if (!tip || !this.localShow) {\n        /* istanbul ignore next */\n        return;\n      } // Disable while open listeners/watchers\n      // This is also done in the template `hide` event handler\n\n\n      this.setWhileOpenListeners(false); // Clear any hover enter/leave event\n\n      this.clearHoverTimeout();\n      this.$_hoverState = '';\n      this.clearActiveTriggers(); // Disable the fade animation on the template\n\n      if (this.$_tip) {\n        this.$_tip.noFade = true;\n      } // Hide the tip (with force = true)\n\n\n      this.hide(true);\n    },\n    enable: function enable() {\n      this.$_enabled = true; // Create a non-cancelable BvEvent\n\n      this.emitEvent(this.buildEvent(EVENT_NAME_ENABLED));\n    },\n    disable: function disable() {\n      this.$_enabled = false; // Create a non-cancelable BvEvent\n\n      this.emitEvent(this.buildEvent(EVENT_NAME_DISABLED));\n    },\n    // --- Handlers for template events ---\n    // When template is inserted into DOM, but not yet shown\n    onTemplateShow: function onTemplateShow() {\n      // Enable while open listeners/watchers\n      this.setWhileOpenListeners(true);\n    },\n    // When template show transition completes\n    onTemplateShown: function onTemplateShown() {\n      var prevHoverState = this.$_hoverState;\n      this.$_hoverState = '';\n      /* istanbul ignore next: occasional Node 10 coverage error */\n\n      if (prevHoverState === 'out') {\n        this.leave(null);\n      } // Emit a non-cancelable BvEvent 'shown'\n\n\n      this.emitEvent(this.buildEvent(EVENT_NAME_SHOWN));\n    },\n    // When template is starting to hide\n    onTemplateHide: function onTemplateHide() {\n      // Disable while open listeners/watchers\n      this.setWhileOpenListeners(false);\n    },\n    // When template has completed closing (just before it self destructs)\n    onTemplateHidden: function onTemplateHidden() {\n      // Destroy the template\n      this.destroyTemplate(); // Emit a non-cancelable BvEvent 'shown'\n\n      this.emitEvent(this.buildEvent(EVENT_NAME_HIDDEN));\n    },\n    // --- Helper methods ---\n    getTarget: function getTarget() {\n      var target = this.target;\n\n      if (isString(target)) {\n        target = getById(target.replace(/^#/, ''));\n      } else if (isFunction(target)) {\n        target = target();\n      } else if (target) {\n        target = target.$el || target;\n      }\n\n      return isElement(target) ? target : null;\n    },\n    getPlacementTarget: function getPlacementTarget() {\n      // This is the target that the tooltip will be placed on, which may not\n      // necessarily be the same element that has the trigger event listeners\n      // For now, this is the same as target\n      // TODO:\n      //   Add in child selector support\n      //   Add in visibility checks for this element\n      //   Fallback to target if not found\n      return this.getTarget();\n    },\n    getTargetId: function getTargetId() {\n      // Returns the ID of the trigger element\n      var target = this.getTarget();\n      return target && target.id ? target.id : null;\n    },\n    getContainer: function getContainer() {\n      // Handle case where container may be a component ref\n      var container = this.container ? this.container.$el || this.container : false;\n      var body = document.body;\n      var target = this.getTarget(); // If we are in a modal, we append to the modal, If we\n      // are in a sidebar, we append to the sidebar, else append\n      // to body, unless a container is specified\n      // TODO:\n      //   Template should periodically check to see if it is in dom\n      //   And if not, self destruct (if container got v-if'ed out of DOM)\n      //   Or this could possibly be part of the visibility check\n\n      return container === false ? closest(CONTAINER_SELECTOR, target) || body :\n      /*istanbul ignore next */\n      isString(container) ?\n      /*istanbul ignore next */\n      getById(container.replace(/^#/, '')) || body :\n      /*istanbul ignore next */\n      body;\n    },\n    getBoundary: function getBoundary() {\n      return this.boundary ? this.boundary.$el || this.boundary : 'scrollParent';\n    },\n    isInModal: function isInModal() {\n      var target = this.getTarget();\n      return target && closest(MODAL_SELECTOR, target);\n    },\n    isDropdown: function isDropdown() {\n      // Returns true if trigger is a dropdown\n      var target = this.getTarget();\n      return target && hasClass(target, DROPDOWN_CLASS);\n    },\n    dropdownOpen: function dropdownOpen() {\n      // Returns true if trigger is a dropdown and the dropdown menu is open\n      var target = this.getTarget();\n      return this.isDropdown() && target && select(DROPDOWN_OPEN_SELECTOR, target);\n    },\n    clearHoverTimeout: function clearHoverTimeout() {\n      clearTimeout(this.$_hoverTimeout);\n      this.$_hoverTimeout = null;\n    },\n    clearVisibilityInterval: function clearVisibilityInterval() {\n      clearInterval(this.$_visibleInterval);\n      this.$_visibleInterval = null;\n    },\n    clearActiveTriggers: function clearActiveTriggers() {\n      for (var trigger in this.activeTrigger) {\n        this.activeTrigger[trigger] = false;\n      }\n    },\n    addAriaDescribedby: function addAriaDescribedby() {\n      // Add aria-describedby on trigger element, without removing any other IDs\n      var target = this.getTarget();\n      var desc = getAttr(target, 'aria-describedby') || '';\n      desc = desc.split(/\\s+/).concat(this.computedId).join(' ').trim(); // Update/add aria-described by\n\n      setAttr(target, 'aria-describedby', desc);\n    },\n    removeAriaDescribedby: function removeAriaDescribedby() {\n      var _this5 = this; // Remove aria-describedby on trigger element, without removing any other IDs\n\n\n      var target = this.getTarget();\n      var desc = getAttr(target, 'aria-describedby') || '';\n      desc = desc.split(/\\s+/).filter(function (d) {\n        return d !== _this5.computedId;\n      }).join(' ').trim(); // Update or remove aria-describedby\n\n      if (desc) {\n        /* istanbul ignore next */\n        setAttr(target, 'aria-describedby', desc);\n      } else {\n        removeAttr(target, 'aria-describedby');\n      }\n    },\n    fixTitle: function fixTitle() {\n      // If the target has a `title` attribute,\n      // remove it and store it on a data attribute\n      var target = this.getTarget();\n\n      if (hasAttr(target, 'title')) {\n        // Get `title` attribute value and remove it from target\n        var title = getAttr(target, 'title');\n        setAttr(target, 'title', ''); // Only set the data attribute when the value is truthy\n\n        if (title) {\n          setAttr(target, DATA_TITLE_ATTR, title);\n        }\n      }\n    },\n    restoreTitle: function restoreTitle() {\n      // If the target had a `title` attribute,\n      // restore it and remove the data attribute\n      var target = this.getTarget();\n\n      if (hasAttr(target, DATA_TITLE_ATTR)) {\n        // Get data attribute value and remove it from target\n        var title = getAttr(target, DATA_TITLE_ATTR);\n        removeAttr(target, DATA_TITLE_ATTR); // Only restore the `title` attribute when the value is truthy\n\n        if (title) {\n          setAttr(target, 'title', title);\n        }\n      }\n    },\n    // --- BvEvent helpers ---\n    buildEvent: function buildEvent(type) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; // Defaults to a non-cancellable event\n\n      return new BvEvent(type, _objectSpread({\n        cancelable: false,\n        target: this.getTarget(),\n        relatedTarget: this.getTemplateElement() || null,\n        componentId: this.computedId,\n        vueTarget: this\n      }, options));\n    },\n    emitEvent: function emitEvent(bvEvent) {\n      var type = bvEvent.type;\n      this.emitOnRoot(getRootEventName(this.templateType, type), bvEvent);\n      this.$emit(type, bvEvent);\n    },\n    // --- Event handler setup methods ---\n    listen: function listen() {\n      var _this6 = this; // Enable trigger event handlers\n\n\n      var el = this.getTarget();\n\n      if (!el) {\n        /* istanbul ignore next */\n        return;\n      } // Listen for global show/hide events\n\n\n      this.setRootListener(true); // Set up our listeners on the target trigger element\n\n      this.computedTriggers.forEach(function (trigger) {\n        if (trigger === 'click') {\n          eventOn(el, 'click', _this6.handleEvent, EVENT_OPTIONS_NO_CAPTURE);\n        } else if (trigger === 'focus') {\n          eventOn(el, 'focusin', _this6.handleEvent, EVENT_OPTIONS_NO_CAPTURE);\n          eventOn(el, 'focusout', _this6.handleEvent, EVENT_OPTIONS_NO_CAPTURE);\n        } else if (trigger === 'blur') {\n          // Used to close $tip when element loses focus\n\n          /* istanbul ignore next */\n          eventOn(el, 'focusout', _this6.handleEvent, EVENT_OPTIONS_NO_CAPTURE);\n        } else if (trigger === 'hover') {\n          eventOn(el, 'mouseenter', _this6.handleEvent, EVENT_OPTIONS_NO_CAPTURE);\n          eventOn(el, 'mouseleave', _this6.handleEvent, EVENT_OPTIONS_NO_CAPTURE);\n        }\n      }, this);\n    },\n\n    /* istanbul ignore next */\n    unListen: function unListen() {\n      var _this7 = this; // Remove trigger event handlers\n\n\n      var events = ['click', 'focusin', 'focusout', 'mouseenter', 'mouseleave'];\n      var target = this.getTarget(); // Stop listening for global show/hide/enable/disable events\n\n      this.setRootListener(false); // Clear out any active target listeners\n\n      events.forEach(function (event) {\n        target && eventOff(target, event, _this7.handleEvent, EVENT_OPTIONS_NO_CAPTURE);\n      }, this);\n    },\n    setRootListener: function setRootListener(on) {\n      // Listen for global `bv::{hide|show}::{tooltip|popover}` hide request event\n      var method = on ? 'listenOnRoot' : 'listenOffRoot';\n      var type = this.templateType;\n      this[method](getRootActionEventName(type, EVENT_NAME_HIDE), this.doHide);\n      this[method](getRootActionEventName(type, EVENT_NAME_SHOW), this.doShow);\n      this[method](getRootActionEventName(type, EVENT_NAME_DISABLE), this.doDisable);\n      this[method](getRootActionEventName(type, EVENT_NAME_ENABLE), this.doEnable);\n    },\n    setWhileOpenListeners: function setWhileOpenListeners(on) {\n      // Events that are only registered when the template is showing\n      // Modal close events\n      this.setModalListener(on); // Dropdown open events (if we are attached to a dropdown)\n\n      this.setDropdownListener(on); // Periodic $element visibility check\n      // For handling when tip target is in <keepalive>, tabs, carousel, etc\n\n      this.visibleCheck(on); // On-touch start listeners\n\n      this.setOnTouchStartListener(on);\n    },\n    // Handler for periodic visibility check\n    visibleCheck: function visibleCheck(on) {\n      var _this8 = this;\n\n      this.clearVisibilityInterval();\n      var target = this.getTarget();\n\n      if (on) {\n        this.$_visibleInterval = setInterval(function () {\n          var tip = _this8.getTemplateElement();\n\n          if (tip && _this8.localShow && (!target.parentNode || !isVisible(target))) {\n            // Target element is no longer visible or not in DOM, so force-hide the tooltip\n            _this8.forceHide();\n          }\n        }, 100);\n      }\n    },\n    setModalListener: function setModalListener(on) {\n      // Handle case where tooltip/target is in a modal\n      if (this.isInModal()) {\n        // We can listen for modal hidden events on `$root`\n        this[on ? 'listenOnRoot' : 'listenOffRoot'](ROOT_EVENT_NAME_MODAL_HIDDEN, this.forceHide);\n      }\n    },\n\n    /* istanbul ignore next: JSDOM doesn't support `ontouchstart` */\n    setOnTouchStartListener: function setOnTouchStartListener(on) {\n      var _this9 = this; // If this is a touch-enabled device we add extra empty\n      // `mouseover` listeners to the body's immediate children\n      // Only needed because of broken event delegation on iOS\n      // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n\n\n      if ('ontouchstart' in document.documentElement) {\n        arrayFrom(document.body.children).forEach(function (el) {\n          eventOnOff(on, el, 'mouseover', _this9.$_noop);\n        });\n      }\n    },\n    setDropdownListener: function setDropdownListener(on) {\n      var target = this.getTarget();\n\n      if (!target || !this.bvEventRoot || !this.isDropdown) {\n        return;\n      } // We can listen for dropdown shown events on its instance\n      // TODO:\n      //   We could grab the ID from the dropdown, and listen for\n      //   $root events for that particular dropdown id\n      //   Dropdown shown and hidden events will need to emit\n      //   Note: Dropdown auto-ID happens in a `$nextTick()` after mount\n      //         So the ID lookup would need to be done in a `$nextTick()`\n\n\n      var instance = getInstanceFromElement(target);\n\n      if (instance) {\n        instance[on ? '$on' : '$off'](EVENT_NAME_SHOWN, this.forceHide);\n      }\n    },\n    // --- Event handlers ---\n    handleEvent: function handleEvent(event) {\n      // General trigger event handler\n      // target is the trigger element\n      var target = this.getTarget();\n\n      if (!target || isDisabled(target) || !this.$_enabled || this.dropdownOpen()) {\n        // If disabled or not enabled, or if a dropdown that is open, don't do anything\n        // If tip is shown before element gets disabled, then tip will not\n        // close until no longer disabled or forcefully closed\n        return;\n      }\n\n      var type = event.type;\n      var triggers = this.computedTriggers;\n\n      if (type === 'click' && arrayIncludes(triggers, 'click')) {\n        this.click(event);\n      } else if (type === 'mouseenter' && arrayIncludes(triggers, 'hover')) {\n        // `mouseenter` is a non-bubbling event\n        this.enter(event);\n      } else if (type === 'focusin' && arrayIncludes(triggers, 'focus')) {\n        // `focusin` is a bubbling event\n        // `event` includes `relatedTarget` (element losing focus)\n        this.enter(event);\n      } else if (type === 'focusout' && (arrayIncludes(triggers, 'focus') || arrayIncludes(triggers, 'blur')) || type === 'mouseleave' && arrayIncludes(triggers, 'hover')) {\n        // `focusout` is a bubbling event\n        // `mouseleave` is a non-bubbling event\n        // `tip` is the template (will be null if not open)\n        var tip = this.getTemplateElement(); // `eventTarget` is the element which is losing focus/hover and\n\n        var eventTarget = event.target; // `relatedTarget` is the element gaining focus/hover\n\n        var relatedTarget = event.relatedTarget;\n        /* istanbul ignore next */\n\n        if ( // From tip to target\n        tip && contains(tip, eventTarget) && contains(target, relatedTarget) || // From target to tip\n        tip && contains(target, eventTarget) && contains(tip, relatedTarget) || // Within tip\n        tip && contains(tip, eventTarget) && contains(tip, relatedTarget) || // Within target\n        contains(target, eventTarget) && contains(target, relatedTarget)) {\n          // If focus/hover moves within `tip` and `target`, don't trigger a leave\n          return;\n        } // Otherwise trigger a leave\n\n\n        this.leave(event);\n      }\n    },\n    doHide: function doHide(id) {\n      // Programmatically hide tooltip or popover\n      if (!id || this.getTargetId() === id || this.computedId === id) {\n        // Close all tooltips or popovers, or this specific tip (with ID)\n        this.forceHide();\n      }\n    },\n    doShow: function doShow(id) {\n      // Programmatically show tooltip or popover\n      if (!id || this.getTargetId() === id || this.computedId === id) {\n        // Open all tooltips or popovers, or this specific tip (with ID)\n        this.show();\n      }\n    },\n\n    /*istanbul ignore next: ignore for now */\n    doDisable: function doDisable(id)\n    /*istanbul ignore next: ignore for now */\n    {\n      // Programmatically disable tooltip or popover\n      if (!id || this.getTargetId() === id || this.computedId === id) {\n        // Disable all tooltips or popovers (no ID), or this specific tip (with ID)\n        this.disable();\n      }\n    },\n\n    /*istanbul ignore next: ignore for now */\n    doEnable: function doEnable(id)\n    /*istanbul ignore next: ignore for now */\n    {\n      // Programmatically enable tooltip or popover\n      if (!id || this.getTargetId() === id || this.computedId === id) {\n        // Enable all tooltips or popovers (no ID), or this specific tip (with ID)\n        this.enable();\n      }\n    },\n    click: function click(event) {\n      if (!this.$_enabled || this.dropdownOpen()) {\n        /* istanbul ignore next */\n        return;\n      } // Get around a WebKit bug where `click` does not trigger focus events\n      // On most browsers, `click` triggers a `focusin`/`focus` event first\n      // Needed so that trigger 'click blur' works on iOS\n      // https://github.com/bootstrap-vue/bootstrap-vue/issues/5099\n      // We use `currentTarget` rather than `target` to trigger on the\n      // element, not the inner content\n\n\n      attemptFocus(event.currentTarget);\n      this.activeTrigger.click = !this.activeTrigger.click;\n\n      if (this.isWithActiveTrigger) {\n        this.enter(null);\n      } else {\n        /* istanbul ignore next */\n        this.leave(null);\n      }\n    },\n\n    /* istanbul ignore next */\n    toggle: function toggle() {\n      // Manual toggle handler\n      if (!this.$_enabled || this.dropdownOpen()) {\n        /* istanbul ignore next */\n        return;\n      } // Should we register as an active trigger?\n      // this.activeTrigger.manual = !this.activeTrigger.manual\n\n\n      if (this.localShow) {\n        this.leave(null);\n      } else {\n        this.enter(null);\n      }\n    },\n    enter: function enter() {\n      var _this10 = this;\n\n      var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null; // Opening trigger handler\n      // Note: Click events are sent with event === null\n\n      if (event) {\n        this.activeTrigger[event.type === 'focusin' ? 'focus' : 'hover'] = true;\n      }\n      /* istanbul ignore next */\n\n\n      if (this.localShow || this.$_hoverState === 'in') {\n        this.$_hoverState = 'in';\n        return;\n      }\n\n      this.clearHoverTimeout();\n      this.$_hoverState = 'in';\n\n      if (!this.computedDelay.show) {\n        this.show();\n      } else {\n        // Hide any title attribute while enter delay is active\n        this.fixTitle();\n        this.$_hoverTimeout = setTimeout(function () {\n          /* istanbul ignore else */\n          if (_this10.$_hoverState === 'in') {\n            _this10.show();\n          } else if (!_this10.localShow) {\n            _this10.restoreTitle();\n          }\n        }, this.computedDelay.show);\n      }\n    },\n    leave: function leave() {\n      var _this11 = this;\n\n      var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null; // Closing trigger handler\n      // Note: Click events are sent with event === null\n\n      if (event) {\n        this.activeTrigger[event.type === 'focusout' ? 'focus' : 'hover'] = false;\n        /* istanbul ignore next */\n\n        if (event.type === 'focusout' && arrayIncludes(this.computedTriggers, 'blur')) {\n          // Special case for `blur`: we clear out the other triggers\n          this.activeTrigger.click = false;\n          this.activeTrigger.hover = false;\n        }\n      }\n      /* istanbul ignore next: ignore for now */\n\n\n      if (this.isWithActiveTrigger) {\n        return;\n      }\n\n      this.clearHoverTimeout();\n      this.$_hoverState = 'out';\n\n      if (!this.computedDelay.hide) {\n        this.hide();\n      } else {\n        this.$_hoverTimeout = setTimeout(function () {\n          if (_this11.$_hoverState === 'out') {\n            _this11.hide();\n          }\n        }, this.computedDelay.hide);\n      }\n    }\n  }\n});","map":{"version":3,"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","COMPONENT_UID_KEY","extend","NAME_MODAL","NAME_TOOLTIP_HELPER","EVENT_NAME_DISABLE","EVENT_NAME_DISABLED","EVENT_NAME_ENABLE","EVENT_NAME_ENABLED","EVENT_NAME_FOCUSIN","EVENT_NAME_FOCUSOUT","EVENT_NAME_HIDDEN","EVENT_NAME_HIDE","EVENT_NAME_MOUSEENTER","EVENT_NAME_MOUSELEAVE","EVENT_NAME_SHOW","EVENT_NAME_SHOWN","EVENT_OPTIONS_NO_CAPTURE","HOOK_EVENT_NAME_BEFORE_DESTROY","HOOK_EVENT_NAME_DESTROYED","useParentMixin","arrayIncludes","concat","from","arrayFrom","getInstanceFromElement","attemptFocus","closest","contains","getAttr","getById","hasAttr","hasClass","isDisabled","isElement","isVisible","removeAttr","requestAF","select","setAttr","eventOff","eventOn","eventOnOff","getRootActionEventName","getRootEventName","getScopeId","identity","isFunction","isNumber","isPlainObject","isString","isUndefined","isUndefinedOrNull","looseEqual","mathMax","noop","toInteger","warn","BvEvent","createNewChildComponent","listenOnRootMixin","BVTooltipTemplate","MODAL_SELECTOR","ROOT_EVENT_NAME_MODAL_HIDDEN","SIDEBAR_SELECTOR","CONTAINER_SELECTOR","join","DROPDOWN_CLASS","DROPDOWN_OPEN_SELECTOR","DATA_TITLE_ATTR","templateData","title","content","variant","customClass","triggers","placement","fallbackPlacement","container","noFade","boundary","boundaryPadding","offset","delay","arrowPadding","interactive","disabled","id","html","BVTooltip","name","mixins","data","activeTrigger","hover","click","focus","localShow","computed","templateType","computedId","computedDelay","show","hide","computedTriggers","trim","toLowerCase","split","sort","isWithActiveTrigger","trigger","computedTemplateData","watch","newTriggers","oldTriggers","_this","$nextTick","unListen","listen","handleTemplateUpdate","newValue","oldValue","disable","enable","created","_this2","$_tip","$_hoverTimeout","$_hoverState","$_visibleInterval","$_enabled","$_noop","bind","bvParent","$once","$destroy","getTarget","document","body","scopeId","updated","deactivated","forceHide","beforeDestroy","setWhileOpenListeners","clearHoverTimeout","clearVisibilityInterval","destroyTemplate","methods","getTemplate","updateData","_this3","undefined","titleUpdated","prop","fixTitle","createTemplateAndShow","getContainer","Template","$tip","propsData","getPlacementTarget","getBoundary","onTemplateShow","onTemplateShown","onTemplateHide","onTemplateHidden","$on","handleEvent","$mount","appendChild","createElement","hideTemplate","clearActiveTriggers","localPlacementTarget","_unused","removeAriaDescribedby","restoreTitle","getTemplateElement","$el","_this4","props","dropdownOpen","showEvent","buildEvent","cancelable","emitEvent","defaultPrevented","addAriaDescribedby","force","tip","hideEvent","prevHoverState","leave","replace","getTargetId","isInModal","isDropdown","clearTimeout","clearInterval","desc","_this5","d","type","options","relatedTarget","componentId","vueTarget","bvEvent","emitOnRoot","$emit","_this6","el","setRootListener","_this7","events","event","on","method","doHide","doShow","doDisable","doEnable","setModalListener","setDropdownListener","visibleCheck","setOnTouchStartListener","_this8","setInterval","parentNode","_this9","documentElement","children","bvEventRoot","instance","enter","eventTarget","currentTarget","toggle","_this10","setTimeout","_this11"],"sources":["D:/VUE/adminDeal/node_modules/bootstrap-vue/esm/components/tooltip/helpers/bv-tooltip.js"],"sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\r\n\r\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\r\n\r\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\r\n\r\n// Tooltip \"Class\" (Built as a renderless Vue instance)\r\n//\r\n// Handles trigger events, etc.\r\n// Instantiates template on demand\r\nimport { COMPONENT_UID_KEY, extend } from '../../../vue';\r\nimport { NAME_MODAL, NAME_TOOLTIP_HELPER } from '../../../constants/components';\r\nimport { EVENT_NAME_DISABLE, EVENT_NAME_DISABLED, EVENT_NAME_ENABLE, EVENT_NAME_ENABLED, EVENT_NAME_FOCUSIN, EVENT_NAME_FOCUSOUT, EVENT_NAME_HIDDEN, EVENT_NAME_HIDE, EVENT_NAME_MOUSEENTER, EVENT_NAME_MOUSELEAVE, EVENT_NAME_SHOW, EVENT_NAME_SHOWN, EVENT_OPTIONS_NO_CAPTURE, HOOK_EVENT_NAME_BEFORE_DESTROY, HOOK_EVENT_NAME_DESTROYED } from '../../../constants/events';\r\nimport { useParentMixin } from '../../../mixins/use-parent';\r\nimport { arrayIncludes, concat, from as arrayFrom } from '../../../utils/array';\r\nimport { getInstanceFromElement } from '../../../utils/element-to-vue-instance-registry';\r\nimport { attemptFocus, closest, contains, getAttr, getById, hasAttr, hasClass, isDisabled, isElement, isVisible, removeAttr, requestAF, select, setAttr } from '../../../utils/dom';\r\nimport { eventOff, eventOn, eventOnOff, getRootActionEventName, getRootEventName } from '../../../utils/events';\r\nimport { getScopeId } from '../../../utils/get-scope-id';\r\nimport { identity } from '../../../utils/identity';\r\nimport { isFunction, isNumber, isPlainObject, isString, isUndefined, isUndefinedOrNull } from '../../../utils/inspect';\r\nimport { looseEqual } from '../../../utils/loose-equal';\r\nimport { mathMax } from '../../../utils/math';\r\nimport { noop } from '../../../utils/noop';\r\nimport { toInteger } from '../../../utils/number';\r\nimport { keys } from '../../../utils/object';\r\nimport { warn } from '../../../utils/warn';\r\nimport { BvEvent } from '../../../utils/bv-event.class';\r\nimport { createNewChildComponent } from '../../../utils/create-new-child-component';\r\nimport { listenOnRootMixin } from '../../../mixins/listen-on-root';\r\nimport { BVTooltipTemplate } from './bv-tooltip-template'; // --- Constants ---\r\n// Modal container selector for appending tooltip/popover\r\n\r\nvar MODAL_SELECTOR = '.modal-content'; // Modal `$root` hidden event\r\n\r\nvar ROOT_EVENT_NAME_MODAL_HIDDEN = getRootEventName(NAME_MODAL, EVENT_NAME_HIDDEN); // Sidebar container selector for appending tooltip/popover\r\n\r\nvar SIDEBAR_SELECTOR = '.b-sidebar'; // For finding the container to append to\r\n\r\nvar CONTAINER_SELECTOR = [MODAL_SELECTOR, SIDEBAR_SELECTOR].join(', '); // For dropdown sniffing\r\n\r\nvar DROPDOWN_CLASS = 'dropdown';\r\nvar DROPDOWN_OPEN_SELECTOR = '.dropdown-menu.show'; // Data attribute to temporary store the `title` attribute's value\r\n\r\nvar DATA_TITLE_ATTR = 'data-original-title'; // Data specific to popper and template\r\n// We don't use props, as we need reactivity (we can't pass reactive props)\r\n\r\nvar templateData = {\r\n  // Text string or Scoped slot function\r\n  title: '',\r\n  // Text string or Scoped slot function\r\n  content: '',\r\n  // String\r\n  variant: null,\r\n  // String, Array, Object\r\n  customClass: null,\r\n  // String or array of Strings (overwritten by BVPopper)\r\n  triggers: '',\r\n  // String (overwritten by BVPopper)\r\n  placement: 'auto',\r\n  // String or array of strings\r\n  fallbackPlacement: 'flip',\r\n  // Element or Component reference (or function that returns element) of\r\n  // the element that will have the trigger events bound, and is also\r\n  // default element for positioning\r\n  target: null,\r\n  // HTML ID, Element or Component reference\r\n  container: null,\r\n  // 'body'\r\n  // Boolean\r\n  noFade: false,\r\n  // 'scrollParent', 'viewport', 'window', Element, or Component reference\r\n  boundary: 'scrollParent',\r\n  // Tooltip/popover will try and stay away from\r\n  // boundary edge by this many pixels (Number)\r\n  boundaryPadding: 5,\r\n  // Arrow offset (Number)\r\n  offset: 0,\r\n  // Hover/focus delay (Number or Object)\r\n  delay: 0,\r\n  // Arrow of Tooltip/popover will try and stay away from\r\n  // the edge of tooltip/popover edge by this many pixels\r\n  arrowPadding: 6,\r\n  // Interactive state (Boolean)\r\n  interactive: true,\r\n  // Disabled state (Boolean)\r\n  disabled: false,\r\n  // ID to use for tooltip/popover\r\n  id: null,\r\n  // Flag used by directives only, for HTML content\r\n  html: false\r\n}; // --- Main component ---\r\n// @vue/component\r\n\r\nexport var BVTooltip = /*#__PURE__*/extend({\r\n  name: NAME_TOOLTIP_HELPER,\r\n  mixins: [listenOnRootMixin, useParentMixin],\r\n  data: function data() {\r\n    return _objectSpread(_objectSpread({}, templateData), {}, {\r\n      // State management data\r\n      activeTrigger: {\r\n        // manual: false,\r\n        hover: false,\r\n        click: false,\r\n        focus: false\r\n      },\r\n      localShow: false\r\n    });\r\n  },\r\n  computed: {\r\n    templateType: function templateType() {\r\n      // Overwritten by BVPopover\r\n      return 'tooltip';\r\n    },\r\n    computedId: function computedId() {\r\n      return this.id || \"__bv_\".concat(this.templateType, \"_\").concat(this[COMPONENT_UID_KEY], \"__\");\r\n    },\r\n    computedDelay: function computedDelay() {\r\n      // Normalizes delay into object form\r\n      var delay = {\r\n        show: 0,\r\n        hide: 0\r\n      };\r\n\r\n      if (isPlainObject(this.delay)) {\r\n        delay.show = mathMax(toInteger(this.delay.show, 0), 0);\r\n        delay.hide = mathMax(toInteger(this.delay.hide, 0), 0);\r\n      } else if (isNumber(this.delay) || isString(this.delay)) {\r\n        delay.show = delay.hide = mathMax(toInteger(this.delay, 0), 0);\r\n      }\r\n\r\n      return delay;\r\n    },\r\n    computedTriggers: function computedTriggers() {\r\n      // Returns the triggers in sorted array form\r\n      // TODO: Switch this to object form for easier lookup\r\n      return concat(this.triggers).filter(identity).join(' ').trim().toLowerCase().split(/\\s+/).sort();\r\n    },\r\n    isWithActiveTrigger: function isWithActiveTrigger() {\r\n      for (var trigger in this.activeTrigger) {\r\n        if (this.activeTrigger[trigger]) {\r\n          return true;\r\n        }\r\n      }\r\n\r\n      return false;\r\n    },\r\n    computedTemplateData: function computedTemplateData() {\r\n      var title = this.title,\r\n          content = this.content,\r\n          variant = this.variant,\r\n          customClass = this.customClass,\r\n          noFade = this.noFade,\r\n          interactive = this.interactive;\r\n      return {\r\n        title: title,\r\n        content: content,\r\n        variant: variant,\r\n        customClass: customClass,\r\n        noFade: noFade,\r\n        interactive: interactive\r\n      };\r\n    }\r\n  },\r\n  watch: {\r\n    computedTriggers: function computedTriggers(newTriggers, oldTriggers) {\r\n      var _this = this;\r\n\r\n      // Triggers have changed, so re-register them\r\n\r\n      /* istanbul ignore next */\r\n      if (!looseEqual(newTriggers, oldTriggers)) {\r\n        this.$nextTick(function () {\r\n          // Disable trigger listeners\r\n          _this.unListen(); // Clear any active triggers that are no longer in the list of triggers\r\n\r\n\r\n          oldTriggers.forEach(function (trigger) {\r\n            if (!arrayIncludes(newTriggers, trigger)) {\r\n              if (_this.activeTrigger[trigger]) {\r\n                _this.activeTrigger[trigger] = false;\r\n              }\r\n            }\r\n          }); // Re-enable the trigger listeners\r\n\r\n          _this.listen();\r\n        });\r\n      }\r\n    },\r\n    computedTemplateData: function computedTemplateData() {\r\n      // If any of the while open reactive \"props\" change,\r\n      // ensure that the template updates accordingly\r\n      this.handleTemplateUpdate();\r\n    },\r\n    title: function title(newValue, oldValue) {\r\n      // Make sure to hide the tooltip when the title is set empty\r\n      if (newValue !== oldValue && !newValue) {\r\n        this.hide();\r\n      }\r\n    },\r\n    disabled: function disabled(newValue) {\r\n      if (newValue) {\r\n        this.disable();\r\n      } else {\r\n        this.enable();\r\n      }\r\n    }\r\n  },\r\n  created: function created() {\r\n    var _this2 = this;\r\n\r\n    // Create non-reactive properties\r\n    this.$_tip = null;\r\n    this.$_hoverTimeout = null;\r\n    this.$_hoverState = '';\r\n    this.$_visibleInterval = null;\r\n    this.$_enabled = !this.disabled;\r\n    this.$_noop = noop.bind(this); // Destroy ourselves when the parent is destroyed\r\n\r\n    if (this.bvParent) {\r\n      this.bvParent.$once(HOOK_EVENT_NAME_BEFORE_DESTROY, function () {\r\n        _this2.$nextTick(function () {\r\n          // In a `requestAF()` to release control back to application\r\n          requestAF(function () {\r\n            _this2.$destroy();\r\n          });\r\n        });\r\n      });\r\n    }\r\n\r\n    this.$nextTick(function () {\r\n      var target = _this2.getTarget();\r\n\r\n      if (target && contains(document.body, target)) {\r\n        // Copy the parent's scoped style attribute\r\n        _this2.scopeId = getScopeId(_this2.bvParent); // Set up all trigger handlers and listeners\r\n\r\n        _this2.listen();\r\n      } else {\r\n        /* istanbul ignore next */\r\n        warn(isString(_this2.target) ? \"Unable to find target element by ID \\\"#\".concat(_this2.target, \"\\\" in document.\") : 'The provided target is no valid HTML element.', _this2.templateType);\r\n      }\r\n    });\r\n  },\r\n\r\n  /* istanbul ignore next */\r\n  updated: function updated() {\r\n    // Usually called when the slots/data changes\r\n    this.$nextTick(this.handleTemplateUpdate);\r\n  },\r\n\r\n  /* istanbul ignore next */\r\n  deactivated: function deactivated() {\r\n    // In a keepalive that has been deactivated, so hide\r\n    // the tooltip/popover if it is showing\r\n    this.forceHide();\r\n  },\r\n  beforeDestroy: function beforeDestroy() {\r\n    // Remove all handler/listeners\r\n    this.unListen();\r\n    this.setWhileOpenListeners(false); // Clear any timeouts/intervals\r\n\r\n    this.clearHoverTimeout();\r\n    this.clearVisibilityInterval(); // Destroy the template\r\n\r\n    this.destroyTemplate(); // Remove any other private properties created during create\r\n\r\n    this.$_noop = null;\r\n  },\r\n  methods: {\r\n    // --- Methods for creating and destroying the template ---\r\n    getTemplate: function getTemplate() {\r\n      // Overridden by BVPopover\r\n      return BVTooltipTemplate;\r\n    },\r\n    updateData: function updateData() {\r\n      var _this3 = this;\r\n\r\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n      // Method for updating popper/template data\r\n      // We only update data if it exists, and has not changed\r\n      var titleUpdated = false;\r\n      keys(templateData).forEach(function (prop) {\r\n        if (!isUndefined(data[prop]) && _this3[prop] !== data[prop]) {\r\n          _this3[prop] = data[prop];\r\n\r\n          if (prop === 'title') {\r\n            titleUpdated = true;\r\n          }\r\n        }\r\n      }); // If the title has updated, we may need to handle the `title`\r\n      // attribute on the trigger target\r\n      // We only do this while the template is open\r\n\r\n      if (titleUpdated && this.localShow) {\r\n        this.fixTitle();\r\n      }\r\n    },\r\n    createTemplateAndShow: function createTemplateAndShow() {\r\n      // Creates the template instance and show it\r\n      var container = this.getContainer();\r\n      var Template = this.getTemplate();\r\n      var $tip = this.$_tip = createNewChildComponent(this, Template, {\r\n        // The following is not reactive to changes in the props data\r\n        propsData: {\r\n          // These values cannot be changed while template is showing\r\n          id: this.computedId,\r\n          html: this.html,\r\n          placement: this.placement,\r\n          fallbackPlacement: this.fallbackPlacement,\r\n          target: this.getPlacementTarget(),\r\n          boundary: this.getBoundary(),\r\n          // Ensure the following are integers\r\n          offset: toInteger(this.offset, 0),\r\n          arrowPadding: toInteger(this.arrowPadding, 0),\r\n          boundaryPadding: toInteger(this.boundaryPadding, 0)\r\n        }\r\n      }); // We set the initial reactive data (values that can be changed while open)\r\n\r\n      this.handleTemplateUpdate(); // Template transition phase events (handled once only)\r\n      // When the template has mounted, but not visibly shown yet\r\n\r\n      $tip.$once(EVENT_NAME_SHOW, this.onTemplateShow); // When the template has completed showing\r\n\r\n      $tip.$once(EVENT_NAME_SHOWN, this.onTemplateShown); // When the template has started to hide\r\n\r\n      $tip.$once(EVENT_NAME_HIDE, this.onTemplateHide); // When the template has completed hiding\r\n\r\n      $tip.$once(EVENT_NAME_HIDDEN, this.onTemplateHidden); // When the template gets destroyed for any reason\r\n\r\n      $tip.$once(HOOK_EVENT_NAME_DESTROYED, this.destroyTemplate); // Convenience events from template\r\n      // To save us from manually adding/removing DOM\r\n      // listeners to tip element when it is open\r\n\r\n      $tip.$on(EVENT_NAME_FOCUSIN, this.handleEvent);\r\n      $tip.$on(EVENT_NAME_FOCUSOUT, this.handleEvent);\r\n      $tip.$on(EVENT_NAME_MOUSEENTER, this.handleEvent);\r\n      $tip.$on(EVENT_NAME_MOUSELEAVE, this.handleEvent); // Mount (which triggers the `show`)\r\n\r\n      $tip.$mount(container.appendChild(document.createElement('div'))); // Template will automatically remove its markup from DOM when hidden\r\n    },\r\n    hideTemplate: function hideTemplate() {\r\n      // Trigger the template to start hiding\r\n      // The template will emit the `hide` event after this and\r\n      // then emit the `hidden` event once it is fully hidden\r\n      // The `hook:destroyed` will also be called (safety measure)\r\n      this.$_tip && this.$_tip.hide(); // Clear out any stragging active triggers\r\n\r\n      this.clearActiveTriggers(); // Reset the hover state\r\n\r\n      this.$_hoverState = '';\r\n    },\r\n    // Destroy the template instance and reset state\r\n    destroyTemplate: function destroyTemplate() {\r\n      this.setWhileOpenListeners(false);\r\n      this.clearHoverTimeout();\r\n      this.$_hoverState = '';\r\n      this.clearActiveTriggers();\r\n      this.localPlacementTarget = null;\r\n\r\n      try {\r\n        this.$_tip.$destroy();\r\n      } catch (_unused) {}\r\n\r\n      this.$_tip = null;\r\n      this.removeAriaDescribedby();\r\n      this.restoreTitle();\r\n      this.localShow = false;\r\n    },\r\n    getTemplateElement: function getTemplateElement() {\r\n      return this.$_tip ? this.$_tip.$el : null;\r\n    },\r\n    handleTemplateUpdate: function handleTemplateUpdate() {\r\n      var _this4 = this;\r\n\r\n      // Update our template title/content \"props\"\r\n      // So that the template updates accordingly\r\n      var $tip = this.$_tip;\r\n\r\n      if ($tip) {\r\n        var props = ['title', 'content', 'variant', 'customClass', 'noFade', 'interactive']; // Only update the values if they have changed\r\n\r\n        props.forEach(function (prop) {\r\n          if ($tip[prop] !== _this4[prop]) {\r\n            $tip[prop] = _this4[prop];\r\n          }\r\n        });\r\n      }\r\n    },\r\n    // --- Show/Hide handlers ---\r\n    // Show the tooltip\r\n    show: function show() {\r\n      var target = this.getTarget();\r\n\r\n      if (!target || !contains(document.body, target) || !isVisible(target) || this.dropdownOpen() || (isUndefinedOrNull(this.title) || this.title === '') && (isUndefinedOrNull(this.content) || this.content === '')) {\r\n        // If trigger element isn't in the DOM or is not visible, or\r\n        // is on an open dropdown toggle, or has no content, then\r\n        // we exit without showing\r\n        return;\r\n      } // If tip already exists, exit early\r\n\r\n\r\n      if (this.$_tip || this.localShow) {\r\n        /* istanbul ignore next */\r\n        return;\r\n      } // In the process of showing\r\n\r\n\r\n      this.localShow = true; // Create a cancelable BvEvent\r\n\r\n      var showEvent = this.buildEvent(EVENT_NAME_SHOW, {\r\n        cancelable: true\r\n      });\r\n      this.emitEvent(showEvent); // Don't show if event cancelled\r\n\r\n      /* istanbul ignore if */\r\n\r\n      if (showEvent.defaultPrevented) {\r\n        // Destroy the template (if for some reason it was created)\r\n        this.destroyTemplate();\r\n        return;\r\n      } // Fix the title attribute on target\r\n\r\n\r\n      this.fixTitle(); // Set aria-describedby on target\r\n\r\n      this.addAriaDescribedby(); // Create and show the tooltip\r\n\r\n      this.createTemplateAndShow();\r\n    },\r\n    hide: function hide() {\r\n      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\r\n      // Hide the tooltip\r\n      var tip = this.getTemplateElement();\r\n      /* istanbul ignore if */\r\n\r\n      if (!tip || !this.localShow) {\r\n        this.restoreTitle();\r\n        return;\r\n      } // Emit cancelable BvEvent 'hide'\r\n      // We disable cancelling if `force` is true\r\n\r\n\r\n      var hideEvent = this.buildEvent(EVENT_NAME_HIDE, {\r\n        cancelable: !force\r\n      });\r\n      this.emitEvent(hideEvent);\r\n      /* istanbul ignore if: ignore for now */\r\n\r\n      if (hideEvent.defaultPrevented) {\r\n        // Don't hide if event cancelled\r\n        return;\r\n      } // Tell the template to hide\r\n\r\n\r\n      this.hideTemplate();\r\n    },\r\n    forceHide: function forceHide() {\r\n      // Forcefully hides/destroys the template, regardless of any active triggers\r\n      var tip = this.getTemplateElement();\r\n\r\n      if (!tip || !this.localShow) {\r\n        /* istanbul ignore next */\r\n        return;\r\n      } // Disable while open listeners/watchers\r\n      // This is also done in the template `hide` event handler\r\n\r\n\r\n      this.setWhileOpenListeners(false); // Clear any hover enter/leave event\r\n\r\n      this.clearHoverTimeout();\r\n      this.$_hoverState = '';\r\n      this.clearActiveTriggers(); // Disable the fade animation on the template\r\n\r\n      if (this.$_tip) {\r\n        this.$_tip.noFade = true;\r\n      } // Hide the tip (with force = true)\r\n\r\n\r\n      this.hide(true);\r\n    },\r\n    enable: function enable() {\r\n      this.$_enabled = true; // Create a non-cancelable BvEvent\r\n\r\n      this.emitEvent(this.buildEvent(EVENT_NAME_ENABLED));\r\n    },\r\n    disable: function disable() {\r\n      this.$_enabled = false; // Create a non-cancelable BvEvent\r\n\r\n      this.emitEvent(this.buildEvent(EVENT_NAME_DISABLED));\r\n    },\r\n    // --- Handlers for template events ---\r\n    // When template is inserted into DOM, but not yet shown\r\n    onTemplateShow: function onTemplateShow() {\r\n      // Enable while open listeners/watchers\r\n      this.setWhileOpenListeners(true);\r\n    },\r\n    // When template show transition completes\r\n    onTemplateShown: function onTemplateShown() {\r\n      var prevHoverState = this.$_hoverState;\r\n      this.$_hoverState = '';\r\n      /* istanbul ignore next: occasional Node 10 coverage error */\r\n\r\n      if (prevHoverState === 'out') {\r\n        this.leave(null);\r\n      } // Emit a non-cancelable BvEvent 'shown'\r\n\r\n\r\n      this.emitEvent(this.buildEvent(EVENT_NAME_SHOWN));\r\n    },\r\n    // When template is starting to hide\r\n    onTemplateHide: function onTemplateHide() {\r\n      // Disable while open listeners/watchers\r\n      this.setWhileOpenListeners(false);\r\n    },\r\n    // When template has completed closing (just before it self destructs)\r\n    onTemplateHidden: function onTemplateHidden() {\r\n      // Destroy the template\r\n      this.destroyTemplate(); // Emit a non-cancelable BvEvent 'shown'\r\n\r\n      this.emitEvent(this.buildEvent(EVENT_NAME_HIDDEN));\r\n    },\r\n    // --- Helper methods ---\r\n    getTarget: function getTarget() {\r\n      var target = this.target;\r\n\r\n      if (isString(target)) {\r\n        target = getById(target.replace(/^#/, ''));\r\n      } else if (isFunction(target)) {\r\n        target = target();\r\n      } else if (target) {\r\n        target = target.$el || target;\r\n      }\r\n\r\n      return isElement(target) ? target : null;\r\n    },\r\n    getPlacementTarget: function getPlacementTarget() {\r\n      // This is the target that the tooltip will be placed on, which may not\r\n      // necessarily be the same element that has the trigger event listeners\r\n      // For now, this is the same as target\r\n      // TODO:\r\n      //   Add in child selector support\r\n      //   Add in visibility checks for this element\r\n      //   Fallback to target if not found\r\n      return this.getTarget();\r\n    },\r\n    getTargetId: function getTargetId() {\r\n      // Returns the ID of the trigger element\r\n      var target = this.getTarget();\r\n      return target && target.id ? target.id : null;\r\n    },\r\n    getContainer: function getContainer() {\r\n      // Handle case where container may be a component ref\r\n      var container = this.container ? this.container.$el || this.container : false;\r\n      var body = document.body;\r\n      var target = this.getTarget(); // If we are in a modal, we append to the modal, If we\r\n      // are in a sidebar, we append to the sidebar, else append\r\n      // to body, unless a container is specified\r\n      // TODO:\r\n      //   Template should periodically check to see if it is in dom\r\n      //   And if not, self destruct (if container got v-if'ed out of DOM)\r\n      //   Or this could possibly be part of the visibility check\r\n\r\n      return container === false ? closest(CONTAINER_SELECTOR, target) || body :\r\n      /*istanbul ignore next */\r\n      isString(container) ?\r\n      /*istanbul ignore next */\r\n      getById(container.replace(/^#/, '')) || body :\r\n      /*istanbul ignore next */\r\n      body;\r\n    },\r\n    getBoundary: function getBoundary() {\r\n      return this.boundary ? this.boundary.$el || this.boundary : 'scrollParent';\r\n    },\r\n    isInModal: function isInModal() {\r\n      var target = this.getTarget();\r\n      return target && closest(MODAL_SELECTOR, target);\r\n    },\r\n    isDropdown: function isDropdown() {\r\n      // Returns true if trigger is a dropdown\r\n      var target = this.getTarget();\r\n      return target && hasClass(target, DROPDOWN_CLASS);\r\n    },\r\n    dropdownOpen: function dropdownOpen() {\r\n      // Returns true if trigger is a dropdown and the dropdown menu is open\r\n      var target = this.getTarget();\r\n      return this.isDropdown() && target && select(DROPDOWN_OPEN_SELECTOR, target);\r\n    },\r\n    clearHoverTimeout: function clearHoverTimeout() {\r\n      clearTimeout(this.$_hoverTimeout);\r\n      this.$_hoverTimeout = null;\r\n    },\r\n    clearVisibilityInterval: function clearVisibilityInterval() {\r\n      clearInterval(this.$_visibleInterval);\r\n      this.$_visibleInterval = null;\r\n    },\r\n    clearActiveTriggers: function clearActiveTriggers() {\r\n      for (var trigger in this.activeTrigger) {\r\n        this.activeTrigger[trigger] = false;\r\n      }\r\n    },\r\n    addAriaDescribedby: function addAriaDescribedby() {\r\n      // Add aria-describedby on trigger element, without removing any other IDs\r\n      var target = this.getTarget();\r\n      var desc = getAttr(target, 'aria-describedby') || '';\r\n      desc = desc.split(/\\s+/).concat(this.computedId).join(' ').trim(); // Update/add aria-described by\r\n\r\n      setAttr(target, 'aria-describedby', desc);\r\n    },\r\n    removeAriaDescribedby: function removeAriaDescribedby() {\r\n      var _this5 = this;\r\n\r\n      // Remove aria-describedby on trigger element, without removing any other IDs\r\n      var target = this.getTarget();\r\n      var desc = getAttr(target, 'aria-describedby') || '';\r\n      desc = desc.split(/\\s+/).filter(function (d) {\r\n        return d !== _this5.computedId;\r\n      }).join(' ').trim(); // Update or remove aria-describedby\r\n\r\n      if (desc) {\r\n        /* istanbul ignore next */\r\n        setAttr(target, 'aria-describedby', desc);\r\n      } else {\r\n        removeAttr(target, 'aria-describedby');\r\n      }\r\n    },\r\n    fixTitle: function fixTitle() {\r\n      // If the target has a `title` attribute,\r\n      // remove it and store it on a data attribute\r\n      var target = this.getTarget();\r\n\r\n      if (hasAttr(target, 'title')) {\r\n        // Get `title` attribute value and remove it from target\r\n        var title = getAttr(target, 'title');\r\n        setAttr(target, 'title', ''); // Only set the data attribute when the value is truthy\r\n\r\n        if (title) {\r\n          setAttr(target, DATA_TITLE_ATTR, title);\r\n        }\r\n      }\r\n    },\r\n    restoreTitle: function restoreTitle() {\r\n      // If the target had a `title` attribute,\r\n      // restore it and remove the data attribute\r\n      var target = this.getTarget();\r\n\r\n      if (hasAttr(target, DATA_TITLE_ATTR)) {\r\n        // Get data attribute value and remove it from target\r\n        var title = getAttr(target, DATA_TITLE_ATTR);\r\n        removeAttr(target, DATA_TITLE_ATTR); // Only restore the `title` attribute when the value is truthy\r\n\r\n        if (title) {\r\n          setAttr(target, 'title', title);\r\n        }\r\n      }\r\n    },\r\n    // --- BvEvent helpers ---\r\n    buildEvent: function buildEvent(type) {\r\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n      // Defaults to a non-cancellable event\r\n      return new BvEvent(type, _objectSpread({\r\n        cancelable: false,\r\n        target: this.getTarget(),\r\n        relatedTarget: this.getTemplateElement() || null,\r\n        componentId: this.computedId,\r\n        vueTarget: this\r\n      }, options));\r\n    },\r\n    emitEvent: function emitEvent(bvEvent) {\r\n      var type = bvEvent.type;\r\n      this.emitOnRoot(getRootEventName(this.templateType, type), bvEvent);\r\n      this.$emit(type, bvEvent);\r\n    },\r\n    // --- Event handler setup methods ---\r\n    listen: function listen() {\r\n      var _this6 = this;\r\n\r\n      // Enable trigger event handlers\r\n      var el = this.getTarget();\r\n\r\n      if (!el) {\r\n        /* istanbul ignore next */\r\n        return;\r\n      } // Listen for global show/hide events\r\n\r\n\r\n      this.setRootListener(true); // Set up our listeners on the target trigger element\r\n\r\n      this.computedTriggers.forEach(function (trigger) {\r\n        if (trigger === 'click') {\r\n          eventOn(el, 'click', _this6.handleEvent, EVENT_OPTIONS_NO_CAPTURE);\r\n        } else if (trigger === 'focus') {\r\n          eventOn(el, 'focusin', _this6.handleEvent, EVENT_OPTIONS_NO_CAPTURE);\r\n          eventOn(el, 'focusout', _this6.handleEvent, EVENT_OPTIONS_NO_CAPTURE);\r\n        } else if (trigger === 'blur') {\r\n          // Used to close $tip when element loses focus\r\n\r\n          /* istanbul ignore next */\r\n          eventOn(el, 'focusout', _this6.handleEvent, EVENT_OPTIONS_NO_CAPTURE);\r\n        } else if (trigger === 'hover') {\r\n          eventOn(el, 'mouseenter', _this6.handleEvent, EVENT_OPTIONS_NO_CAPTURE);\r\n          eventOn(el, 'mouseleave', _this6.handleEvent, EVENT_OPTIONS_NO_CAPTURE);\r\n        }\r\n      }, this);\r\n    },\r\n\r\n    /* istanbul ignore next */\r\n    unListen: function unListen() {\r\n      var _this7 = this;\r\n\r\n      // Remove trigger event handlers\r\n      var events = ['click', 'focusin', 'focusout', 'mouseenter', 'mouseleave'];\r\n      var target = this.getTarget(); // Stop listening for global show/hide/enable/disable events\r\n\r\n      this.setRootListener(false); // Clear out any active target listeners\r\n\r\n      events.forEach(function (event) {\r\n        target && eventOff(target, event, _this7.handleEvent, EVENT_OPTIONS_NO_CAPTURE);\r\n      }, this);\r\n    },\r\n    setRootListener: function setRootListener(on) {\r\n      // Listen for global `bv::{hide|show}::{tooltip|popover}` hide request event\r\n      var method = on ? 'listenOnRoot' : 'listenOffRoot';\r\n      var type = this.templateType;\r\n      this[method](getRootActionEventName(type, EVENT_NAME_HIDE), this.doHide);\r\n      this[method](getRootActionEventName(type, EVENT_NAME_SHOW), this.doShow);\r\n      this[method](getRootActionEventName(type, EVENT_NAME_DISABLE), this.doDisable);\r\n      this[method](getRootActionEventName(type, EVENT_NAME_ENABLE), this.doEnable);\r\n    },\r\n    setWhileOpenListeners: function setWhileOpenListeners(on) {\r\n      // Events that are only registered when the template is showing\r\n      // Modal close events\r\n      this.setModalListener(on); // Dropdown open events (if we are attached to a dropdown)\r\n\r\n      this.setDropdownListener(on); // Periodic $element visibility check\r\n      // For handling when tip target is in <keepalive>, tabs, carousel, etc\r\n\r\n      this.visibleCheck(on); // On-touch start listeners\r\n\r\n      this.setOnTouchStartListener(on);\r\n    },\r\n    // Handler for periodic visibility check\r\n    visibleCheck: function visibleCheck(on) {\r\n      var _this8 = this;\r\n\r\n      this.clearVisibilityInterval();\r\n      var target = this.getTarget();\r\n\r\n      if (on) {\r\n        this.$_visibleInterval = setInterval(function () {\r\n          var tip = _this8.getTemplateElement();\r\n\r\n          if (tip && _this8.localShow && (!target.parentNode || !isVisible(target))) {\r\n            // Target element is no longer visible or not in DOM, so force-hide the tooltip\r\n            _this8.forceHide();\r\n          }\r\n        }, 100);\r\n      }\r\n    },\r\n    setModalListener: function setModalListener(on) {\r\n      // Handle case where tooltip/target is in a modal\r\n      if (this.isInModal()) {\r\n        // We can listen for modal hidden events on `$root`\r\n        this[on ? 'listenOnRoot' : 'listenOffRoot'](ROOT_EVENT_NAME_MODAL_HIDDEN, this.forceHide);\r\n      }\r\n    },\r\n\r\n    /* istanbul ignore next: JSDOM doesn't support `ontouchstart` */\r\n    setOnTouchStartListener: function setOnTouchStartListener(on) {\r\n      var _this9 = this;\r\n\r\n      // If this is a touch-enabled device we add extra empty\r\n      // `mouseover` listeners to the body's immediate children\r\n      // Only needed because of broken event delegation on iOS\r\n      // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\r\n      if ('ontouchstart' in document.documentElement) {\r\n        arrayFrom(document.body.children).forEach(function (el) {\r\n          eventOnOff(on, el, 'mouseover', _this9.$_noop);\r\n        });\r\n      }\r\n    },\r\n    setDropdownListener: function setDropdownListener(on) {\r\n      var target = this.getTarget();\r\n\r\n      if (!target || !this.bvEventRoot || !this.isDropdown) {\r\n        return;\r\n      } // We can listen for dropdown shown events on its instance\r\n      // TODO:\r\n      //   We could grab the ID from the dropdown, and listen for\r\n      //   $root events for that particular dropdown id\r\n      //   Dropdown shown and hidden events will need to emit\r\n      //   Note: Dropdown auto-ID happens in a `$nextTick()` after mount\r\n      //         So the ID lookup would need to be done in a `$nextTick()`\r\n\r\n\r\n      var instance = getInstanceFromElement(target);\r\n\r\n      if (instance) {\r\n        instance[on ? '$on' : '$off'](EVENT_NAME_SHOWN, this.forceHide);\r\n      }\r\n    },\r\n    // --- Event handlers ---\r\n    handleEvent: function handleEvent(event) {\r\n      // General trigger event handler\r\n      // target is the trigger element\r\n      var target = this.getTarget();\r\n\r\n      if (!target || isDisabled(target) || !this.$_enabled || this.dropdownOpen()) {\r\n        // If disabled or not enabled, or if a dropdown that is open, don't do anything\r\n        // If tip is shown before element gets disabled, then tip will not\r\n        // close until no longer disabled or forcefully closed\r\n        return;\r\n      }\r\n\r\n      var type = event.type;\r\n      var triggers = this.computedTriggers;\r\n\r\n      if (type === 'click' && arrayIncludes(triggers, 'click')) {\r\n        this.click(event);\r\n      } else if (type === 'mouseenter' && arrayIncludes(triggers, 'hover')) {\r\n        // `mouseenter` is a non-bubbling event\r\n        this.enter(event);\r\n      } else if (type === 'focusin' && arrayIncludes(triggers, 'focus')) {\r\n        // `focusin` is a bubbling event\r\n        // `event` includes `relatedTarget` (element losing focus)\r\n        this.enter(event);\r\n      } else if (type === 'focusout' && (arrayIncludes(triggers, 'focus') || arrayIncludes(triggers, 'blur')) || type === 'mouseleave' && arrayIncludes(triggers, 'hover')) {\r\n        // `focusout` is a bubbling event\r\n        // `mouseleave` is a non-bubbling event\r\n        // `tip` is the template (will be null if not open)\r\n        var tip = this.getTemplateElement(); // `eventTarget` is the element which is losing focus/hover and\r\n\r\n        var eventTarget = event.target; // `relatedTarget` is the element gaining focus/hover\r\n\r\n        var relatedTarget = event.relatedTarget;\r\n        /* istanbul ignore next */\r\n\r\n        if ( // From tip to target\r\n        tip && contains(tip, eventTarget) && contains(target, relatedTarget) || // From target to tip\r\n        tip && contains(target, eventTarget) && contains(tip, relatedTarget) || // Within tip\r\n        tip && contains(tip, eventTarget) && contains(tip, relatedTarget) || // Within target\r\n        contains(target, eventTarget) && contains(target, relatedTarget)) {\r\n          // If focus/hover moves within `tip` and `target`, don't trigger a leave\r\n          return;\r\n        } // Otherwise trigger a leave\r\n\r\n\r\n        this.leave(event);\r\n      }\r\n    },\r\n    doHide: function doHide(id) {\r\n      // Programmatically hide tooltip or popover\r\n      if (!id || this.getTargetId() === id || this.computedId === id) {\r\n        // Close all tooltips or popovers, or this specific tip (with ID)\r\n        this.forceHide();\r\n      }\r\n    },\r\n    doShow: function doShow(id) {\r\n      // Programmatically show tooltip or popover\r\n      if (!id || this.getTargetId() === id || this.computedId === id) {\r\n        // Open all tooltips or popovers, or this specific tip (with ID)\r\n        this.show();\r\n      }\r\n    },\r\n\r\n    /*istanbul ignore next: ignore for now */\r\n    doDisable: function doDisable(id)\r\n    /*istanbul ignore next: ignore for now */\r\n    {\r\n      // Programmatically disable tooltip or popover\r\n      if (!id || this.getTargetId() === id || this.computedId === id) {\r\n        // Disable all tooltips or popovers (no ID), or this specific tip (with ID)\r\n        this.disable();\r\n      }\r\n    },\r\n\r\n    /*istanbul ignore next: ignore for now */\r\n    doEnable: function doEnable(id)\r\n    /*istanbul ignore next: ignore for now */\r\n    {\r\n      // Programmatically enable tooltip or popover\r\n      if (!id || this.getTargetId() === id || this.computedId === id) {\r\n        // Enable all tooltips or popovers (no ID), or this specific tip (with ID)\r\n        this.enable();\r\n      }\r\n    },\r\n    click: function click(event) {\r\n      if (!this.$_enabled || this.dropdownOpen()) {\r\n        /* istanbul ignore next */\r\n        return;\r\n      } // Get around a WebKit bug where `click` does not trigger focus events\r\n      // On most browsers, `click` triggers a `focusin`/`focus` event first\r\n      // Needed so that trigger 'click blur' works on iOS\r\n      // https://github.com/bootstrap-vue/bootstrap-vue/issues/5099\r\n      // We use `currentTarget` rather than `target` to trigger on the\r\n      // element, not the inner content\r\n\r\n\r\n      attemptFocus(event.currentTarget);\r\n      this.activeTrigger.click = !this.activeTrigger.click;\r\n\r\n      if (this.isWithActiveTrigger) {\r\n        this.enter(null);\r\n      } else {\r\n        /* istanbul ignore next */\r\n        this.leave(null);\r\n      }\r\n    },\r\n\r\n    /* istanbul ignore next */\r\n    toggle: function toggle() {\r\n      // Manual toggle handler\r\n      if (!this.$_enabled || this.dropdownOpen()) {\r\n        /* istanbul ignore next */\r\n        return;\r\n      } // Should we register as an active trigger?\r\n      // this.activeTrigger.manual = !this.activeTrigger.manual\r\n\r\n\r\n      if (this.localShow) {\r\n        this.leave(null);\r\n      } else {\r\n        this.enter(null);\r\n      }\r\n    },\r\n    enter: function enter() {\r\n      var _this10 = this;\r\n\r\n      var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\r\n\r\n      // Opening trigger handler\r\n      // Note: Click events are sent with event === null\r\n      if (event) {\r\n        this.activeTrigger[event.type === 'focusin' ? 'focus' : 'hover'] = true;\r\n      }\r\n      /* istanbul ignore next */\r\n\r\n\r\n      if (this.localShow || this.$_hoverState === 'in') {\r\n        this.$_hoverState = 'in';\r\n        return;\r\n      }\r\n\r\n      this.clearHoverTimeout();\r\n      this.$_hoverState = 'in';\r\n\r\n      if (!this.computedDelay.show) {\r\n        this.show();\r\n      } else {\r\n        // Hide any title attribute while enter delay is active\r\n        this.fixTitle();\r\n        this.$_hoverTimeout = setTimeout(function () {\r\n          /* istanbul ignore else */\r\n          if (_this10.$_hoverState === 'in') {\r\n            _this10.show();\r\n          } else if (!_this10.localShow) {\r\n            _this10.restoreTitle();\r\n          }\r\n        }, this.computedDelay.show);\r\n      }\r\n    },\r\n    leave: function leave() {\r\n      var _this11 = this;\r\n\r\n      var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\r\n\r\n      // Closing trigger handler\r\n      // Note: Click events are sent with event === null\r\n      if (event) {\r\n        this.activeTrigger[event.type === 'focusout' ? 'focus' : 'hover'] = false;\r\n        /* istanbul ignore next */\r\n\r\n        if (event.type === 'focusout' && arrayIncludes(this.computedTriggers, 'blur')) {\r\n          // Special case for `blur`: we clear out the other triggers\r\n          this.activeTrigger.click = false;\r\n          this.activeTrigger.hover = false;\r\n        }\r\n      }\r\n      /* istanbul ignore next: ignore for now */\r\n\r\n\r\n      if (this.isWithActiveTrigger) {\r\n        return;\r\n      }\r\n\r\n      this.clearHoverTimeout();\r\n      this.$_hoverState = 'out';\r\n\r\n      if (!this.computedDelay.hide) {\r\n        this.hide();\r\n      } else {\r\n        this.$_hoverTimeout = setTimeout(function () {\r\n          if (_this11.$_hoverState === 'out') {\r\n            _this11.hide();\r\n          }\r\n        }, this.computedDelay.hide);\r\n      }\r\n    }\r\n  }\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}
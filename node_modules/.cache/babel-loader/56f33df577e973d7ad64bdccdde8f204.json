{"ast":null,"code":"/*!\r\n * express\r\n * Copyright(c) 2009-2013 TJ Holowaychuk\r\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\n'use strict';\n/**\r\n * Module dependencies.\r\n * @private\r\n */\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nrequire(\"core-js/modules/web.immediate.js\");\n\nvar Buffer = require('safe-buffer').Buffer;\n\nvar contentDisposition = require('content-disposition');\n\nvar createError = require('http-errors');\n\nvar deprecate = require('depd')('express');\n\nvar encodeUrl = require('encodeurl');\n\nvar escapeHtml = require('escape-html');\n\nvar http = require('http');\n\nvar isAbsolute = require('./utils').isAbsolute;\n\nvar onFinished = require('on-finished');\n\nvar path = require('path');\n\nvar statuses = require('statuses');\n\nvar merge = require('utils-merge');\n\nvar sign = require('cookie-signature').sign;\n\nvar normalizeType = require('./utils').normalizeType;\n\nvar normalizeTypes = require('./utils').normalizeTypes;\n\nvar setCharset = require('./utils').setCharset;\n\nvar cookie = require('cookie');\n\nvar send = require('send');\n\nvar extname = path.extname;\nvar mime = send.mime;\nvar resolve = path.resolve;\n\nvar vary = require('vary');\n/**\r\n * Response prototype.\r\n * @public\r\n */\n\n\nvar res = Object.create(http.ServerResponse.prototype);\n/**\r\n * Module exports.\r\n * @public\r\n */\n\nmodule.exports = res;\n/**\r\n * Module variables.\r\n * @private\r\n */\n\nvar charsetRegExp = /;\\s*charset\\s*=/;\n/**\r\n * Set status `code`.\r\n *\r\n * @param {Number} code\r\n * @return {ServerResponse}\r\n * @public\r\n */\n\nres.status = function status(code) {\n  if ((typeof code === 'string' || Math.floor(code) !== code) && code > 99 && code < 1000) {\n    deprecate('res.status(' + JSON.stringify(code) + '): use res.status(' + Math.floor(code) + ') instead');\n  }\n\n  this.statusCode = code;\n  return this;\n};\n/**\r\n * Set Link header field with the given `links`.\r\n *\r\n * Examples:\r\n *\r\n *    res.links({\r\n *      next: 'http://api.example.com/users?page=2',\r\n *      last: 'http://api.example.com/users?page=5'\r\n *    });\r\n *\r\n * @param {Object} links\r\n * @return {ServerResponse}\r\n * @public\r\n */\n\n\nres.links = function (links) {\n  var link = this.get('Link') || '';\n  if (link) link += ', ';\n  return this.set('Link', link + Object.keys(links).map(function (rel) {\n    return '<' + links[rel] + '>; rel=\"' + rel + '\"';\n  }).join(', '));\n};\n/**\r\n * Send a response.\r\n *\r\n * Examples:\r\n *\r\n *     res.send(Buffer.from('wahoo'));\r\n *     res.send({ some: 'json' });\r\n *     res.send('<p>some html</p>');\r\n *\r\n * @param {string|number|boolean|object|Buffer} body\r\n * @public\r\n */\n\n\nres.send = function send(body) {\n  var chunk = body;\n  var encoding;\n  var req = this.req;\n  var type; // settings\n\n  var app = this.app; // allow status / body\n\n  if (arguments.length === 2) {\n    // res.send(body, status) backwards compat\n    if (typeof arguments[0] !== 'number' && typeof arguments[1] === 'number') {\n      deprecate('res.send(body, status): Use res.status(status).send(body) instead');\n      this.statusCode = arguments[1];\n    } else {\n      deprecate('res.send(status, body): Use res.status(status).send(body) instead');\n      this.statusCode = arguments[0];\n      chunk = arguments[1];\n    }\n  } // disambiguate res.send(status) and res.send(status, num)\n\n\n  if (typeof chunk === 'number' && arguments.length === 1) {\n    // res.send(status) will set status message as text string\n    if (!this.get('Content-Type')) {\n      this.type('txt');\n    }\n\n    deprecate('res.send(status): Use res.sendStatus(status) instead');\n    this.statusCode = chunk;\n    chunk = statuses.message[chunk];\n  }\n\n  switch (typeof chunk) {\n    // string defaulting to html\n    case 'string':\n      if (!this.get('Content-Type')) {\n        this.type('html');\n      }\n\n      break;\n\n    case 'boolean':\n    case 'number':\n    case 'object':\n      if (chunk === null) {\n        chunk = '';\n      } else if (Buffer.isBuffer(chunk)) {\n        if (!this.get('Content-Type')) {\n          this.type('bin');\n        }\n      } else {\n        return this.json(chunk);\n      }\n\n      break;\n  } // write strings in utf-8\n\n\n  if (typeof chunk === 'string') {\n    encoding = 'utf8';\n    type = this.get('Content-Type'); // reflect this in content-type\n\n    if (typeof type === 'string') {\n      this.set('Content-Type', setCharset(type, 'utf-8'));\n    }\n  } // determine if ETag should be generated\n\n\n  var etagFn = app.get('etag fn');\n  var generateETag = !this.get('ETag') && typeof etagFn === 'function'; // populate Content-Length\n\n  var len;\n\n  if (chunk !== undefined) {\n    if (Buffer.isBuffer(chunk)) {\n      // get length of Buffer\n      len = chunk.length;\n    } else if (!generateETag && chunk.length < 1000) {\n      // just calculate length when no ETag + small chunk\n      len = Buffer.byteLength(chunk, encoding);\n    } else {\n      // convert chunk to Buffer and calculate\n      chunk = Buffer.from(chunk, encoding);\n      encoding = undefined;\n      len = chunk.length;\n    }\n\n    this.set('Content-Length', len);\n  } // populate ETag\n\n\n  var etag;\n\n  if (generateETag && len !== undefined) {\n    if (etag = etagFn(chunk, encoding)) {\n      this.set('ETag', etag);\n    }\n  } // freshness\n\n\n  if (req.fresh) this.statusCode = 304; // strip irrelevant headers\n\n  if (204 === this.statusCode || 304 === this.statusCode) {\n    this.removeHeader('Content-Type');\n    this.removeHeader('Content-Length');\n    this.removeHeader('Transfer-Encoding');\n    chunk = '';\n  } // alter headers for 205\n\n\n  if (this.statusCode === 205) {\n    this.set('Content-Length', '0');\n    this.removeHeader('Transfer-Encoding');\n    chunk = '';\n  }\n\n  if (req.method === 'HEAD') {\n    // skip body for HEAD\n    this.end();\n  } else {\n    // respond\n    this.end(chunk, encoding);\n  }\n\n  return this;\n};\n/**\r\n * Send JSON response.\r\n *\r\n * Examples:\r\n *\r\n *     res.json(null);\r\n *     res.json({ user: 'tj' });\r\n *\r\n * @param {string|number|boolean|object} obj\r\n * @public\r\n */\n\n\nres.json = function json(obj) {\n  var val = obj; // allow status / body\n\n  if (arguments.length === 2) {\n    // res.json(body, status) backwards compat\n    if (typeof arguments[1] === 'number') {\n      deprecate('res.json(obj, status): Use res.status(status).json(obj) instead');\n      this.statusCode = arguments[1];\n    } else {\n      deprecate('res.json(status, obj): Use res.status(status).json(obj) instead');\n      this.statusCode = arguments[0];\n      val = arguments[1];\n    }\n  } // settings\n\n\n  var app = this.app;\n  var escape = app.get('json escape');\n  var replacer = app.get('json replacer');\n  var spaces = app.get('json spaces');\n  var body = stringify(val, replacer, spaces, escape); // content-type\n\n  if (!this.get('Content-Type')) {\n    this.set('Content-Type', 'application/json');\n  }\n\n  return this.send(body);\n};\n/**\r\n * Send JSON response with JSONP callback support.\r\n *\r\n * Examples:\r\n *\r\n *     res.jsonp(null);\r\n *     res.jsonp({ user: 'tj' });\r\n *\r\n * @param {string|number|boolean|object} obj\r\n * @public\r\n */\n\n\nres.jsonp = function jsonp(obj) {\n  var val = obj; // allow status / body\n\n  if (arguments.length === 2) {\n    // res.jsonp(body, status) backwards compat\n    if (typeof arguments[1] === 'number') {\n      deprecate('res.jsonp(obj, status): Use res.status(status).jsonp(obj) instead');\n      this.statusCode = arguments[1];\n    } else {\n      deprecate('res.jsonp(status, obj): Use res.status(status).jsonp(obj) instead');\n      this.statusCode = arguments[0];\n      val = arguments[1];\n    }\n  } // settings\n\n\n  var app = this.app;\n  var escape = app.get('json escape');\n  var replacer = app.get('json replacer');\n  var spaces = app.get('json spaces');\n  var body = stringify(val, replacer, spaces, escape);\n  var callback = this.req.query[app.get('jsonp callback name')]; // content-type\n\n  if (!this.get('Content-Type')) {\n    this.set('X-Content-Type-Options', 'nosniff');\n    this.set('Content-Type', 'application/json');\n  } // fixup callback\n\n\n  if (Array.isArray(callback)) {\n    callback = callback[0];\n  } // jsonp\n\n\n  if (typeof callback === 'string' && callback.length !== 0) {\n    this.set('X-Content-Type-Options', 'nosniff');\n    this.set('Content-Type', 'text/javascript'); // restrict callback charset\n\n    callback = callback.replace(/[^\\[\\]\\w$.]/g, '');\n\n    if (body === undefined) {\n      // empty argument\n      body = '';\n    } else if (typeof body === 'string') {\n      // replace chars not allowed in JavaScript that are in JSON\n      body = body.replace(/\\u2028/g, '\\\\u2028').replace(/\\u2029/g, '\\\\u2029');\n    } // the /**/ is a specific security mitigation for \"Rosetta Flash JSONP abuse\"\n    // the typeof check is just to reduce client error noise\n\n\n    body = '/**/ typeof ' + callback + ' === \\'function\\' && ' + callback + '(' + body + ');';\n  }\n\n  return this.send(body);\n};\n/**\r\n * Send given HTTP status code.\r\n *\r\n * Sets the response status to `statusCode` and the body of the\r\n * response to the standard description from node's http.STATUS_CODES\r\n * or the statusCode number if no description.\r\n *\r\n * Examples:\r\n *\r\n *     res.sendStatus(200);\r\n *\r\n * @param {number} statusCode\r\n * @public\r\n */\n\n\nres.sendStatus = function sendStatus(statusCode) {\n  var body = statuses.message[statusCode] || String(statusCode);\n  this.statusCode = statusCode;\n  this.type('txt');\n  return this.send(body);\n};\n/**\r\n * Transfer the file at the given `path`.\r\n *\r\n * Automatically sets the _Content-Type_ response header field.\r\n * The callback `callback(err)` is invoked when the transfer is complete\r\n * or when an error occurs. Be sure to check `res.headersSent`\r\n * if you wish to attempt responding, as the header and some data\r\n * may have already been transferred.\r\n *\r\n * Options:\r\n *\r\n *   - `maxAge`   defaulting to 0 (can be string converted by `ms`)\r\n *   - `root`     root directory for relative filenames\r\n *   - `headers`  object of headers to serve with file\r\n *   - `dotfiles` serve dotfiles, defaulting to false; can be `\"allow\"` to send them\r\n *\r\n * Other options are passed along to `send`.\r\n *\r\n * Examples:\r\n *\r\n *  The following example illustrates how `res.sendFile()` may\r\n *  be used as an alternative for the `static()` middleware for\r\n *  dynamic situations. The code backing `res.sendFile()` is actually\r\n *  the same code, so HTTP cache support etc is identical.\r\n *\r\n *     app.get('/user/:uid/photos/:file', function(req, res){\r\n *       var uid = req.params.uid\r\n *         , file = req.params.file;\r\n *\r\n *       req.user.mayViewFilesFrom(uid, function(yes){\r\n *         if (yes) {\r\n *           res.sendFile('/uploads/' + uid + '/' + file);\r\n *         } else {\r\n *           res.send(403, 'Sorry! you cant see that.');\r\n *         }\r\n *       });\r\n *     });\r\n *\r\n * @public\r\n */\n\n\nres.sendFile = function sendFile(path, options, callback) {\n  var done = callback;\n  var req = this.req;\n  var res = this;\n  var next = req.next;\n  var opts = options || {};\n\n  if (!path) {\n    throw new TypeError('path argument is required to res.sendFile');\n  }\n\n  if (typeof path !== 'string') {\n    throw new TypeError('path must be a string to res.sendFile');\n  } // support function as second arg\n\n\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  }\n\n  if (!opts.root && !isAbsolute(path)) {\n    throw new TypeError('path must be absolute or specify root to res.sendFile');\n  } // create file stream\n\n\n  var pathname = encodeURI(path);\n  var file = send(req, pathname, opts); // transfer\n\n  sendfile(res, file, opts, function (err) {\n    if (done) return done(err);\n    if (err && err.code === 'EISDIR') return next(); // next() all but write errors\n\n    if (err && err.code !== 'ECONNABORTED' && err.syscall !== 'write') {\n      next(err);\n    }\n  });\n};\n/**\r\n * Transfer the file at the given `path`.\r\n *\r\n * Automatically sets the _Content-Type_ response header field.\r\n * The callback `callback(err)` is invoked when the transfer is complete\r\n * or when an error occurs. Be sure to check `res.headersSent`\r\n * if you wish to attempt responding, as the header and some data\r\n * may have already been transferred.\r\n *\r\n * Options:\r\n *\r\n *   - `maxAge`   defaulting to 0 (can be string converted by `ms`)\r\n *   - `root`     root directory for relative filenames\r\n *   - `headers`  object of headers to serve with file\r\n *   - `dotfiles` serve dotfiles, defaulting to false; can be `\"allow\"` to send them\r\n *\r\n * Other options are passed along to `send`.\r\n *\r\n * Examples:\r\n *\r\n *  The following example illustrates how `res.sendfile()` may\r\n *  be used as an alternative for the `static()` middleware for\r\n *  dynamic situations. The code backing `res.sendfile()` is actually\r\n *  the same code, so HTTP cache support etc is identical.\r\n *\r\n *     app.get('/user/:uid/photos/:file', function(req, res){\r\n *       var uid = req.params.uid\r\n *         , file = req.params.file;\r\n *\r\n *       req.user.mayViewFilesFrom(uid, function(yes){\r\n *         if (yes) {\r\n *           res.sendfile('/uploads/' + uid + '/' + file);\r\n *         } else {\r\n *           res.send(403, 'Sorry! you cant see that.');\r\n *         }\r\n *       });\r\n *     });\r\n *\r\n * @public\r\n */\n\n\nres.sendfile = function (path, options, callback) {\n  var done = callback;\n  var req = this.req;\n  var res = this;\n  var next = req.next;\n  var opts = options || {}; // support function as second arg\n\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  } // create file stream\n\n\n  var file = send(req, path, opts); // transfer\n\n  sendfile(res, file, opts, function (err) {\n    if (done) return done(err);\n    if (err && err.code === 'EISDIR') return next(); // next() all but write errors\n\n    if (err && err.code !== 'ECONNABORTED' && err.syscall !== 'write') {\n      next(err);\n    }\n  });\n};\n\nres.sendfile = deprecate.function(res.sendfile, 'res.sendfile: Use res.sendFile instead');\n/**\r\n * Transfer the file at the given `path` as an attachment.\r\n *\r\n * Optionally providing an alternate attachment `filename`,\r\n * and optional callback `callback(err)`. The callback is invoked\r\n * when the data transfer is complete, or when an error has\r\n * occurred. Be sure to check `res.headersSent` if you plan to respond.\r\n *\r\n * Optionally providing an `options` object to use with `res.sendFile()`.\r\n * This function will set the `Content-Disposition` header, overriding\r\n * any `Content-Disposition` header passed as header options in order\r\n * to set the attachment and filename.\r\n *\r\n * This method uses `res.sendFile()`.\r\n *\r\n * @public\r\n */\n\nres.download = function download(path, filename, options, callback) {\n  var done = callback;\n  var name = filename;\n  var opts = options || null; // support function as second or third arg\n\n  if (typeof filename === 'function') {\n    done = filename;\n    name = null;\n    opts = null;\n  } else if (typeof options === 'function') {\n    done = options;\n    opts = null;\n  } // support optional filename, where options may be in it's place\n\n\n  if (typeof filename === 'object' && (typeof options === 'function' || options === undefined)) {\n    name = null;\n    opts = filename;\n  } // set Content-Disposition when file is sent\n\n\n  var headers = {\n    'Content-Disposition': contentDisposition(name || path)\n  }; // merge user-provided headers\n\n  if (opts && opts.headers) {\n    var keys = Object.keys(opts.headers);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key.toLowerCase() !== 'content-disposition') {\n        headers[key] = opts.headers[key];\n      }\n    }\n  } // merge user-provided options\n\n\n  opts = Object.create(opts);\n  opts.headers = headers; // Resolve the full path for sendFile\n\n  var fullPath = !opts.root ? resolve(path) : path; // send file\n\n  return this.sendFile(fullPath, opts, done);\n};\n/**\r\n * Set _Content-Type_ response header with `type` through `mime.lookup()`\r\n * when it does not contain \"/\", or set the Content-Type to `type` otherwise.\r\n *\r\n * Examples:\r\n *\r\n *     res.type('.html');\r\n *     res.type('html');\r\n *     res.type('json');\r\n *     res.type('application/json');\r\n *     res.type('png');\r\n *\r\n * @param {String} type\r\n * @return {ServerResponse} for chaining\r\n * @public\r\n */\n\n\nres.contentType = res.type = function contentType(type) {\n  var ct = type.indexOf('/') === -1 ? mime.lookup(type) : type;\n  return this.set('Content-Type', ct);\n};\n/**\r\n * Respond to the Acceptable formats using an `obj`\r\n * of mime-type callbacks.\r\n *\r\n * This method uses `req.accepted`, an array of\r\n * acceptable types ordered by their quality values.\r\n * When \"Accept\" is not present the _first_ callback\r\n * is invoked, otherwise the first match is used. When\r\n * no match is performed the server responds with\r\n * 406 \"Not Acceptable\".\r\n *\r\n * Content-Type is set for you, however if you choose\r\n * you may alter this within the callback using `res.type()`\r\n * or `res.set('Content-Type', ...)`.\r\n *\r\n *    res.format({\r\n *      'text/plain': function(){\r\n *        res.send('hey');\r\n *      },\r\n *\r\n *      'text/html': function(){\r\n *        res.send('<p>hey</p>');\r\n *      },\r\n *\r\n *      'application/json': function () {\r\n *        res.send({ message: 'hey' });\r\n *      }\r\n *    });\r\n *\r\n * In addition to canonicalized MIME types you may\r\n * also use extnames mapped to these types:\r\n *\r\n *    res.format({\r\n *      text: function(){\r\n *        res.send('hey');\r\n *      },\r\n *\r\n *      html: function(){\r\n *        res.send('<p>hey</p>');\r\n *      },\r\n *\r\n *      json: function(){\r\n *        res.send({ message: 'hey' });\r\n *      }\r\n *    });\r\n *\r\n * By default Express passes an `Error`\r\n * with a `.status` of 406 to `next(err)`\r\n * if a match is not made. If you provide\r\n * a `.default` callback it will be invoked\r\n * instead.\r\n *\r\n * @param {Object} obj\r\n * @return {ServerResponse} for chaining\r\n * @public\r\n */\n\n\nres.format = function (obj) {\n  var req = this.req;\n  var next = req.next;\n  var keys = Object.keys(obj).filter(function (v) {\n    return v !== 'default';\n  });\n  var key = keys.length > 0 ? req.accepts(keys) : false;\n  this.vary(\"Accept\");\n\n  if (key) {\n    this.set('Content-Type', normalizeType(key).value);\n    obj[key](req, this, next);\n  } else if (obj.default) {\n    obj.default(req, this, next);\n  } else {\n    next(createError(406, {\n      types: normalizeTypes(keys).map(function (o) {\n        return o.value;\n      })\n    }));\n  }\n\n  return this;\n};\n/**\r\n * Set _Content-Disposition_ header to _attachment_ with optional `filename`.\r\n *\r\n * @param {String} filename\r\n * @return {ServerResponse}\r\n * @public\r\n */\n\n\nres.attachment = function attachment(filename) {\n  if (filename) {\n    this.type(extname(filename));\n  }\n\n  this.set('Content-Disposition', contentDisposition(filename));\n  return this;\n};\n/**\r\n * Append additional header `field` with value `val`.\r\n *\r\n * Example:\r\n *\r\n *    res.append('Link', ['<http://localhost/>', '<http://localhost:3000/>']);\r\n *    res.append('Set-Cookie', 'foo=bar; Path=/; HttpOnly');\r\n *    res.append('Warning', '199 Miscellaneous warning');\r\n *\r\n * @param {String} field\r\n * @param {String|Array} val\r\n * @return {ServerResponse} for chaining\r\n * @public\r\n */\n\n\nres.append = function append(field, val) {\n  var prev = this.get(field);\n  var value = val;\n\n  if (prev) {\n    // concat the new and prev vals\n    value = Array.isArray(prev) ? prev.concat(val) : Array.isArray(val) ? [prev].concat(val) : [prev, val];\n  }\n\n  return this.set(field, value);\n};\n/**\r\n * Set header `field` to `val`, or pass\r\n * an object of header fields.\r\n *\r\n * Examples:\r\n *\r\n *    res.set('Foo', ['bar', 'baz']);\r\n *    res.set('Accept', 'application/json');\r\n *    res.set({ Accept: 'text/plain', 'X-API-Key': 'tobi' });\r\n *\r\n * Aliased as `res.header()`.\r\n *\r\n * @param {String|Object} field\r\n * @param {String|Array} val\r\n * @return {ServerResponse} for chaining\r\n * @public\r\n */\n\n\nres.set = res.header = function header(field, val) {\n  if (arguments.length === 2) {\n    var value = Array.isArray(val) ? val.map(String) : String(val); // add charset to content-type\n\n    if (field.toLowerCase() === 'content-type') {\n      if (Array.isArray(value)) {\n        throw new TypeError('Content-Type cannot be set to an Array');\n      }\n\n      if (!charsetRegExp.test(value)) {\n        var charset = mime.charsets.lookup(value.split(';')[0]);\n        if (charset) value += '; charset=' + charset.toLowerCase();\n      }\n    }\n\n    this.setHeader(field, value);\n  } else {\n    for (var key in field) {\n      this.set(key, field[key]);\n    }\n  }\n\n  return this;\n};\n/**\r\n * Get value for header `field`.\r\n *\r\n * @param {String} field\r\n * @return {String}\r\n * @public\r\n */\n\n\nres.get = function (field) {\n  return this.getHeader(field);\n};\n/**\r\n * Clear cookie `name`.\r\n *\r\n * @param {String} name\r\n * @param {Object} [options]\r\n * @return {ServerResponse} for chaining\r\n * @public\r\n */\n\n\nres.clearCookie = function clearCookie(name, options) {\n  var opts = merge({\n    expires: new Date(1),\n    path: '/'\n  }, options);\n  return this.cookie(name, '', opts);\n};\n/**\r\n * Set cookie `name` to `value`, with the given `options`.\r\n *\r\n * Options:\r\n *\r\n *    - `maxAge`   max-age in milliseconds, converted to `expires`\r\n *    - `signed`   sign the cookie\r\n *    - `path`     defaults to \"/\"\r\n *\r\n * Examples:\r\n *\r\n *    // \"Remember Me\" for 15 minutes\r\n *    res.cookie('rememberme', '1', { expires: new Date(Date.now() + 900000), httpOnly: true });\r\n *\r\n *    // same as above\r\n *    res.cookie('rememberme', '1', { maxAge: 900000, httpOnly: true })\r\n *\r\n * @param {String} name\r\n * @param {String|Object} value\r\n * @param {Object} [options]\r\n * @return {ServerResponse} for chaining\r\n * @public\r\n */\n\n\nres.cookie = function (name, value, options) {\n  var opts = merge({}, options);\n  var secret = this.req.secret;\n  var signed = opts.signed;\n\n  if (signed && !secret) {\n    throw new Error('cookieParser(\"secret\") required for signed cookies');\n  }\n\n  var val = typeof value === 'object' ? 'j:' + JSON.stringify(value) : String(value);\n\n  if (signed) {\n    val = 's:' + sign(val, secret);\n  }\n\n  if (opts.maxAge != null) {\n    var maxAge = opts.maxAge - 0;\n\n    if (!isNaN(maxAge)) {\n      opts.expires = new Date(Date.now() + maxAge);\n      opts.maxAge = Math.floor(maxAge / 1000);\n    }\n  }\n\n  if (opts.path == null) {\n    opts.path = '/';\n  }\n\n  this.append('Set-Cookie', cookie.serialize(name, String(val), opts));\n  return this;\n};\n/**\r\n * Set the location header to `url`.\r\n *\r\n * The given `url` can also be \"back\", which redirects\r\n * to the _Referrer_ or _Referer_ headers or \"/\".\r\n *\r\n * Examples:\r\n *\r\n *    res.location('/foo/bar').;\r\n *    res.location('http://example.com');\r\n *    res.location('../login');\r\n *\r\n * @param {String} url\r\n * @return {ServerResponse} for chaining\r\n * @public\r\n */\n\n\nres.location = function location(url) {\n  var loc = url; // \"back\" is an alias for the referrer\n\n  if (url === 'back') {\n    loc = this.req.get('Referrer') || '/';\n  } // set location\n\n\n  return this.set('Location', encodeUrl(loc));\n};\n/**\r\n * Redirect to the given `url` with optional response `status`\r\n * defaulting to 302.\r\n *\r\n * The resulting `url` is determined by `res.location()`, so\r\n * it will play nicely with mounted apps, relative paths,\r\n * `\"back\"` etc.\r\n *\r\n * Examples:\r\n *\r\n *    res.redirect('/foo/bar');\r\n *    res.redirect('http://example.com');\r\n *    res.redirect(301, 'http://example.com');\r\n *    res.redirect('../login'); // /blog/post/1 -> /blog/login\r\n *\r\n * @public\r\n */\n\n\nres.redirect = function redirect(url) {\n  var address = url;\n  var body;\n  var status = 302; // allow status / url\n\n  if (arguments.length === 2) {\n    if (typeof arguments[0] === 'number') {\n      status = arguments[0];\n      address = arguments[1];\n    } else {\n      deprecate('res.redirect(url, status): Use res.redirect(status, url) instead');\n      status = arguments[1];\n    }\n  } // Set location header\n\n\n  address = this.location(address).get('Location'); // Support text/{plain,html} by default\n\n  this.format({\n    text: function () {\n      body = statuses.message[status] + '. Redirecting to ' + address;\n    },\n    html: function () {\n      var u = escapeHtml(address);\n      body = '<p>' + statuses.message[status] + '. Redirecting to <a href=\"' + u + '\">' + u + '</a></p>';\n    },\n    default: function () {\n      body = '';\n    }\n  }); // Respond\n\n  this.statusCode = status;\n  this.set('Content-Length', Buffer.byteLength(body));\n\n  if (this.req.method === 'HEAD') {\n    this.end();\n  } else {\n    this.end(body);\n  }\n};\n/**\r\n * Add `field` to Vary. If already present in the Vary set, then\r\n * this call is simply ignored.\r\n *\r\n * @param {Array|String} field\r\n * @return {ServerResponse} for chaining\r\n * @public\r\n */\n\n\nres.vary = function (field) {\n  // checks for back-compat\n  if (!field || Array.isArray(field) && !field.length) {\n    deprecate('res.vary(): Provide a field name');\n    return this;\n  }\n\n  vary(this, field);\n  return this;\n};\n/**\r\n * Render `view` with the given `options` and optional callback `fn`.\r\n * When a callback function is given a response will _not_ be made\r\n * automatically, otherwise a response of _200_ and _text/html_ is given.\r\n *\r\n * Options:\r\n *\r\n *  - `cache`     boolean hinting to the engine it should cache\r\n *  - `filename`  filename of the view being rendered\r\n *\r\n * @public\r\n */\n\n\nres.render = function render(view, options, callback) {\n  var app = this.req.app;\n  var done = callback;\n  var opts = options || {};\n  var req = this.req;\n  var self = this; // support callback function as second arg\n\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  } // merge res.locals\n\n\n  opts._locals = self.locals; // default callback to respond\n\n  done = done || function (err, str) {\n    if (err) return req.next(err);\n    self.send(str);\n  }; // render\n\n\n  app.render(view, opts, done);\n}; // pipe the send file stream\n\n\nfunction sendfile(res, file, options, callback) {\n  var done = false;\n  var streaming; // request aborted\n\n  function onaborted() {\n    if (done) return;\n    done = true;\n    var err = new Error('Request aborted');\n    err.code = 'ECONNABORTED';\n    callback(err);\n  } // directory\n\n\n  function ondirectory() {\n    if (done) return;\n    done = true;\n    var err = new Error('EISDIR, read');\n    err.code = 'EISDIR';\n    callback(err);\n  } // errors\n\n\n  function onerror(err) {\n    if (done) return;\n    done = true;\n    callback(err);\n  } // ended\n\n\n  function onend() {\n    if (done) return;\n    done = true;\n    callback();\n  } // file\n\n\n  function onfile() {\n    streaming = false;\n  } // finished\n\n\n  function onfinish(err) {\n    if (err && err.code === 'ECONNRESET') return onaborted();\n    if (err) return onerror(err);\n    if (done) return;\n    setImmediate(function () {\n      if (streaming !== false && !done) {\n        onaborted();\n        return;\n      }\n\n      if (done) return;\n      done = true;\n      callback();\n    });\n  } // streaming\n\n\n  function onstream() {\n    streaming = true;\n  }\n\n  file.on('directory', ondirectory);\n  file.on('end', onend);\n  file.on('error', onerror);\n  file.on('file', onfile);\n  file.on('stream', onstream);\n  onFinished(res, onfinish);\n\n  if (options.headers) {\n    // set headers on successful transfer\n    file.on('headers', function headers(res) {\n      var obj = options.headers;\n      var keys = Object.keys(obj);\n\n      for (var i = 0; i < keys.length; i++) {\n        var k = keys[i];\n        res.setHeader(k, obj[k]);\n      }\n    });\n  } // pipe\n\n\n  file.pipe(res);\n}\n/**\r\n * Stringify JSON, like JSON.stringify, but v8 optimized, with the\r\n * ability to escape characters that can trigger HTML sniffing.\r\n *\r\n * @param {*} value\r\n * @param {function} replacer\r\n * @param {number} spaces\r\n * @param {boolean} escape\r\n * @returns {string}\r\n * @private\r\n */\n\n\nfunction stringify(value, replacer, spaces, escape) {\n  // v8 checks arguments.length for optimizing simple call\n  // https://bugs.chromium.org/p/v8/issues/detail?id=4730\n  var json = replacer || spaces ? JSON.stringify(value, replacer, spaces) : JSON.stringify(value);\n\n  if (escape && typeof json === 'string') {\n    json = json.replace(/[<>&]/g, function (c) {\n      switch (c.charCodeAt(0)) {\n        case 0x3c:\n          return '\\\\u003c';\n\n        case 0x3e:\n          return '\\\\u003e';\n\n        case 0x26:\n          return '\\\\u0026';\n\n        /* istanbul ignore next: unreachable default */\n\n        default:\n          return c;\n      }\n    });\n  }\n\n  return json;\n}","map":{"version":3,"names":["Buffer","require","contentDisposition","createError","deprecate","encodeUrl","escapeHtml","http","isAbsolute","onFinished","path","statuses","merge","sign","normalizeType","normalizeTypes","setCharset","cookie","send","extname","mime","resolve","vary","res","Object","create","ServerResponse","prototype","module","exports","charsetRegExp","status","code","Math","floor","JSON","stringify","statusCode","links","link","get","set","keys","map","rel","join","body","chunk","encoding","req","type","app","arguments","length","message","isBuffer","json","etagFn","generateETag","len","undefined","byteLength","from","etag","fresh","removeHeader","method","end","obj","val","escape","replacer","spaces","jsonp","callback","query","Array","isArray","replace","sendStatus","String","sendFile","options","done","next","opts","TypeError","root","pathname","encodeURI","file","sendfile","err","syscall","function","download","filename","name","headers","i","key","toLowerCase","fullPath","contentType","ct","indexOf","lookup","format","filter","v","accepts","value","default","types","o","attachment","append","field","prev","concat","header","test","charset","charsets","split","setHeader","getHeader","clearCookie","expires","Date","secret","signed","Error","maxAge","isNaN","now","serialize","location","url","loc","redirect","address","text","html","u","render","view","self","_locals","locals","str","streaming","onaborted","ondirectory","onerror","onend","onfile","onfinish","setImmediate","onstream","on","k","pipe","c","charCodeAt"],"sources":["E:/adminDeal/node_modules/express/lib/response.js"],"sourcesContent":["/*!\r\n * express\r\n * Copyright(c) 2009-2013 TJ Holowaychuk\r\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * Module dependencies.\r\n * @private\r\n */\r\n\r\nvar Buffer = require('safe-buffer').Buffer\r\nvar contentDisposition = require('content-disposition');\r\nvar createError = require('http-errors')\r\nvar deprecate = require('depd')('express');\r\nvar encodeUrl = require('encodeurl');\r\nvar escapeHtml = require('escape-html');\r\nvar http = require('http');\r\nvar isAbsolute = require('./utils').isAbsolute;\r\nvar onFinished = require('on-finished');\r\nvar path = require('path');\r\nvar statuses = require('statuses')\r\nvar merge = require('utils-merge');\r\nvar sign = require('cookie-signature').sign;\r\nvar normalizeType = require('./utils').normalizeType;\r\nvar normalizeTypes = require('./utils').normalizeTypes;\r\nvar setCharset = require('./utils').setCharset;\r\nvar cookie = require('cookie');\r\nvar send = require('send');\r\nvar extname = path.extname;\r\nvar mime = send.mime;\r\nvar resolve = path.resolve;\r\nvar vary = require('vary');\r\n\r\n/**\r\n * Response prototype.\r\n * @public\r\n */\r\n\r\nvar res = Object.create(http.ServerResponse.prototype)\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nmodule.exports = res\r\n\r\n/**\r\n * Module variables.\r\n * @private\r\n */\r\n\r\nvar charsetRegExp = /;\\s*charset\\s*=/;\r\n\r\n/**\r\n * Set status `code`.\r\n *\r\n * @param {Number} code\r\n * @return {ServerResponse}\r\n * @public\r\n */\r\n\r\nres.status = function status(code) {\r\n  if ((typeof code === 'string' || Math.floor(code) !== code) && code > 99 && code < 1000) {\r\n    deprecate('res.status(' + JSON.stringify(code) + '): use res.status(' + Math.floor(code) + ') instead')\r\n  }\r\n  this.statusCode = code;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Set Link header field with the given `links`.\r\n *\r\n * Examples:\r\n *\r\n *    res.links({\r\n *      next: 'http://api.example.com/users?page=2',\r\n *      last: 'http://api.example.com/users?page=5'\r\n *    });\r\n *\r\n * @param {Object} links\r\n * @return {ServerResponse}\r\n * @public\r\n */\r\n\r\nres.links = function(links){\r\n  var link = this.get('Link') || '';\r\n  if (link) link += ', ';\r\n  return this.set('Link', link + Object.keys(links).map(function(rel){\r\n    return '<' + links[rel] + '>; rel=\"' + rel + '\"';\r\n  }).join(', '));\r\n};\r\n\r\n/**\r\n * Send a response.\r\n *\r\n * Examples:\r\n *\r\n *     res.send(Buffer.from('wahoo'));\r\n *     res.send({ some: 'json' });\r\n *     res.send('<p>some html</p>');\r\n *\r\n * @param {string|number|boolean|object|Buffer} body\r\n * @public\r\n */\r\n\r\nres.send = function send(body) {\r\n  var chunk = body;\r\n  var encoding;\r\n  var req = this.req;\r\n  var type;\r\n\r\n  // settings\r\n  var app = this.app;\r\n\r\n  // allow status / body\r\n  if (arguments.length === 2) {\r\n    // res.send(body, status) backwards compat\r\n    if (typeof arguments[0] !== 'number' && typeof arguments[1] === 'number') {\r\n      deprecate('res.send(body, status): Use res.status(status).send(body) instead');\r\n      this.statusCode = arguments[1];\r\n    } else {\r\n      deprecate('res.send(status, body): Use res.status(status).send(body) instead');\r\n      this.statusCode = arguments[0];\r\n      chunk = arguments[1];\r\n    }\r\n  }\r\n\r\n  // disambiguate res.send(status) and res.send(status, num)\r\n  if (typeof chunk === 'number' && arguments.length === 1) {\r\n    // res.send(status) will set status message as text string\r\n    if (!this.get('Content-Type')) {\r\n      this.type('txt');\r\n    }\r\n\r\n    deprecate('res.send(status): Use res.sendStatus(status) instead');\r\n    this.statusCode = chunk;\r\n    chunk = statuses.message[chunk]\r\n  }\r\n\r\n  switch (typeof chunk) {\r\n    // string defaulting to html\r\n    case 'string':\r\n      if (!this.get('Content-Type')) {\r\n        this.type('html');\r\n      }\r\n      break;\r\n    case 'boolean':\r\n    case 'number':\r\n    case 'object':\r\n      if (chunk === null) {\r\n        chunk = '';\r\n      } else if (Buffer.isBuffer(chunk)) {\r\n        if (!this.get('Content-Type')) {\r\n          this.type('bin');\r\n        }\r\n      } else {\r\n        return this.json(chunk);\r\n      }\r\n      break;\r\n  }\r\n\r\n  // write strings in utf-8\r\n  if (typeof chunk === 'string') {\r\n    encoding = 'utf8';\r\n    type = this.get('Content-Type');\r\n\r\n    // reflect this in content-type\r\n    if (typeof type === 'string') {\r\n      this.set('Content-Type', setCharset(type, 'utf-8'));\r\n    }\r\n  }\r\n\r\n  // determine if ETag should be generated\r\n  var etagFn = app.get('etag fn')\r\n  var generateETag = !this.get('ETag') && typeof etagFn === 'function'\r\n\r\n  // populate Content-Length\r\n  var len\r\n  if (chunk !== undefined) {\r\n    if (Buffer.isBuffer(chunk)) {\r\n      // get length of Buffer\r\n      len = chunk.length\r\n    } else if (!generateETag && chunk.length < 1000) {\r\n      // just calculate length when no ETag + small chunk\r\n      len = Buffer.byteLength(chunk, encoding)\r\n    } else {\r\n      // convert chunk to Buffer and calculate\r\n      chunk = Buffer.from(chunk, encoding)\r\n      encoding = undefined;\r\n      len = chunk.length\r\n    }\r\n\r\n    this.set('Content-Length', len);\r\n  }\r\n\r\n  // populate ETag\r\n  var etag;\r\n  if (generateETag && len !== undefined) {\r\n    if ((etag = etagFn(chunk, encoding))) {\r\n      this.set('ETag', etag);\r\n    }\r\n  }\r\n\r\n  // freshness\r\n  if (req.fresh) this.statusCode = 304;\r\n\r\n  // strip irrelevant headers\r\n  if (204 === this.statusCode || 304 === this.statusCode) {\r\n    this.removeHeader('Content-Type');\r\n    this.removeHeader('Content-Length');\r\n    this.removeHeader('Transfer-Encoding');\r\n    chunk = '';\r\n  }\r\n\r\n  // alter headers for 205\r\n  if (this.statusCode === 205) {\r\n    this.set('Content-Length', '0')\r\n    this.removeHeader('Transfer-Encoding')\r\n    chunk = ''\r\n  }\r\n\r\n  if (req.method === 'HEAD') {\r\n    // skip body for HEAD\r\n    this.end();\r\n  } else {\r\n    // respond\r\n    this.end(chunk, encoding);\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Send JSON response.\r\n *\r\n * Examples:\r\n *\r\n *     res.json(null);\r\n *     res.json({ user: 'tj' });\r\n *\r\n * @param {string|number|boolean|object} obj\r\n * @public\r\n */\r\n\r\nres.json = function json(obj) {\r\n  var val = obj;\r\n\r\n  // allow status / body\r\n  if (arguments.length === 2) {\r\n    // res.json(body, status) backwards compat\r\n    if (typeof arguments[1] === 'number') {\r\n      deprecate('res.json(obj, status): Use res.status(status).json(obj) instead');\r\n      this.statusCode = arguments[1];\r\n    } else {\r\n      deprecate('res.json(status, obj): Use res.status(status).json(obj) instead');\r\n      this.statusCode = arguments[0];\r\n      val = arguments[1];\r\n    }\r\n  }\r\n\r\n  // settings\r\n  var app = this.app;\r\n  var escape = app.get('json escape')\r\n  var replacer = app.get('json replacer');\r\n  var spaces = app.get('json spaces');\r\n  var body = stringify(val, replacer, spaces, escape)\r\n\r\n  // content-type\r\n  if (!this.get('Content-Type')) {\r\n    this.set('Content-Type', 'application/json');\r\n  }\r\n\r\n  return this.send(body);\r\n};\r\n\r\n/**\r\n * Send JSON response with JSONP callback support.\r\n *\r\n * Examples:\r\n *\r\n *     res.jsonp(null);\r\n *     res.jsonp({ user: 'tj' });\r\n *\r\n * @param {string|number|boolean|object} obj\r\n * @public\r\n */\r\n\r\nres.jsonp = function jsonp(obj) {\r\n  var val = obj;\r\n\r\n  // allow status / body\r\n  if (arguments.length === 2) {\r\n    // res.jsonp(body, status) backwards compat\r\n    if (typeof arguments[1] === 'number') {\r\n      deprecate('res.jsonp(obj, status): Use res.status(status).jsonp(obj) instead');\r\n      this.statusCode = arguments[1];\r\n    } else {\r\n      deprecate('res.jsonp(status, obj): Use res.status(status).jsonp(obj) instead');\r\n      this.statusCode = arguments[0];\r\n      val = arguments[1];\r\n    }\r\n  }\r\n\r\n  // settings\r\n  var app = this.app;\r\n  var escape = app.get('json escape')\r\n  var replacer = app.get('json replacer');\r\n  var spaces = app.get('json spaces');\r\n  var body = stringify(val, replacer, spaces, escape)\r\n  var callback = this.req.query[app.get('jsonp callback name')];\r\n\r\n  // content-type\r\n  if (!this.get('Content-Type')) {\r\n    this.set('X-Content-Type-Options', 'nosniff');\r\n    this.set('Content-Type', 'application/json');\r\n  }\r\n\r\n  // fixup callback\r\n  if (Array.isArray(callback)) {\r\n    callback = callback[0];\r\n  }\r\n\r\n  // jsonp\r\n  if (typeof callback === 'string' && callback.length !== 0) {\r\n    this.set('X-Content-Type-Options', 'nosniff');\r\n    this.set('Content-Type', 'text/javascript');\r\n\r\n    // restrict callback charset\r\n    callback = callback.replace(/[^\\[\\]\\w$.]/g, '');\r\n\r\n    if (body === undefined) {\r\n      // empty argument\r\n      body = ''\r\n    } else if (typeof body === 'string') {\r\n      // replace chars not allowed in JavaScript that are in JSON\r\n      body = body\r\n        .replace(/\\u2028/g, '\\\\u2028')\r\n        .replace(/\\u2029/g, '\\\\u2029')\r\n    }\r\n\r\n    // the /**/ is a specific security mitigation for \"Rosetta Flash JSONP abuse\"\r\n    // the typeof check is just to reduce client error noise\r\n    body = '/**/ typeof ' + callback + ' === \\'function\\' && ' + callback + '(' + body + ');';\r\n  }\r\n\r\n  return this.send(body);\r\n};\r\n\r\n/**\r\n * Send given HTTP status code.\r\n *\r\n * Sets the response status to `statusCode` and the body of the\r\n * response to the standard description from node's http.STATUS_CODES\r\n * or the statusCode number if no description.\r\n *\r\n * Examples:\r\n *\r\n *     res.sendStatus(200);\r\n *\r\n * @param {number} statusCode\r\n * @public\r\n */\r\n\r\nres.sendStatus = function sendStatus(statusCode) {\r\n  var body = statuses.message[statusCode] || String(statusCode)\r\n\r\n  this.statusCode = statusCode;\r\n  this.type('txt');\r\n\r\n  return this.send(body);\r\n};\r\n\r\n/**\r\n * Transfer the file at the given `path`.\r\n *\r\n * Automatically sets the _Content-Type_ response header field.\r\n * The callback `callback(err)` is invoked when the transfer is complete\r\n * or when an error occurs. Be sure to check `res.headersSent`\r\n * if you wish to attempt responding, as the header and some data\r\n * may have already been transferred.\r\n *\r\n * Options:\r\n *\r\n *   - `maxAge`   defaulting to 0 (can be string converted by `ms`)\r\n *   - `root`     root directory for relative filenames\r\n *   - `headers`  object of headers to serve with file\r\n *   - `dotfiles` serve dotfiles, defaulting to false; can be `\"allow\"` to send them\r\n *\r\n * Other options are passed along to `send`.\r\n *\r\n * Examples:\r\n *\r\n *  The following example illustrates how `res.sendFile()` may\r\n *  be used as an alternative for the `static()` middleware for\r\n *  dynamic situations. The code backing `res.sendFile()` is actually\r\n *  the same code, so HTTP cache support etc is identical.\r\n *\r\n *     app.get('/user/:uid/photos/:file', function(req, res){\r\n *       var uid = req.params.uid\r\n *         , file = req.params.file;\r\n *\r\n *       req.user.mayViewFilesFrom(uid, function(yes){\r\n *         if (yes) {\r\n *           res.sendFile('/uploads/' + uid + '/' + file);\r\n *         } else {\r\n *           res.send(403, 'Sorry! you cant see that.');\r\n *         }\r\n *       });\r\n *     });\r\n *\r\n * @public\r\n */\r\n\r\nres.sendFile = function sendFile(path, options, callback) {\r\n  var done = callback;\r\n  var req = this.req;\r\n  var res = this;\r\n  var next = req.next;\r\n  var opts = options || {};\r\n\r\n  if (!path) {\r\n    throw new TypeError('path argument is required to res.sendFile');\r\n  }\r\n\r\n  if (typeof path !== 'string') {\r\n    throw new TypeError('path must be a string to res.sendFile')\r\n  }\r\n\r\n  // support function as second arg\r\n  if (typeof options === 'function') {\r\n    done = options;\r\n    opts = {};\r\n  }\r\n\r\n  if (!opts.root && !isAbsolute(path)) {\r\n    throw new TypeError('path must be absolute or specify root to res.sendFile');\r\n  }\r\n\r\n  // create file stream\r\n  var pathname = encodeURI(path);\r\n  var file = send(req, pathname, opts);\r\n\r\n  // transfer\r\n  sendfile(res, file, opts, function (err) {\r\n    if (done) return done(err);\r\n    if (err && err.code === 'EISDIR') return next();\r\n\r\n    // next() all but write errors\r\n    if (err && err.code !== 'ECONNABORTED' && err.syscall !== 'write') {\r\n      next(err);\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * Transfer the file at the given `path`.\r\n *\r\n * Automatically sets the _Content-Type_ response header field.\r\n * The callback `callback(err)` is invoked when the transfer is complete\r\n * or when an error occurs. Be sure to check `res.headersSent`\r\n * if you wish to attempt responding, as the header and some data\r\n * may have already been transferred.\r\n *\r\n * Options:\r\n *\r\n *   - `maxAge`   defaulting to 0 (can be string converted by `ms`)\r\n *   - `root`     root directory for relative filenames\r\n *   - `headers`  object of headers to serve with file\r\n *   - `dotfiles` serve dotfiles, defaulting to false; can be `\"allow\"` to send them\r\n *\r\n * Other options are passed along to `send`.\r\n *\r\n * Examples:\r\n *\r\n *  The following example illustrates how `res.sendfile()` may\r\n *  be used as an alternative for the `static()` middleware for\r\n *  dynamic situations. The code backing `res.sendfile()` is actually\r\n *  the same code, so HTTP cache support etc is identical.\r\n *\r\n *     app.get('/user/:uid/photos/:file', function(req, res){\r\n *       var uid = req.params.uid\r\n *         , file = req.params.file;\r\n *\r\n *       req.user.mayViewFilesFrom(uid, function(yes){\r\n *         if (yes) {\r\n *           res.sendfile('/uploads/' + uid + '/' + file);\r\n *         } else {\r\n *           res.send(403, 'Sorry! you cant see that.');\r\n *         }\r\n *       });\r\n *     });\r\n *\r\n * @public\r\n */\r\n\r\nres.sendfile = function (path, options, callback) {\r\n  var done = callback;\r\n  var req = this.req;\r\n  var res = this;\r\n  var next = req.next;\r\n  var opts = options || {};\r\n\r\n  // support function as second arg\r\n  if (typeof options === 'function') {\r\n    done = options;\r\n    opts = {};\r\n  }\r\n\r\n  // create file stream\r\n  var file = send(req, path, opts);\r\n\r\n  // transfer\r\n  sendfile(res, file, opts, function (err) {\r\n    if (done) return done(err);\r\n    if (err && err.code === 'EISDIR') return next();\r\n\r\n    // next() all but write errors\r\n    if (err && err.code !== 'ECONNABORTED' && err.syscall !== 'write') {\r\n      next(err);\r\n    }\r\n  });\r\n};\r\n\r\nres.sendfile = deprecate.function(res.sendfile,\r\n  'res.sendfile: Use res.sendFile instead');\r\n\r\n/**\r\n * Transfer the file at the given `path` as an attachment.\r\n *\r\n * Optionally providing an alternate attachment `filename`,\r\n * and optional callback `callback(err)`. The callback is invoked\r\n * when the data transfer is complete, or when an error has\r\n * occurred. Be sure to check `res.headersSent` if you plan to respond.\r\n *\r\n * Optionally providing an `options` object to use with `res.sendFile()`.\r\n * This function will set the `Content-Disposition` header, overriding\r\n * any `Content-Disposition` header passed as header options in order\r\n * to set the attachment and filename.\r\n *\r\n * This method uses `res.sendFile()`.\r\n *\r\n * @public\r\n */\r\n\r\nres.download = function download (path, filename, options, callback) {\r\n  var done = callback;\r\n  var name = filename;\r\n  var opts = options || null\r\n\r\n  // support function as second or third arg\r\n  if (typeof filename === 'function') {\r\n    done = filename;\r\n    name = null;\r\n    opts = null\r\n  } else if (typeof options === 'function') {\r\n    done = options\r\n    opts = null\r\n  }\r\n\r\n  // support optional filename, where options may be in it's place\r\n  if (typeof filename === 'object' &&\r\n    (typeof options === 'function' || options === undefined)) {\r\n    name = null\r\n    opts = filename\r\n  }\r\n\r\n  // set Content-Disposition when file is sent\r\n  var headers = {\r\n    'Content-Disposition': contentDisposition(name || path)\r\n  };\r\n\r\n  // merge user-provided headers\r\n  if (opts && opts.headers) {\r\n    var keys = Object.keys(opts.headers)\r\n    for (var i = 0; i < keys.length; i++) {\r\n      var key = keys[i]\r\n      if (key.toLowerCase() !== 'content-disposition') {\r\n        headers[key] = opts.headers[key]\r\n      }\r\n    }\r\n  }\r\n\r\n  // merge user-provided options\r\n  opts = Object.create(opts)\r\n  opts.headers = headers\r\n\r\n  // Resolve the full path for sendFile\r\n  var fullPath = !opts.root\r\n    ? resolve(path)\r\n    : path\r\n\r\n  // send file\r\n  return this.sendFile(fullPath, opts, done)\r\n};\r\n\r\n/**\r\n * Set _Content-Type_ response header with `type` through `mime.lookup()`\r\n * when it does not contain \"/\", or set the Content-Type to `type` otherwise.\r\n *\r\n * Examples:\r\n *\r\n *     res.type('.html');\r\n *     res.type('html');\r\n *     res.type('json');\r\n *     res.type('application/json');\r\n *     res.type('png');\r\n *\r\n * @param {String} type\r\n * @return {ServerResponse} for chaining\r\n * @public\r\n */\r\n\r\nres.contentType =\r\nres.type = function contentType(type) {\r\n  var ct = type.indexOf('/') === -1\r\n    ? mime.lookup(type)\r\n    : type;\r\n\r\n  return this.set('Content-Type', ct);\r\n};\r\n\r\n/**\r\n * Respond to the Acceptable formats using an `obj`\r\n * of mime-type callbacks.\r\n *\r\n * This method uses `req.accepted`, an array of\r\n * acceptable types ordered by their quality values.\r\n * When \"Accept\" is not present the _first_ callback\r\n * is invoked, otherwise the first match is used. When\r\n * no match is performed the server responds with\r\n * 406 \"Not Acceptable\".\r\n *\r\n * Content-Type is set for you, however if you choose\r\n * you may alter this within the callback using `res.type()`\r\n * or `res.set('Content-Type', ...)`.\r\n *\r\n *    res.format({\r\n *      'text/plain': function(){\r\n *        res.send('hey');\r\n *      },\r\n *\r\n *      'text/html': function(){\r\n *        res.send('<p>hey</p>');\r\n *      },\r\n *\r\n *      'application/json': function () {\r\n *        res.send({ message: 'hey' });\r\n *      }\r\n *    });\r\n *\r\n * In addition to canonicalized MIME types you may\r\n * also use extnames mapped to these types:\r\n *\r\n *    res.format({\r\n *      text: function(){\r\n *        res.send('hey');\r\n *      },\r\n *\r\n *      html: function(){\r\n *        res.send('<p>hey</p>');\r\n *      },\r\n *\r\n *      json: function(){\r\n *        res.send({ message: 'hey' });\r\n *      }\r\n *    });\r\n *\r\n * By default Express passes an `Error`\r\n * with a `.status` of 406 to `next(err)`\r\n * if a match is not made. If you provide\r\n * a `.default` callback it will be invoked\r\n * instead.\r\n *\r\n * @param {Object} obj\r\n * @return {ServerResponse} for chaining\r\n * @public\r\n */\r\n\r\nres.format = function(obj){\r\n  var req = this.req;\r\n  var next = req.next;\r\n\r\n  var keys = Object.keys(obj)\r\n    .filter(function (v) { return v !== 'default' })\r\n\r\n  var key = keys.length > 0\r\n    ? req.accepts(keys)\r\n    : false;\r\n\r\n  this.vary(\"Accept\");\r\n\r\n  if (key) {\r\n    this.set('Content-Type', normalizeType(key).value);\r\n    obj[key](req, this, next);\r\n  } else if (obj.default) {\r\n    obj.default(req, this, next)\r\n  } else {\r\n    next(createError(406, {\r\n      types: normalizeTypes(keys).map(function (o) { return o.value })\r\n    }))\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Set _Content-Disposition_ header to _attachment_ with optional `filename`.\r\n *\r\n * @param {String} filename\r\n * @return {ServerResponse}\r\n * @public\r\n */\r\n\r\nres.attachment = function attachment(filename) {\r\n  if (filename) {\r\n    this.type(extname(filename));\r\n  }\r\n\r\n  this.set('Content-Disposition', contentDisposition(filename));\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Append additional header `field` with value `val`.\r\n *\r\n * Example:\r\n *\r\n *    res.append('Link', ['<http://localhost/>', '<http://localhost:3000/>']);\r\n *    res.append('Set-Cookie', 'foo=bar; Path=/; HttpOnly');\r\n *    res.append('Warning', '199 Miscellaneous warning');\r\n *\r\n * @param {String} field\r\n * @param {String|Array} val\r\n * @return {ServerResponse} for chaining\r\n * @public\r\n */\r\n\r\nres.append = function append(field, val) {\r\n  var prev = this.get(field);\r\n  var value = val;\r\n\r\n  if (prev) {\r\n    // concat the new and prev vals\r\n    value = Array.isArray(prev) ? prev.concat(val)\r\n      : Array.isArray(val) ? [prev].concat(val)\r\n        : [prev, val]\r\n  }\r\n\r\n  return this.set(field, value);\r\n};\r\n\r\n/**\r\n * Set header `field` to `val`, or pass\r\n * an object of header fields.\r\n *\r\n * Examples:\r\n *\r\n *    res.set('Foo', ['bar', 'baz']);\r\n *    res.set('Accept', 'application/json');\r\n *    res.set({ Accept: 'text/plain', 'X-API-Key': 'tobi' });\r\n *\r\n * Aliased as `res.header()`.\r\n *\r\n * @param {String|Object} field\r\n * @param {String|Array} val\r\n * @return {ServerResponse} for chaining\r\n * @public\r\n */\r\n\r\nres.set =\r\nres.header = function header(field, val) {\r\n  if (arguments.length === 2) {\r\n    var value = Array.isArray(val)\r\n      ? val.map(String)\r\n      : String(val);\r\n\r\n    // add charset to content-type\r\n    if (field.toLowerCase() === 'content-type') {\r\n      if (Array.isArray(value)) {\r\n        throw new TypeError('Content-Type cannot be set to an Array');\r\n      }\r\n      if (!charsetRegExp.test(value)) {\r\n        var charset = mime.charsets.lookup(value.split(';')[0]);\r\n        if (charset) value += '; charset=' + charset.toLowerCase();\r\n      }\r\n    }\r\n\r\n    this.setHeader(field, value);\r\n  } else {\r\n    for (var key in field) {\r\n      this.set(key, field[key]);\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Get value for header `field`.\r\n *\r\n * @param {String} field\r\n * @return {String}\r\n * @public\r\n */\r\n\r\nres.get = function(field){\r\n  return this.getHeader(field);\r\n};\r\n\r\n/**\r\n * Clear cookie `name`.\r\n *\r\n * @param {String} name\r\n * @param {Object} [options]\r\n * @return {ServerResponse} for chaining\r\n * @public\r\n */\r\n\r\nres.clearCookie = function clearCookie(name, options) {\r\n  var opts = merge({ expires: new Date(1), path: '/' }, options);\r\n\r\n  return this.cookie(name, '', opts);\r\n};\r\n\r\n/**\r\n * Set cookie `name` to `value`, with the given `options`.\r\n *\r\n * Options:\r\n *\r\n *    - `maxAge`   max-age in milliseconds, converted to `expires`\r\n *    - `signed`   sign the cookie\r\n *    - `path`     defaults to \"/\"\r\n *\r\n * Examples:\r\n *\r\n *    // \"Remember Me\" for 15 minutes\r\n *    res.cookie('rememberme', '1', { expires: new Date(Date.now() + 900000), httpOnly: true });\r\n *\r\n *    // same as above\r\n *    res.cookie('rememberme', '1', { maxAge: 900000, httpOnly: true })\r\n *\r\n * @param {String} name\r\n * @param {String|Object} value\r\n * @param {Object} [options]\r\n * @return {ServerResponse} for chaining\r\n * @public\r\n */\r\n\r\nres.cookie = function (name, value, options) {\r\n  var opts = merge({}, options);\r\n  var secret = this.req.secret;\r\n  var signed = opts.signed;\r\n\r\n  if (signed && !secret) {\r\n    throw new Error('cookieParser(\"secret\") required for signed cookies');\r\n  }\r\n\r\n  var val = typeof value === 'object'\r\n    ? 'j:' + JSON.stringify(value)\r\n    : String(value);\r\n\r\n  if (signed) {\r\n    val = 's:' + sign(val, secret);\r\n  }\r\n\r\n  if (opts.maxAge != null) {\r\n    var maxAge = opts.maxAge - 0\r\n\r\n    if (!isNaN(maxAge)) {\r\n      opts.expires = new Date(Date.now() + maxAge)\r\n      opts.maxAge = Math.floor(maxAge / 1000)\r\n    }\r\n  }\r\n\r\n  if (opts.path == null) {\r\n    opts.path = '/';\r\n  }\r\n\r\n  this.append('Set-Cookie', cookie.serialize(name, String(val), opts));\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Set the location header to `url`.\r\n *\r\n * The given `url` can also be \"back\", which redirects\r\n * to the _Referrer_ or _Referer_ headers or \"/\".\r\n *\r\n * Examples:\r\n *\r\n *    res.location('/foo/bar').;\r\n *    res.location('http://example.com');\r\n *    res.location('../login');\r\n *\r\n * @param {String} url\r\n * @return {ServerResponse} for chaining\r\n * @public\r\n */\r\n\r\nres.location = function location(url) {\r\n  var loc = url;\r\n\r\n  // \"back\" is an alias for the referrer\r\n  if (url === 'back') {\r\n    loc = this.req.get('Referrer') || '/';\r\n  }\r\n\r\n  // set location\r\n  return this.set('Location', encodeUrl(loc));\r\n};\r\n\r\n/**\r\n * Redirect to the given `url` with optional response `status`\r\n * defaulting to 302.\r\n *\r\n * The resulting `url` is determined by `res.location()`, so\r\n * it will play nicely with mounted apps, relative paths,\r\n * `\"back\"` etc.\r\n *\r\n * Examples:\r\n *\r\n *    res.redirect('/foo/bar');\r\n *    res.redirect('http://example.com');\r\n *    res.redirect(301, 'http://example.com');\r\n *    res.redirect('../login'); // /blog/post/1 -> /blog/login\r\n *\r\n * @public\r\n */\r\n\r\nres.redirect = function redirect(url) {\r\n  var address = url;\r\n  var body;\r\n  var status = 302;\r\n\r\n  // allow status / url\r\n  if (arguments.length === 2) {\r\n    if (typeof arguments[0] === 'number') {\r\n      status = arguments[0];\r\n      address = arguments[1];\r\n    } else {\r\n      deprecate('res.redirect(url, status): Use res.redirect(status, url) instead');\r\n      status = arguments[1];\r\n    }\r\n  }\r\n\r\n  // Set location header\r\n  address = this.location(address).get('Location');\r\n\r\n  // Support text/{plain,html} by default\r\n  this.format({\r\n    text: function(){\r\n      body = statuses.message[status] + '. Redirecting to ' + address\r\n    },\r\n\r\n    html: function(){\r\n      var u = escapeHtml(address);\r\n      body = '<p>' + statuses.message[status] + '. Redirecting to <a href=\"' + u + '\">' + u + '</a></p>'\r\n    },\r\n\r\n    default: function(){\r\n      body = '';\r\n    }\r\n  });\r\n\r\n  // Respond\r\n  this.statusCode = status;\r\n  this.set('Content-Length', Buffer.byteLength(body));\r\n\r\n  if (this.req.method === 'HEAD') {\r\n    this.end();\r\n  } else {\r\n    this.end(body);\r\n  }\r\n};\r\n\r\n/**\r\n * Add `field` to Vary. If already present in the Vary set, then\r\n * this call is simply ignored.\r\n *\r\n * @param {Array|String} field\r\n * @return {ServerResponse} for chaining\r\n * @public\r\n */\r\n\r\nres.vary = function(field){\r\n  // checks for back-compat\r\n  if (!field || (Array.isArray(field) && !field.length)) {\r\n    deprecate('res.vary(): Provide a field name');\r\n    return this;\r\n  }\r\n\r\n  vary(this, field);\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Render `view` with the given `options` and optional callback `fn`.\r\n * When a callback function is given a response will _not_ be made\r\n * automatically, otherwise a response of _200_ and _text/html_ is given.\r\n *\r\n * Options:\r\n *\r\n *  - `cache`     boolean hinting to the engine it should cache\r\n *  - `filename`  filename of the view being rendered\r\n *\r\n * @public\r\n */\r\n\r\nres.render = function render(view, options, callback) {\r\n  var app = this.req.app;\r\n  var done = callback;\r\n  var opts = options || {};\r\n  var req = this.req;\r\n  var self = this;\r\n\r\n  // support callback function as second arg\r\n  if (typeof options === 'function') {\r\n    done = options;\r\n    opts = {};\r\n  }\r\n\r\n  // merge res.locals\r\n  opts._locals = self.locals;\r\n\r\n  // default callback to respond\r\n  done = done || function (err, str) {\r\n    if (err) return req.next(err);\r\n    self.send(str);\r\n  };\r\n\r\n  // render\r\n  app.render(view, opts, done);\r\n};\r\n\r\n// pipe the send file stream\r\nfunction sendfile(res, file, options, callback) {\r\n  var done = false;\r\n  var streaming;\r\n\r\n  // request aborted\r\n  function onaborted() {\r\n    if (done) return;\r\n    done = true;\r\n\r\n    var err = new Error('Request aborted');\r\n    err.code = 'ECONNABORTED';\r\n    callback(err);\r\n  }\r\n\r\n  // directory\r\n  function ondirectory() {\r\n    if (done) return;\r\n    done = true;\r\n\r\n    var err = new Error('EISDIR, read');\r\n    err.code = 'EISDIR';\r\n    callback(err);\r\n  }\r\n\r\n  // errors\r\n  function onerror(err) {\r\n    if (done) return;\r\n    done = true;\r\n    callback(err);\r\n  }\r\n\r\n  // ended\r\n  function onend() {\r\n    if (done) return;\r\n    done = true;\r\n    callback();\r\n  }\r\n\r\n  // file\r\n  function onfile() {\r\n    streaming = false;\r\n  }\r\n\r\n  // finished\r\n  function onfinish(err) {\r\n    if (err && err.code === 'ECONNRESET') return onaborted();\r\n    if (err) return onerror(err);\r\n    if (done) return;\r\n\r\n    setImmediate(function () {\r\n      if (streaming !== false && !done) {\r\n        onaborted();\r\n        return;\r\n      }\r\n\r\n      if (done) return;\r\n      done = true;\r\n      callback();\r\n    });\r\n  }\r\n\r\n  // streaming\r\n  function onstream() {\r\n    streaming = true;\r\n  }\r\n\r\n  file.on('directory', ondirectory);\r\n  file.on('end', onend);\r\n  file.on('error', onerror);\r\n  file.on('file', onfile);\r\n  file.on('stream', onstream);\r\n  onFinished(res, onfinish);\r\n\r\n  if (options.headers) {\r\n    // set headers on successful transfer\r\n    file.on('headers', function headers(res) {\r\n      var obj = options.headers;\r\n      var keys = Object.keys(obj);\r\n\r\n      for (var i = 0; i < keys.length; i++) {\r\n        var k = keys[i];\r\n        res.setHeader(k, obj[k]);\r\n      }\r\n    });\r\n  }\r\n\r\n  // pipe\r\n  file.pipe(res);\r\n}\r\n\r\n/**\r\n * Stringify JSON, like JSON.stringify, but v8 optimized, with the\r\n * ability to escape characters that can trigger HTML sniffing.\r\n *\r\n * @param {*} value\r\n * @param {function} replacer\r\n * @param {number} spaces\r\n * @param {boolean} escape\r\n * @returns {string}\r\n * @private\r\n */\r\n\r\nfunction stringify (value, replacer, spaces, escape) {\r\n  // v8 checks arguments.length for optimizing simple call\r\n  // https://bugs.chromium.org/p/v8/issues/detail?id=4730\r\n  var json = replacer || spaces\r\n    ? JSON.stringify(value, replacer, spaces)\r\n    : JSON.stringify(value);\r\n\r\n  if (escape && typeof json === 'string') {\r\n    json = json.replace(/[<>&]/g, function (c) {\r\n      switch (c.charCodeAt(0)) {\r\n        case 0x3c:\r\n          return '\\\\u003c'\r\n        case 0x3e:\r\n          return '\\\\u003e'\r\n        case 0x26:\r\n          return '\\\\u0026'\r\n        /* istanbul ignore next: unreachable default */\r\n        default:\r\n          return c\r\n      }\r\n    })\r\n  }\r\n\r\n  return json\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
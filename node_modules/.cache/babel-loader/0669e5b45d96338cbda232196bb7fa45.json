{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      auth: {\n        isAuthenticated: false,\n        user: {}\n      },\n      conversations: [],\n      currentPage: 1\n    };\n  },\n\n  created() {\n    var user = localStorage.getItem(\"user\");\n\n    if (user !== null) {\n      user = JSON.parse(user);\n      this.auth.isAuthenticated = true;\n      this.auth.user = user;\n    }\n\n    this.getConversations();\n  },\n\n  mounted() {\n    this.emitter.emit(\"headerFooter\", false);\n    console.log('unmounted has been called');\n  },\n\n  unmounted() {\n    this.emitter.emit(\"headerFooter\", false);\n    console.log('unmounted has been called');\n  },\n\n  methods: {\n    getConversations() {\n      axios.get(this.selfDomain + 'vueseller/seller/conversations?page=', {\n        headers: {\n          Authorization: \"Bearer \" + this.auth.user.access_token\n        }\n      }).then(response => {\n        this.conversations = response.data.conversations.data;\n        console.log(response.data.conversations.data);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA2EA,OAAOA,KAAP,MAAkB,OAAlB;AACA,eAAe;EACbC,IAAI,GAAE;IACF,OAAM;MACFC,IAAI,EAAC;QACDC,eAAe,EAAE,KADhB;QAEDC,IAAI,EAAE;MAFL,CADH;MAKEC,aAAa,EAAC,EALhB;MAMEC,WAAW,EAAC;IANd,CAAN;EAQH,CAVY;;EAWbC,OAAO,GAAE;IACL,IAAIH,IAAG,GAAII,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX;;IACI,IAAGL,IAAG,KAAM,IAAZ,EAAiB;MACbA,IAAG,GAAIM,IAAI,CAACC,KAAL,CAAWP,IAAX,CAAP;MACA,KAAKF,IAAL,CAAUC,eAAV,GAA4B,IAA5B;MACA,KAAKD,IAAL,CAAUE,IAAV,GAAiBA,IAAjB;IACJ;;IACA,KAAKQ,gBAAL;EACP,CAnBY;;EAoBbC,OAAO,GAAG;IACV,KAAKC,OAAL,CAAaC,IAAb,CAAkB,cAAlB,EAAkC,KAAlC;IACAC,OAAO,CAACC,GAAR,CAAY,2BAAZ;EACC,CAvBY;;EAwBbC,SAAS,GAAG;IACZ,KAAKJ,OAAL,CAAaC,IAAb,CAAkB,cAAlB,EAAkC,KAAlC;IACAC,OAAO,CAACC,GAAR,CAAY,2BAAZ;EACC,CA3BY;;EA4BbE,OAAO,EAAC;IACJP,gBAAgB,GAAE;MACdZ,KAAK,CAACoB,GAAN,CAAU,KAAKC,UAAL,GAAgB,sCAA1B,EAAiE;QACjEC,OAAO,EAAE;UACDC,aAAa,EAAE,YAAY,KAAKrB,IAAL,CAAUE,IAAV,CAAeoB;QADzC;MADwD,CAAjE,EAMCC,IAND,CAMOC,QAAD,IAAc;QAChB,KAAKrB,aAAL,GAAqBqB,QAAQ,CAACzB,IAAT,CAAcI,aAAd,CAA4BJ,IAAjD;QACAe,OAAO,CAACC,GAAR,CAAYS,QAAQ,CAACzB,IAAT,CAAcI,aAAd,CAA4BJ,IAAxC;MACH,CATD,EAUC0B,KAVD,CAUQC,GAAD,IAAO;QACVZ,OAAO,CAACC,GAAR,CAAYW,GAAZ;MACH,CAZD;IAaH;;EAfG;AA5BK,CAAf","names":["axios","data","auth","isAuthenticated","user","conversations","currentPage","created","localStorage","getItem","JSON","parse","getConversations","mounted","emitter","emit","console","log","unmounted","methods","get","selfDomain","headers","Authorization","access_token","then","response","catch","err"],"sourceRoot":"","sources":["E:\\adminDeal\\src\\components\\pages\\sellers\\pages\\conversation\\conversations.vue"],"sourcesContent":["<template>\r\n      <div class=\"aiz-titlebar mt-2 mb-4\">\r\n      <div class=\"row align-items-center\">\r\n          <div class=\"col-md-6\">\r\n              <b class=\"h4\">Conversations</b>\r\n          </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"card\">\r\n      <div class=\"card-body\">\r\n        <ul class=\"list-group list-group-flush\">\r\n              <template v-for=\"(conversation,index) in conversations\" :key=\"index\">\r\n                <li v-if=\"conversation.receiver != null && conversation.sender != null\" class=\"list-group-item px-0\">\r\n                      <div class=\"row gutters-10\">\r\n                          <div class=\"col-auto\">\r\n                              <div class=\"media\">\r\n                                  <span class=\"avatar avatar-sm flex-shrink-0\">\r\n                                     <template v-if=\"auth.user.id == conversation.sender_id\">\r\n                                        <img :src=\"conversation.receiver.avatar_original == null?'assets/img/avatar-place.png':conversation.receiver_avatar_original\">\r\n                                     </template>\r\n                                     <template v-else>\r\n                                        <img :src=\"conversation.sender.avatar_original == null?'assets/img/avatar-place.png':conversation.sender_avatar_original\">\r\n                                     </template>\r\n                                     \r\n                                </span>\r\n                              </div>\r\n                          </div>\r\n                          <div class=\"col-auto col-lg-3\">\r\n                                 <p>\r\n                                      <span v-if=\"auth.user.id == conversation.sender_id\" class=\"fw-600\">{{ conversation.receiver.name }}</span>\r\n                                      <span v-else class=\"fw-600\">{{ conversation.sender.name }}</span>\r\n                                  <br>\r\n                                  <span class=\"opacity-50\">\r\n                                      {{ conversation.created_time }}\r\n                                  </span>\r\n                              </p>\r\n                          </div>\r\n                          <div class=\"col-12 col-lg\">\r\n                              <div class=\"block-body\">\r\n                                  <div class=\"block-body-inner pb-3\">\r\n                                      <div class=\"row no-gutters\">\r\n                                          <div class=\"col\">\r\n                                              <h6 class=\"mt-0\">n.\r\n                                                  <a href=\"seller.conversations.show', encrypt($conversation->id\" class=\"text-dark fw-600\">\r\n                                                      {{ conversation.title }}\r\n                                                  </a>                                                 \r\n                                                      <span v-if=\"(auth.user.id == conversation.sender_id && conversation.sender_viewed == 0) || (auth.user.id == conversation.receiver_id && conversation.receiver_viewed == 0)\" class=\"badge badge-inline badge-danger\">New</span>                                       \r\n                                              </h6>\r\n                                          </div>\r\n                                      </div>\r\n                                      <p class=\"mb-0 opacity-50\">\r\n                                          {{ conversation.last_message }}\r\n                                      </p>\r\n                                  </div>\r\n                              </div>\r\n                          </div>\r\n                      </div>\r\n                    </li>\r\n              </template>\r\n      </ul>\r\n      </div>\r\n    </div>\r\n    <div class=\"aiz-pagination\">\r\n        <vue-awesome-paginate\r\n          :total-items=\"lastPage\"\r\n          :items-per-page=\"12\"\r\n          :max-pages-shown=\"5\"\r\n          v-model=\"currentPage\"\r\n          @click=\"getBlogs\"\r\n        />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nexport default {\r\n  data(){\r\n      return{\r\n          auth:{\r\n              isAuthenticated: false,\r\n              user: {},\r\n              },\r\n              conversations:[],\r\n              currentPage:1,\r\n      }\r\n  },\r\n  created(){\r\n      var user = localStorage.getItem(\"user\");\r\n          if(user !== null){\r\n              user = JSON.parse(user);\r\n              this.auth.isAuthenticated = true;\r\n              this.auth.user = user;\r\n          }\r\n          this.getConversations();\r\n  },\r\n  mounted() {\r\n  this.emitter.emit(\"headerFooter\", false);\r\n  console.log('unmounted has been called'); \r\n  },\r\n  unmounted() {\r\n  this.emitter.emit(\"headerFooter\", false);\r\n  console.log('unmounted has been called'); \r\n  },\r\n  methods:{\r\n      getConversations(){\r\n          axios.get(this.selfDomain+'vueseller/seller/conversations?page=',{  \r\n          headers: {\r\n                  Authorization: \"Bearer \" + this.auth.user.access_token,\r\n            }\r\n\r\n          })\r\n          .then((response) => {    \r\n              this.conversations = response.data.conversations.data;\r\n              console.log(response.data.conversations.data);\r\n          })\r\n          .catch((err)=>{\r\n              console.log(err)\r\n          })\r\n      },\r\n   \r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}
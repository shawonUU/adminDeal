{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-05c4d67b\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"select2-container\"\n};\nconst _hoisted_2 = [\"value\"];\nconst _hoisted_3 = {\n  class: \"select2-dropdown\"\n};\nconst _hoisted_4 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"input\", {\n    class: \"select2-input\",\n    type: \"text\",\n    value: $data.selectedOption.label,\n    onInput: _cache[0] || (_cache[0] = (...args) => $options.updateSelectedOption && $options.updateSelectedOption(...args))\n  }, null, 40\n  /* PROPS, HYDRATE_EVENTS */\n  , _hoisted_2), _createElementVNode(\"ul\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredOptions, option => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: option.value,\n      onClick: $event => $options.selectOption(option)\n    }, _toDisplayString(option.label), 9\n    /* TEXT, PROPS */\n    , _hoisted_4);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])]);\n}","map":{"version":3,"mappings":";;;;;EACSA,KAAK,EAAC;;;;EAELA,KAAK,EAAC;;;;uBAFZC,oBAOM,KAPN,cAOM,CANJC,oBAAqG,OAArG,EAAqG;IAA9FF,KAAK,EAAC,eAAwF;IAAxEG,IAAI,EAAC,MAAmE;IAA3DC,KAAK,EAAEC,qBAAeC,KAAqC;IAA7BC,OAAK,yCAAEC,uEAAF;EAAwB,CAArG;;EAAA,aAMI,EALJN,oBAIK,IAJL,cAIK,oBAHHD,oBAEKQ,SAFL,EAEK,IAFL,EAEKC,YAFgBF,wBAEhB,EAFMG,MAAyB,IAAnB;yBAAjBV,oBAEK,IAFL,EAEK;MAFkCW,GAAG,EAAED,MAAM,CAACP,KAE9C;MAFsDS,OAAK,YAAEL,sBAAaG,MAAb;IAE7D,CAFL,mBACKA,MAAM,CAACL,MADZ,EACiB;IAAA;IADjB,EACiBQ,UADjB;GAEK,CAFL;;EAAA,CAGG,EAJL,CAKI,CAPN","names":["class","_createElementBlock","_createElementVNode","type","value","$data","label","onInput","$options","_Fragment","_renderList","option","key","onClick","_hoisted_4"],"sourceRoot":"","sources":["F:\\adminDeal\\src\\components\\pages\\sellers\\pages\\products\\select-2.vue"],"sourcesContent":["<template>\r\n    <div class=\"select2-container\">\r\n      <input class=\"select2-input\" type=\"text\" :value=\"selectedOption.label\" @input=\"updateSelectedOption\">\r\n      <ul class=\"select2-dropdown\">\r\n        <li v-for=\"option in filteredOptions\" :key=\"option.value\" @click=\"selectOption(option)\">\r\n          {{ option.label }}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    props: {\r\n      options: {\r\n        type: Array,\r\n        required: true\r\n      },\r\n      value: {\r\n        type: Object,\r\n        default: null\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        selectedOption: this.value || { value: '', label: '' },\r\n        filter: ''\r\n      };\r\n    },\r\n    computed: {\r\n      filteredOptions() {\r\n        return this.options.filter(option => option.label.toLowerCase().includes(this.filter.toLowerCase()));\r\n      }\r\n    },\r\n    mounted() {\r\n      document.addEventListener('click', this.handleOutsideClick);\r\n    },\r\n    destroyed() {\r\n      document.removeEventListener('click', this.handleOutsideClick);\r\n    },\r\n    methods: {\r\n      updateSelectedOption(event) {\r\n        this.selectedOption = { value: '', label: event.target.value };\r\n      },\r\n      selectOption(option) {\r\n        this.selectedOption = option;\r\n        this.filter = '';\r\n        this.$emit('input', this.selectedOption);\r\n      },\r\n      handleOutsideClick(event) {\r\n        if (!this.$el.contains(event.target)) {\r\n          this.filter = '';\r\n        }\r\n      }\r\n    },\r\n    watch: {\r\n      value(newValue) {\r\n        this.selectedOption = newValue;\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .select2-container {\r\n    position: relative;\r\n    width: 200px;\r\n  }\r\n  \r\n  .select2-input {\r\n    width: 100%;\r\n    padding: 5px;\r\n    border: 1px solid #ccc;\r\n  }\r\n  \r\n  .select2-dropdown {\r\n    position: absolute;\r\n    top: 100%;\r\n    left: 0;\r\n    right: 0;\r\n    background-color: #fff;\r\n    border: 1px solid #ccc;\r\n    list-style: none;\r\n    padding: 0;\r\n    margin: 0;\r\n    max-height: 200px;\r\n    overflow-y: auto;\r\n  }\r\n  \r\n  .select2-dropdown li {\r\n    padding: 5px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .select2-dropdown li:hover {\r\n    background-color: #ccc;\r\n  }\r\n  </style>"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      auth: {\n        isAuthenticated: false,\n        user: {}\n      },\n      page: 1,\n      conversations: {}\n    };\n  },\n\n  created() {\n    var user = localStorage.getItem(\"user\");\n\n    if (user !== null) {\n      user = JSON.parse(user);\n      this.auth.isAuthenticated = true;\n      this.auth.user = user;\n      this.getConversations();\n    }\n  },\n\n  methods: {\n    getConversations() {\n      axios.get(this.selfDomain + \"vueweb/conversations?page=1\", {\n        headers: {\n          token: this.auth.user.access_token,\n          Authorization: \"Bearer \" + this.auth.user.access_token\n        }\n      }).then(res => {\n        console.log('DATTTTTTS');\n        this.conversations = res.data.conversations.data;\n        console.log(this.conversations[0].receiverData.data[0]);\n      }).catch(err => {});\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA4EA,OAAOA,KAAP,MAAkB,OAAlB;AACA,eAAe;EACXC,IAAI,GAAE;IACJ,OAAM;MACJC,IAAI,EAAC;QACDC,eAAe,EAAE,KADhB;QAEDC,IAAI,EAAE;MAFL,CADD;MAKJC,IAAI,EAAE,CALF;MAMJC,aAAa,EAAC;IANV,CAAN;EAQD,CAVU;;EAWXC,OAAO,GAAE;IACP,IAAIH,IAAG,GAAII,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX;;IACE,IAAGL,IAAG,KAAM,IAAZ,EAAiB;MACbA,IAAG,GAAIM,IAAI,CAACC,KAAL,CAAWP,IAAX,CAAP;MACA,KAAKF,IAAL,CAAUC,eAAV,GAA4B,IAA5B;MACA,KAAKD,IAAL,CAAUE,IAAV,GAAiBA,IAAjB;MACA,KAAKQ,gBAAL;IACJ;EACH,CAnBU;;EAoBXC,OAAO,EAAC;IACND,gBAAgB,GAAE;MAChBZ,KAAK,CAACc,GAAN,CAAU,KAAKC,UAAL,GAAgB,6BAA1B,EAAyD;QACrDC,OAAO,EAAE;UACPC,KAAK,EAAE,KAAKf,IAAL,CAAUE,IAAV,CAAec,YADf;UAEPC,aAAa,EAAE,YAAY,KAAKjB,IAAL,CAAUE,IAAV,CAAec;QAFnC;MAD4C,CAAzD,EAKGE,IALH,CAKQC,GAAG,IAAE;QACTC,OAAO,CAACC,GAAR,CAAY,WAAZ;QACA,KAAKjB,aAAL,GAAsBe,GAAG,CAACpB,IAAJ,CAASK,aAAT,CAAuBL,IAA7C;QACAqB,OAAO,CAACC,GAAR,CAAY,KAAKjB,aAAL,CAAmB,CAAnB,EAAsBkB,YAAtB,CAAmCvB,IAAnC,CAAwC,CAAxC,CAAZ;MACH,CATD,EASGwB,KATH,CASSC,GAAG,IAAE,CAEb,CAXD;IAYF;;EAdM;AApBG,CAAf","names":["axios","data","auth","isAuthenticated","user","page","conversations","created","localStorage","getItem","JSON","parse","getConversations","methods","get","selfDomain","headers","token","access_token","Authorization","then","res","console","log","receiverData","catch","err"],"sourceRoot":"","sources":["D:\\VUE\\adminDeal\\src\\components\\pages\\user\\Conversation\\index.vue"],"sourcesContent":["<template>\r\n\r\n  \r\n\r\n  <div class=\"aiz-titlebar mt-2 mb-4\">\r\n  <div class=\"row align-items-center\">\r\n    <div class=\"col-md-6\">\r\n      <b class=\"h4\">Conversations</b>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"card\">\r\n  <div class=\"card-body\">\r\n    <ul v-for=\"(conversation, index) in conversations\" :key=\"index\" class=\"list-group list-group-flush\"> \r\n        <templete v-if=\"conversation.receiverData != null && conversation.senderData != null\">\r\n            <li class=\"list-group-item px-0\">\r\n              <div class=\"row gutters-10\">\r\n                <div class=\"col-auto\">\r\n                  <div class=\"media\">\r\n                    <span class=\"avatar avatar-sm flex-shrink-0\">\r\n                    <templete v-if=\"auth.user.id == conversation.sender_id\">\r\n                        <img v-if=\"conversation.receiverData.data[0].avatar_original == null\" :src=\"rootDomain+'assets/img/avatar-place.png'\">\r\n                        <img v-else :src=\"conversation.receiverData.data[0].avatar_original\" >\r\n                    </templete>\r\n                    <templete v-else>\r\n                        <img v-if=\"conversation.senderData.data[0].avatar_original == null\" :src=\"rootDomain+'assets/img/avatar-place.png'\">\r\n                        <img v-else :src=\"conversation.senderData.data[0].avatar_original\" >\r\n                    </templete>\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-auto col-lg-3\">\r\n                  <p> \r\n                      <!-- @if (Auth::user()->id == $conversation->sender_id) -->\r\n                      <!-- <span v-if=\"auth.user.id == conversation.sender_id\" class=\"fw-600\">{{ conversation.receiver_name }}</span>\r\n                      <span class=\"fw-600\">{{ conversation.sender_name }}</span>  -->\r\n                      <!-- @endif  -->\r\n                      <br>\r\n                    <span class=\"opacity-50\">\r\n                      <!-- conversation->messages->last()->created_at -->\r\n                    </span>\r\n                  </p>\r\n                </div>\r\n                <div class=\"col-12 col-lg\">\r\n                  <div class=\"block-body\">\r\n                    <div class=\"block-body-inner pb-3\">\r\n                      <div class=\"row no-gutters\">\r\n                        <div class=\"col\">\r\n                          <h6 class=\"mt-0\">\r\n                            <a href=\"\" class=\"text-dark fw-600\">\r\n                              {{ conversation.title }}\r\n                            </a>\r\n                            <!-- @if ((Auth::user()->id == $conversation->sender_id && $conversation->sender_viewed == 0) || (Auth::user()->id == $conversation->receiver_id && $conversation->receiver_viewed == 0))  -->\r\n                            <!-- <span class=\"badge badge-inline badge-danger\">New</span>  -->\r\n                            <!-- @endif -->\r\n                          </h6>\r\n                        </div>\r\n                      </div>\r\n                      <p class=\"mb-0 opacity-50\">\r\n                        <!-- conversation->messages->last()->message -->\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </li> \r\n        </templete>\r\n    </ul>\r\n  </div>\r\n</div>\r\n<div class=\"aiz-pagination\">\r\n  <!-- {{ $conversations->links() }} -->\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nexport default {\r\n    data(){\r\n      return{\r\n        auth:{\r\n            isAuthenticated: false,\r\n            user: {},\r\n        },\r\n        page: 1,\r\n        conversations:{},\r\n      }\r\n    },\r\n    created(){\r\n      var user = localStorage.getItem(\"user\");\r\n        if(user !== null){\r\n            user = JSON.parse(user);\r\n            this.auth.isAuthenticated = true;\r\n            this.auth.user = user;\r\n            this.getConversations();\r\n        }\r\n    },\r\n    methods:{\r\n      getConversations(){\r\n        axios.get(this.selfDomain+\"vueweb/conversations?page=1\", {\r\n            headers: {\r\n              token: this.auth.user.access_token,\r\n              Authorization: \"Bearer \" + this.auth.user.access_token,\r\n            }\r\n        }).then(res=>{\r\n            console.log('DATTTTTTS');\r\n            this.conversations =  res.data.conversations.data;\r\n            console.log(this.conversations[0].receiverData.data[0]);\r\n        }).catch(err=>{\r\n\r\n        });\r\n      }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}
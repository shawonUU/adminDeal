{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"card\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"card-header\\\"><h5 class=\\\"mb-0 h6\\\">Product Reviews</h5></div><div class=\\\"card-body\\\"><table class=\\\"table mb-0\\\"><thead><tr><th>#</th><th>Product</th><th data-breakpoints=\\\"lg\\\">Customer</th><th>Rating</th><th data-breakpoints=\\\"lg\\\">Comment</th><th data-breakpoints=\\\"lg\\\">Published</th></tr></thead><tbody><!-- @foreach ($reviews as $key =&gt; $value)\\r\\n                        @php\\r\\n                            $review = \\\\App\\\\Models\\\\Review::find($value-&gt;id);\\r\\n                        @endphp\\r\\n                        @if($review != null &amp;&amp; $review-&gt;product != null &amp;&amp; $review-&gt;user != null) --><tr><td><!-- {{ $key+1 }} --></td><td><a href=\\\"product&#39;, $review-&gt;product-&gt;slug\\\" target=\\\"_blank\\\">name</a></td><td>user-&gt;name</td><td><span class=\\\"rating rating-sm\\\"><!-- @for ($i=0; $i &lt; $review-&gt;rating; $i++)\\r\\n                                            &lt;i class=&quot;las la-star active&quot;&gt;&lt;/i&gt;\\r\\n                                        @endfor\\r\\n                                        @for ($i=0; $i &lt; 5-$review-&gt;rating; $i++)\\r\\n                                            &lt;i class=&quot;las la-star&quot;&gt;&lt;/i&gt;\\r\\n                                        @endfor --></span></td><td>review-&gt;comment</td><td><!-- @if ($review-&gt;status == 1) --><span class=\\\"badge badge-inline badge-success\\\">Published</span><!-- @else --><span class=\\\"badge badge-inline badge-danger\\\">Unpublished</span><!-- @endif --></td></tr></tbody></table><div class=\\\"aiz-pagination\\\"><!-- {{ $reviews-&gt;links() }} --></div></div>\", 2);\n\nconst _hoisted_4 = [_hoisted_2];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, _hoisted_4);\n}","map":{"version":3,"mappings":";;EACWA,KAAK,EAAC;;;;;oBACTC;;uBADFC,oBAuDI,KAvDJ,cAuDIC,UAvDJ","names":["class","_hoisted_2","_createElementBlock","_hoisted_4"],"sourceRoot":"","sources":["F:\\adminDeal\\src\\components\\pages\\sellers\\pages\\products\\product_review.vue"],"sourcesContent":["<template>\r\n      <div class=\"card\">\r\n        <div class=\"card-header\">\r\n            <h5 class=\"mb-0 h6\">Product Reviews</h5>\r\n        </div>\r\n        <div class=\"card-body\">\r\n            <table class=\"table mb-0\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Product</th>\r\n                        <th data-breakpoints=\"lg\">Customer</th>\r\n                        <th>Rating</th>\r\n                        <th data-breakpoints=\"lg\">Comment</th>\r\n                        <th data-breakpoints=\"lg\">Published</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <!-- @foreach ($reviews as $key => $value)\r\n                        @php\r\n                            $review = \\App\\Models\\Review::find($value->id);\r\n                        @endphp\r\n                        @if($review != null && $review->product != null && $review->user != null) -->\r\n                            <tr>\r\n                                <td>\r\n                                    <!-- {{ $key+1 }} -->\r\n                                </td>\r\n                                <td>\r\n                                    <a href=\"product', $review->product->slug\" target=\"_blank\">name</a>\r\n                                </td>\r\n                                <td>user->name</td>\r\n                                <td>\r\n                                    <span class=\"rating rating-sm\">\r\n                                        <!-- @for ($i=0; $i < $review->rating; $i++)\r\n                                            <i class=\"las la-star active\"></i>\r\n                                        @endfor\r\n                                        @for ($i=0; $i < 5-$review->rating; $i++)\r\n                                            <i class=\"las la-star\"></i>\r\n                                        @endfor -->\r\n                                    </span>\r\n                                </td>\r\n                                <td>review->comment</td>\r\n                                <td>\r\n                                    <!-- @if ($review->status == 1) -->\r\n                                        <span class=\"badge badge-inline badge-success\">Published</span>\r\n                                    <!-- @else -->\r\n                                        <span class=\"badge badge-inline badge-danger\">Unpublished</span>\r\n                                    <!-- @endif -->\r\n                                </td>\r\n                            </tr>\r\n                </tbody>\r\n            </table>\r\n            <div class=\"aiz-pagination\">\r\n                <!-- {{ $reviews->links() }} -->\r\n          \t</div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nexport default {\r\n    data(){\r\n        return{\r\n\r\n        }\r\n    },\r\n\r\n    mounted() {\r\n    this.emitter.emit(\"headerFooter\", false);\r\n    console.log('unmounted has been called'); \r\n    },\r\n    unmounted() {\r\n    this.emitter.emit(\"headerFooter\", false);\r\n    console.log('unmounted has been called'); \r\n    },\r\n    methods:{\r\n        getReviews(){\r\n            axios.get(this.selfDomain+'')\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}
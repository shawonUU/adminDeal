{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.includes.js\";\n\n/*!\n  * pinia v2.0.28\n  * (c) 2022 Eduardo San Martin Morote\n  * @license MIT\n  */\nimport { getCurrentInstance, inject, toRaw, watch, unref, markRaw, effectScope, ref, isVue2, isRef, isReactive, set, getCurrentScope, onScopeDispose, reactive, toRef, del, nextTick, computed, toRefs } from 'vue-demi';\nimport { setupDevtoolsPlugin } from '@vue/devtools-api';\n/**\n * setActivePinia must be called to handle SSR at the top of functions like\n * `fetch`, `setup`, `serverPrefetch` and others\n */\n\nlet activePinia;\n/**\n * Sets or unsets the active pinia. Used in SSR and internally when calling\n * actions and getters\n *\n * @param pinia - Pinia instance\n */\n\nconst setActivePinia = pinia => activePinia = pinia;\n/**\n * Get the currently active pinia if there is any.\n */\n\n\nconst getActivePinia = () => getCurrentInstance() && inject(piniaSymbol) || activePinia;\n\nconst piniaSymbol = process.env.NODE_ENV !== 'production' ? Symbol('pinia') :\n/* istanbul ignore next */\nSymbol();\n\nfunction isPlainObject( // eslint-disable-next-line @typescript-eslint/no-explicit-any\no) {\n  return o && typeof o === 'object' && Object.prototype.toString.call(o) === '[object Object]' && typeof o.toJSON !== 'function';\n} // type DeepReadonly<T> = { readonly [P in keyof T]: DeepReadonly<T[P]> }\n// TODO: can we change these to numbers?\n\n/**\n * Possible types for SubscriptionCallback\n */\n\n\nvar MutationType;\n\n(function (MutationType) {\n  /**\n   * Direct mutation of the state:\n   *\n   * - `store.name = 'new name'`\n   * - `store.$state.name = 'new name'`\n   * - `store.list.push('new item')`\n   */\n  MutationType[\"direct\"] = \"direct\";\n  /**\n   * Mutated the state with `$patch` and an object\n   *\n   * - `store.$patch({ name: 'newName' })`\n   */\n\n  MutationType[\"patchObject\"] = \"patch object\";\n  /**\n   * Mutated the state with `$patch` and a function\n   *\n   * - `store.$patch(state => state.name = 'newName')`\n   */\n\n  MutationType[\"patchFunction\"] = \"patch function\"; // maybe reset? for $state = {} and $reset\n})(MutationType || (MutationType = {}));\n\nconst IS_CLIENT = typeof window !== 'undefined';\n/**\n * Should we add the devtools plugins.\n * - only if dev mode or forced through the prod devtools flag\n * - not in test\n * - only if window exists (could change in the future)\n */\n\nconst USE_DEVTOOLS = (process.env.NODE_ENV !== 'production' || typeof __VUE_PROD_DEVTOOLS__ !== 'undefined' && __VUE_PROD_DEVTOOLS__) && !(process.env.NODE_ENV === 'test') && IS_CLIENT;\n/*\n * FileSaver.js A saveAs() FileSaver implementation.\n *\n * Originally by Eli Grey, adapted as an ESM module by Eduardo San Martin\n * Morote.\n *\n * License : MIT\n */\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\n\nconst _global = /*#__PURE__*/(() => typeof window === 'object' && window.window === window ? window : typeof self === 'object' && self.self === self ? self : typeof global === 'object' && global.global === global ? global : typeof globalThis === 'object' ? globalThis : {\n  HTMLElement: null\n})();\n\nfunction bom(blob, {\n  autoBom = false\n} = {}) {\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xfeff), blob], {\n      type: blob.type\n    });\n  }\n\n  return blob;\n}\n\nfunction download(url, name, opts) {\n  const xhr = new XMLHttpRequest();\n  xhr.open('GET', url);\n  xhr.responseType = 'blob';\n\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts);\n  };\n\n  xhr.onerror = function () {\n    console.error('could not download file');\n  };\n\n  xhr.send();\n}\n\nfunction corsEnabled(url) {\n  const xhr = new XMLHttpRequest(); // use sync to avoid popup blocker\n\n  xhr.open('HEAD', url, false);\n\n  try {\n    xhr.send();\n  } catch (e) {}\n\n  return xhr.status >= 200 && xhr.status <= 299;\n} // `a.click()` doesn't work for all browsers (#465)\n\n\nfunction click(node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'));\n  } catch (e) {\n    const evt = document.createEvent('MouseEvents');\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80, 20, false, false, false, false, 0, null);\n    node.dispatchEvent(evt);\n  }\n}\n\nconst _navigator = typeof navigator === 'object' ? navigator : {\n  userAgent: ''\n}; // Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\n\n\nconst isMacOSWebView = /*#__PURE__*/(() => /Macintosh/.test(_navigator.userAgent) && /AppleWebKit/.test(_navigator.userAgent) && !/Safari/.test(_navigator.userAgent))();\n\nconst saveAs = !IS_CLIENT ? () => {} // noop\n: // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView or mini program\ntypeof HTMLAnchorElement !== 'undefined' && 'download' in HTMLAnchorElement.prototype && !isMacOSWebView ? downloadSaveAs : // Use msSaveOrOpenBlob as a second approach\n'msSaveOrOpenBlob' in _navigator ? msSaveAs : // Fallback to using FileReader and a popup\nfileSaverSaveAs;\n\nfunction downloadSaveAs(blob, name = 'download', opts) {\n  const a = document.createElement('a');\n  a.download = name;\n  a.rel = 'noopener'; // tabnabbing\n  // TODO: detect chrome extensions & packaged apps\n  // a.target = '_blank'\n\n  if (typeof blob === 'string') {\n    // Support regular links\n    a.href = blob;\n\n    if (a.origin !== location.origin) {\n      if (corsEnabled(a.href)) {\n        download(blob, name, opts);\n      } else {\n        a.target = '_blank';\n        click(a);\n      }\n    } else {\n      click(a);\n    }\n  } else {\n    // Support blobs\n    a.href = URL.createObjectURL(blob);\n    setTimeout(function () {\n      URL.revokeObjectURL(a.href);\n    }, 4e4); // 40s\n\n    setTimeout(function () {\n      click(a);\n    }, 0);\n  }\n}\n\nfunction msSaveAs(blob, name = 'download', opts) {\n  if (typeof blob === 'string') {\n    if (corsEnabled(blob)) {\n      download(blob, name, opts);\n    } else {\n      const a = document.createElement('a');\n      a.href = blob;\n      a.target = '_blank';\n      setTimeout(function () {\n        click(a);\n      });\n    }\n  } else {\n    // @ts-ignore: works on windows\n    navigator.msSaveOrOpenBlob(bom(blob, opts), name);\n  }\n}\n\nfunction fileSaverSaveAs(blob, name, opts, popup) {\n  // Open a popup immediately do go around popup blocker\n  // Mostly only available on user interaction and the fileReader is async so...\n  popup = popup || open('', '_blank');\n\n  if (popup) {\n    popup.document.title = popup.document.body.innerText = 'downloading...';\n  }\n\n  if (typeof blob === 'string') return download(blob, name, opts);\n  const force = blob.type === 'application/octet-stream';\n\n  const isSafari = /constructor/i.test(String(_global.HTMLElement)) || 'safari' in _global;\n\n  const isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent);\n\n  if ((isChromeIOS || force && isSafari || isMacOSWebView) && typeof FileReader !== 'undefined') {\n    // Safari doesn't allow downloading of blob URLs\n    const reader = new FileReader();\n\n    reader.onloadend = function () {\n      let url = reader.result;\n\n      if (typeof url !== 'string') {\n        popup = null;\n        throw new Error('Wrong reader.result type');\n      }\n\n      url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;');\n\n      if (popup) {\n        popup.location.href = url;\n      } else {\n        location.assign(url);\n      }\n\n      popup = null; // reverse-tabnabbing #460\n    };\n\n    reader.readAsDataURL(blob);\n  } else {\n    const url = URL.createObjectURL(blob);\n    if (popup) popup.location.assign(url);else location.href = url;\n    popup = null; // reverse-tabnabbing #460\n\n    setTimeout(function () {\n      URL.revokeObjectURL(url);\n    }, 4e4); // 40s\n  }\n}\n/**\n * Shows a toast or console.log\n *\n * @param message - message to log\n * @param type - different color of the tooltip\n */\n\n\nfunction toastMessage(message, type) {\n  const piniaMessage = 'üçç ' + message;\n\n  if (typeof __VUE_DEVTOOLS_TOAST__ === 'function') {\n    __VUE_DEVTOOLS_TOAST__(piniaMessage, type);\n  } else if (type === 'error') {\n    console.error(piniaMessage);\n  } else if (type === 'warn') {\n    console.warn(piniaMessage);\n  } else {\n    console.log(piniaMessage);\n  }\n}\n\nfunction isPinia(o) {\n  return '_a' in o && 'install' in o;\n}\n\nfunction checkClipboardAccess() {\n  if (!('clipboard' in navigator)) {\n    toastMessage(`Your browser doesn't support the Clipboard API`, 'error');\n    return true;\n  }\n}\n\nfunction checkNotFocusedError(error) {\n  if (error instanceof Error && error.message.toLowerCase().includes('document is not focused')) {\n    toastMessage('You need to activate the \"Emulate a focused page\" setting in the \"Rendering\" panel of devtools.', 'warn');\n    return true;\n  }\n\n  return false;\n}\n\nasync function actionGlobalCopyState(pinia) {\n  if (checkClipboardAccess()) return;\n\n  try {\n    await navigator.clipboard.writeText(JSON.stringify(pinia.state.value));\n    toastMessage('Global state copied to clipboard.');\n  } catch (error) {\n    if (checkNotFocusedError(error)) return;\n    toastMessage(`Failed to serialize the state. Check the console for more details.`, 'error');\n    console.error(error);\n  }\n}\n\nasync function actionGlobalPasteState(pinia) {\n  if (checkClipboardAccess()) return;\n\n  try {\n    pinia.state.value = JSON.parse(await navigator.clipboard.readText());\n    toastMessage('Global state pasted from clipboard.');\n  } catch (error) {\n    if (checkNotFocusedError(error)) return;\n    toastMessage(`Failed to deserialize the state from clipboard. Check the console for more details.`, 'error');\n    console.error(error);\n  }\n}\n\nasync function actionGlobalSaveState(pinia) {\n  try {\n    saveAs(new Blob([JSON.stringify(pinia.state.value)], {\n      type: 'text/plain;charset=utf-8'\n    }), 'pinia-state.json');\n  } catch (error) {\n    toastMessage(`Failed to export the state as JSON. Check the console for more details.`, 'error');\n    console.error(error);\n  }\n}\n\nlet fileInput;\n\nfunction getFileOpener() {\n  if (!fileInput) {\n    fileInput = document.createElement('input');\n    fileInput.type = 'file';\n    fileInput.accept = '.json';\n  }\n\n  function openFile() {\n    return new Promise((resolve, reject) => {\n      fileInput.onchange = async () => {\n        const files = fileInput.files;\n        if (!files) return resolve(null);\n        const file = files.item(0);\n        if (!file) return resolve(null);\n        return resolve({\n          text: await file.text(),\n          file\n        });\n      }; // @ts-ignore: TODO: changed from 4.3 to 4.4\n\n\n      fileInput.oncancel = () => resolve(null);\n\n      fileInput.onerror = reject;\n      fileInput.click();\n    });\n  }\n\n  return openFile;\n}\n\nasync function actionGlobalOpenStateFile(pinia) {\n  try {\n    const open = await getFileOpener();\n    const result = await open();\n    if (!result) return;\n    const {\n      text,\n      file\n    } = result;\n    pinia.state.value = JSON.parse(text);\n    toastMessage(`Global state imported from \"${file.name}\".`);\n  } catch (error) {\n    toastMessage(`Failed to export the state as JSON. Check the console for more details.`, 'error');\n    console.error(error);\n  }\n}\n\nfunction formatDisplay(display) {\n  return {\n    _custom: {\n      display\n    }\n  };\n}\n\nconst PINIA_ROOT_LABEL = 'üçç Pinia (root)';\nconst PINIA_ROOT_ID = '_root';\n\nfunction formatStoreForInspectorTree(store) {\n  return isPinia(store) ? {\n    id: PINIA_ROOT_ID,\n    label: PINIA_ROOT_LABEL\n  } : {\n    id: store.$id,\n    label: store.$id\n  };\n}\n\nfunction formatStoreForInspectorState(store) {\n  if (isPinia(store)) {\n    const storeNames = Array.from(store._s.keys());\n    const storeMap = store._s;\n    const state = {\n      state: storeNames.map(storeId => ({\n        editable: true,\n        key: storeId,\n        value: store.state.value[storeId]\n      })),\n      getters: storeNames.filter(id => storeMap.get(id)._getters).map(id => {\n        const store = storeMap.get(id);\n        return {\n          editable: false,\n          key: id,\n          value: store._getters.reduce((getters, key) => {\n            getters[key] = store[key];\n            return getters;\n          }, {})\n        };\n      })\n    };\n    return state;\n  }\n\n  const state = {\n    state: Object.keys(store.$state).map(key => ({\n      editable: true,\n      key,\n      value: store.$state[key]\n    }))\n  }; // avoid adding empty getters\n\n  if (store._getters && store._getters.length) {\n    state.getters = store._getters.map(getterName => ({\n      editable: false,\n      key: getterName,\n      value: store[getterName]\n    }));\n  }\n\n  if (store._customProperties.size) {\n    state.customProperties = Array.from(store._customProperties).map(key => ({\n      editable: true,\n      key,\n      value: store[key]\n    }));\n  }\n\n  return state;\n}\n\nfunction formatEventData(events) {\n  if (!events) return {};\n\n  if (Array.isArray(events)) {\n    // TODO: handle add and delete for arrays and objects\n    return events.reduce((data, event) => {\n      data.keys.push(event.key);\n      data.operations.push(event.type);\n      data.oldValue[event.key] = event.oldValue;\n      data.newValue[event.key] = event.newValue;\n      return data;\n    }, {\n      oldValue: {},\n      keys: [],\n      operations: [],\n      newValue: {}\n    });\n  } else {\n    return {\n      operation: formatDisplay(events.type),\n      key: formatDisplay(events.key),\n      oldValue: events.oldValue,\n      newValue: events.newValue\n    };\n  }\n}\n\nfunction formatMutationType(type) {\n  switch (type) {\n    case MutationType.direct:\n      return 'mutation';\n\n    case MutationType.patchFunction:\n      return '$patch';\n\n    case MutationType.patchObject:\n      return '$patch';\n\n    default:\n      return 'unknown';\n  }\n} // timeline can be paused when directly changing the state\n\n\nlet isTimelineActive = true;\nconst componentStateTypes = [];\nconst MUTATIONS_LAYER_ID = 'pinia:mutations';\nconst INSPECTOR_ID = 'pinia';\n/**\n * Gets the displayed name of a store in devtools\n *\n * @param id - id of the store\n * @returns a formatted string\n */\n\nconst getStoreType = id => 'üçç ' + id;\n/**\n * Add the pinia plugin without any store. Allows displaying a Pinia plugin tab\n * as soon as it is added to the application.\n *\n * @param app - Vue application\n * @param pinia - pinia instance\n */\n\n\nfunction registerPiniaDevtools(app, pinia) {\n  setupDevtoolsPlugin({\n    id: 'dev.esm.pinia',\n    label: 'Pinia üçç',\n    logo: 'https://pinia.vuejs.org/logo.svg',\n    packageName: 'pinia',\n    homepage: 'https://pinia.vuejs.org',\n    componentStateTypes,\n    app\n  }, api => {\n    if (typeof api.now !== 'function') {\n      toastMessage('You seem to be using an outdated version of Vue Devtools. Are you still using the Beta release instead of the stable one? You can find the links at https://devtools.vuejs.org/guide/installation.html.');\n    }\n\n    api.addTimelineLayer({\n      id: MUTATIONS_LAYER_ID,\n      label: `Pinia üçç`,\n      color: 0xe5df88\n    });\n    api.addInspector({\n      id: INSPECTOR_ID,\n      label: 'Pinia üçç',\n      icon: 'storage',\n      treeFilterPlaceholder: 'Search stores',\n      actions: [{\n        icon: 'content_copy',\n        action: () => {\n          actionGlobalCopyState(pinia);\n        },\n        tooltip: 'Serialize and copy the state'\n      }, {\n        icon: 'content_paste',\n        action: async () => {\n          await actionGlobalPasteState(pinia);\n          api.sendInspectorTree(INSPECTOR_ID);\n          api.sendInspectorState(INSPECTOR_ID);\n        },\n        tooltip: 'Replace the state with the content of your clipboard'\n      }, {\n        icon: 'save',\n        action: () => {\n          actionGlobalSaveState(pinia);\n        },\n        tooltip: 'Save the state as a JSON file'\n      }, {\n        icon: 'folder_open',\n        action: async () => {\n          await actionGlobalOpenStateFile(pinia);\n          api.sendInspectorTree(INSPECTOR_ID);\n          api.sendInspectorState(INSPECTOR_ID);\n        },\n        tooltip: 'Import the state from a JSON file'\n      }],\n      nodeActions: [{\n        icon: 'restore',\n        tooltip: 'Reset the state (option store only)',\n        action: nodeId => {\n          const store = pinia._s.get(nodeId);\n\n          if (!store) {\n            toastMessage(`Cannot reset \"${nodeId}\" store because it wasn't found.`, 'warn');\n          } else if (!store._isOptionsAPI) {\n            toastMessage(`Cannot reset \"${nodeId}\" store because it's a setup store.`, 'warn');\n          } else {\n            store.$reset();\n            toastMessage(`Store \"${nodeId}\" reset.`);\n          }\n        }\n      }]\n    });\n    api.on.inspectComponent((payload, ctx) => {\n      const proxy = payload.componentInstance && payload.componentInstance.proxy;\n\n      if (proxy && proxy._pStores) {\n        const piniaStores = payload.componentInstance.proxy._pStores;\n        Object.values(piniaStores).forEach(store => {\n          payload.instanceData.state.push({\n            type: getStoreType(store.$id),\n            key: 'state',\n            editable: true,\n            value: store._isOptionsAPI ? {\n              _custom: {\n                value: toRaw(store.$state),\n                actions: [{\n                  icon: 'restore',\n                  tooltip: 'Reset the state of this store',\n                  action: () => store.$reset()\n                }]\n              }\n            } : // NOTE: workaround to unwrap transferred refs\n            Object.keys(store.$state).reduce((state, key) => {\n              state[key] = store.$state[key];\n              return state;\n            }, {})\n          });\n\n          if (store._getters && store._getters.length) {\n            payload.instanceData.state.push({\n              type: getStoreType(store.$id),\n              key: 'getters',\n              editable: false,\n              value: store._getters.reduce((getters, key) => {\n                try {\n                  getters[key] = store[key];\n                } catch (error) {\n                  // @ts-expect-error: we just want to show it in devtools\n                  getters[key] = error;\n                }\n\n                return getters;\n              }, {})\n            });\n          }\n        });\n      }\n    });\n    api.on.getInspectorTree(payload => {\n      if (payload.app === app && payload.inspectorId === INSPECTOR_ID) {\n        let stores = [pinia];\n        stores = stores.concat(Array.from(pinia._s.values()));\n        payload.rootNodes = (payload.filter ? stores.filter(store => '$id' in store ? store.$id.toLowerCase().includes(payload.filter.toLowerCase()) : PINIA_ROOT_LABEL.toLowerCase().includes(payload.filter.toLowerCase())) : stores).map(formatStoreForInspectorTree);\n      }\n    });\n    api.on.getInspectorState(payload => {\n      if (payload.app === app && payload.inspectorId === INSPECTOR_ID) {\n        const inspectedStore = payload.nodeId === PINIA_ROOT_ID ? pinia : pinia._s.get(payload.nodeId);\n\n        if (!inspectedStore) {\n          // this could be the selected store restored for a different project\n          // so it's better not to say anything here\n          return;\n        }\n\n        if (inspectedStore) {\n          payload.state = formatStoreForInspectorState(inspectedStore);\n        }\n      }\n    });\n    api.on.editInspectorState((payload, ctx) => {\n      if (payload.app === app && payload.inspectorId === INSPECTOR_ID) {\n        const inspectedStore = payload.nodeId === PINIA_ROOT_ID ? pinia : pinia._s.get(payload.nodeId);\n\n        if (!inspectedStore) {\n          return toastMessage(`store \"${payload.nodeId}\" not found`, 'error');\n        }\n\n        const {\n          path\n        } = payload;\n\n        if (!isPinia(inspectedStore)) {\n          // access only the state\n          if (path.length !== 1 || !inspectedStore._customProperties.has(path[0]) || path[0] in inspectedStore.$state) {\n            path.unshift('$state');\n          }\n        } else {\n          // Root access, we can omit the `.value` because the devtools API does it for us\n          path.unshift('state');\n        }\n\n        isTimelineActive = false;\n        payload.set(inspectedStore, path, payload.state.value);\n        isTimelineActive = true;\n      }\n    });\n    api.on.editComponentState(payload => {\n      if (payload.type.startsWith('üçç')) {\n        const storeId = payload.type.replace(/^üçç\\s*/, '');\n\n        const store = pinia._s.get(storeId);\n\n        if (!store) {\n          return toastMessage(`store \"${storeId}\" not found`, 'error');\n        }\n\n        const {\n          path\n        } = payload;\n\n        if (path[0] !== 'state') {\n          return toastMessage(`Invalid path for store \"${storeId}\":\\n${path}\\nOnly state can be modified.`);\n        } // rewrite the first entry to be able to directly set the state as\n        // well as any other path\n\n\n        path[0] = '$state';\n        isTimelineActive = false;\n        payload.set(store, path, payload.state.value);\n        isTimelineActive = true;\n      }\n    });\n  });\n}\n\nfunction addStoreToDevtools(app, store) {\n  if (!componentStateTypes.includes(getStoreType(store.$id))) {\n    componentStateTypes.push(getStoreType(store.$id));\n  }\n\n  setupDevtoolsPlugin({\n    id: 'dev.esm.pinia',\n    label: 'Pinia üçç',\n    logo: 'https://pinia.vuejs.org/logo.svg',\n    packageName: 'pinia',\n    homepage: 'https://pinia.vuejs.org',\n    componentStateTypes,\n    app,\n    settings: {\n      logStoreChanges: {\n        label: 'Notify about new/deleted stores',\n        type: 'boolean',\n        defaultValue: true\n      } // useEmojis: {\n      //   label: 'Use emojis in messages ‚ö°Ô∏è',\n      //   type: 'boolean',\n      //   defaultValue: true,\n      // },\n\n    }\n  }, api => {\n    // gracefully handle errors\n    const now = typeof api.now === 'function' ? api.now.bind(api) : Date.now;\n    store.$onAction(({\n      after,\n      onError,\n      name,\n      args\n    }) => {\n      const groupId = runningActionId++;\n      api.addTimelineEvent({\n        layerId: MUTATIONS_LAYER_ID,\n        event: {\n          time: now(),\n          title: 'üõ´ ' + name,\n          subtitle: 'start',\n          data: {\n            store: formatDisplay(store.$id),\n            action: formatDisplay(name),\n            args\n          },\n          groupId\n        }\n      });\n      after(result => {\n        activeAction = undefined;\n        api.addTimelineEvent({\n          layerId: MUTATIONS_LAYER_ID,\n          event: {\n            time: now(),\n            title: 'üõ¨ ' + name,\n            subtitle: 'end',\n            data: {\n              store: formatDisplay(store.$id),\n              action: formatDisplay(name),\n              args,\n              result\n            },\n            groupId\n          }\n        });\n      });\n      onError(error => {\n        activeAction = undefined;\n        api.addTimelineEvent({\n          layerId: MUTATIONS_LAYER_ID,\n          event: {\n            time: now(),\n            logType: 'error',\n            title: 'üí• ' + name,\n            subtitle: 'end',\n            data: {\n              store: formatDisplay(store.$id),\n              action: formatDisplay(name),\n              args,\n              error\n            },\n            groupId\n          }\n        });\n      });\n    }, true);\n\n    store._customProperties.forEach(name => {\n      watch(() => unref(store[name]), (newValue, oldValue) => {\n        api.notifyComponentUpdate();\n        api.sendInspectorState(INSPECTOR_ID);\n\n        if (isTimelineActive) {\n          api.addTimelineEvent({\n            layerId: MUTATIONS_LAYER_ID,\n            event: {\n              time: now(),\n              title: 'Change',\n              subtitle: name,\n              data: {\n                newValue,\n                oldValue\n              },\n              groupId: activeAction\n            }\n          });\n        }\n      }, {\n        deep: true\n      });\n    });\n\n    store.$subscribe(({\n      events,\n      type\n    }, state) => {\n      api.notifyComponentUpdate();\n      api.sendInspectorState(INSPECTOR_ID);\n      if (!isTimelineActive) return; // rootStore.state[store.id] = state\n\n      const eventData = {\n        time: now(),\n        title: formatMutationType(type),\n        data: {\n          store: formatDisplay(store.$id),\n          ...formatEventData(events)\n        },\n        groupId: activeAction\n      }; // reset for the next mutation\n\n      activeAction = undefined;\n\n      if (type === MutationType.patchFunction) {\n        eventData.subtitle = '‚§µÔ∏è';\n      } else if (type === MutationType.patchObject) {\n        eventData.subtitle = 'üß©';\n      } else if (events && !Array.isArray(events)) {\n        eventData.subtitle = events.type;\n      }\n\n      if (events) {\n        eventData.data['rawEvent(s)'] = {\n          _custom: {\n            display: 'DebuggerEvent',\n            type: 'object',\n            tooltip: 'raw DebuggerEvent[]',\n            value: events\n          }\n        };\n      }\n\n      api.addTimelineEvent({\n        layerId: MUTATIONS_LAYER_ID,\n        event: eventData\n      });\n    }, {\n      detached: true,\n      flush: 'sync'\n    });\n    const hotUpdate = store._hotUpdate;\n    store._hotUpdate = markRaw(newStore => {\n      hotUpdate(newStore);\n      api.addTimelineEvent({\n        layerId: MUTATIONS_LAYER_ID,\n        event: {\n          time: now(),\n          title: 'üî• ' + store.$id,\n          subtitle: 'HMR update',\n          data: {\n            store: formatDisplay(store.$id),\n            info: formatDisplay(`HMR update`)\n          }\n        }\n      }); // update the devtools too\n\n      api.notifyComponentUpdate();\n      api.sendInspectorTree(INSPECTOR_ID);\n      api.sendInspectorState(INSPECTOR_ID);\n    });\n    const {\n      $dispose\n    } = store;\n\n    store.$dispose = () => {\n      $dispose();\n      api.notifyComponentUpdate();\n      api.sendInspectorTree(INSPECTOR_ID);\n      api.sendInspectorState(INSPECTOR_ID);\n      api.getSettings().logStoreChanges && toastMessage(`Disposed \"${store.$id}\" store üóë`);\n    }; // trigger an update so it can display new registered stores\n\n\n    api.notifyComponentUpdate();\n    api.sendInspectorTree(INSPECTOR_ID);\n    api.sendInspectorState(INSPECTOR_ID);\n    api.getSettings().logStoreChanges && toastMessage(`\"${store.$id}\" store installed üÜï`);\n  });\n}\n\nlet runningActionId = 0;\nlet activeAction;\n/**\n * Patches a store to enable action grouping in devtools by wrapping the store with a Proxy that is passed as the\n * context of all actions, allowing us to set `runningAction` on each access and effectively associating any state\n * mutation to the action.\n *\n * @param store - store to patch\n * @param actionNames - list of actionst to patch\n */\n\nfunction patchActionForGrouping(store, actionNames) {\n  // original actions of the store as they are given by pinia. We are going to override them\n  const actions = actionNames.reduce((storeActions, actionName) => {\n    // use toRaw to avoid tracking #541\n    storeActions[actionName] = toRaw(store)[actionName];\n    return storeActions;\n  }, {});\n\n  for (const actionName in actions) {\n    store[actionName] = function () {\n      // setActivePinia(store._p)\n      // the running action id is incremented in a before action hook\n      const _actionId = runningActionId;\n      const trackedStore = new Proxy(store, {\n        get(...args) {\n          activeAction = _actionId;\n          return Reflect.get(...args);\n        },\n\n        set(...args) {\n          activeAction = _actionId;\n          return Reflect.set(...args);\n        }\n\n      });\n      return actions[actionName].apply(trackedStore, arguments);\n    };\n  }\n}\n/**\n * pinia.use(devtoolsPlugin)\n */\n\n\nfunction devtoolsPlugin({\n  app,\n  store,\n  options\n}) {\n  // HMR module\n  if (store.$id.startsWith('__hot:')) {\n    return;\n  } // detect option api vs setup api\n\n\n  if (options.state) {\n    store._isOptionsAPI = true;\n  } // only wrap actions in option-defined stores as this technique relies on\n  // wrapping the context of the action with a proxy\n\n\n  if (typeof options.state === 'function') {\n    patchActionForGrouping( // @ts-expect-error: can cast the store...\n    store, Object.keys(options.actions));\n    const originalHotUpdate = store._hotUpdate; // Upgrade the HMR to also update the new actions\n\n    toRaw(store)._hotUpdate = function (newStore) {\n      originalHotUpdate.apply(this, arguments);\n      patchActionForGrouping(store, Object.keys(newStore._hmrPayload.actions));\n    };\n  }\n\n  addStoreToDevtools(app, // FIXME: is there a way to allow the assignment from Store<Id, S, G, A> to StoreGeneric?\n  store);\n}\n/**\n * Creates a Pinia instance to be used by the application\n */\n\n\nfunction createPinia() {\n  const scope = effectScope(true); // NOTE: here we could check the window object for a state and directly set it\n  // if there is anything like it with Vue 3 SSR\n\n  const state = scope.run(() => ref({}));\n  let _p = []; // plugins added before calling app.use(pinia)\n\n  let toBeInstalled = [];\n  const pinia = markRaw({\n    install(app) {\n      // this allows calling useStore() outside of a component setup after\n      // installing pinia's plugin\n      setActivePinia(pinia);\n\n      if (!isVue2) {\n        pinia._a = app;\n        app.provide(piniaSymbol, pinia);\n        app.config.globalProperties.$pinia = pinia;\n        /* istanbul ignore else */\n\n        if (USE_DEVTOOLS) {\n          registerPiniaDevtools(app, pinia);\n        }\n\n        toBeInstalled.forEach(plugin => _p.push(plugin));\n        toBeInstalled = [];\n      }\n    },\n\n    use(plugin) {\n      if (!this._a && !isVue2) {\n        toBeInstalled.push(plugin);\n      } else {\n        _p.push(plugin);\n      }\n\n      return this;\n    },\n\n    _p,\n    // it's actually undefined here\n    // @ts-expect-error\n    _a: null,\n    _e: scope,\n    _s: new Map(),\n    state\n  }); // pinia devtools rely on dev only features so they cannot be forced unless\n  // the dev build of Vue is used. Avoid old browsers like IE11.\n\n  if (USE_DEVTOOLS && typeof Proxy !== 'undefined') {\n    pinia.use(devtoolsPlugin);\n  }\n\n  return pinia;\n}\n/**\n * Checks if a function is a `StoreDefinition`.\n *\n * @param fn - object to test\n * @returns true if `fn` is a StoreDefinition\n */\n\n\nconst isUseStore = fn => {\n  return typeof fn === 'function' && typeof fn.$id === 'string';\n};\n/**\n * Mutates in place `newState` with `oldState` to _hot update_ it. It will\n * remove any key not existing in `newState` and recursively merge plain\n * objects.\n *\n * @param newState - new state object to be patched\n * @param oldState - old state that should be used to patch newState\n * @returns - newState\n */\n\n\nfunction patchObject(newState, oldState) {\n  // no need to go through symbols because they cannot be serialized anyway\n  for (const key in oldState) {\n    const subPatch = oldState[key]; // skip the whole sub tree\n\n    if (!(key in newState)) {\n      continue;\n    }\n\n    const targetValue = newState[key];\n\n    if (isPlainObject(targetValue) && isPlainObject(subPatch) && !isRef(subPatch) && !isReactive(subPatch)) {\n      newState[key] = patchObject(targetValue, subPatch);\n    } else {\n      // objects are either a bit more complex (e.g. refs) or primitives, so we\n      // just set the whole thing\n      if (isVue2) {\n        set(newState, key, subPatch);\n      } else {\n        newState[key] = subPatch;\n      }\n    }\n  }\n\n  return newState;\n}\n/**\n * Creates an _accept_ function to pass to `import.meta.hot` in Vite applications.\n *\n * @example\n * ```js\n * const useUser = defineStore(...)\n * if (import.meta.hot) {\n *   import.meta.hot.accept(acceptHMRUpdate(useUser, import.meta.hot))\n * }\n * ```\n *\n * @param initialUseStore - return of the defineStore to hot update\n * @param hot - `import.meta.hot`\n */\n\n\nfunction acceptHMRUpdate(initialUseStore, hot) {\n  // strip as much as possible from iife.prod\n  if (!(process.env.NODE_ENV !== 'production')) {\n    return () => {};\n  }\n\n  return newModule => {\n    const pinia = hot.data.pinia || initialUseStore._pinia;\n\n    if (!pinia) {\n      // this store is still not used\n      return;\n    } // preserve the pinia instance across loads\n\n\n    hot.data.pinia = pinia; // console.log('got data', newStore)\n\n    for (const exportName in newModule) {\n      const useStore = newModule[exportName]; // console.log('checking for', exportName)\n\n      if (isUseStore(useStore) && pinia._s.has(useStore.$id)) {\n        // console.log('Accepting update for', useStore.$id)\n        const id = useStore.$id;\n\n        if (id !== initialUseStore.$id) {\n          console.warn(`The id of the store changed from \"${initialUseStore.$id}\" to \"${id}\". Reloading.`); // return import.meta.hot.invalidate()\n\n          return hot.invalidate();\n        }\n\n        const existingStore = pinia._s.get(id);\n\n        if (!existingStore) {\n          console.log(`[Pinia]: skipping hmr because store doesn't exist yet`);\n          return;\n        }\n\n        useStore(pinia, existingStore);\n      }\n    }\n  };\n}\n\nconst noop = () => {};\n\nfunction addSubscription(subscriptions, callback, detached, onCleanup = noop) {\n  subscriptions.push(callback);\n\n  const removeSubscription = () => {\n    const idx = subscriptions.indexOf(callback);\n\n    if (idx > -1) {\n      subscriptions.splice(idx, 1);\n      onCleanup();\n    }\n  };\n\n  if (!detached && getCurrentScope()) {\n    onScopeDispose(removeSubscription);\n  }\n\n  return removeSubscription;\n}\n\nfunction triggerSubscriptions(subscriptions, ...args) {\n  subscriptions.slice().forEach(callback => {\n    callback(...args);\n  });\n}\n\nfunction mergeReactiveObjects(target, patchToApply) {\n  // Handle Map instances\n  if (target instanceof Map && patchToApply instanceof Map) {\n    patchToApply.forEach((value, key) => target.set(key, value));\n  } // Handle Set instances\n\n\n  if (target instanceof Set && patchToApply instanceof Set) {\n    patchToApply.forEach(target.add, target);\n  } // no need to go through symbols because they cannot be serialized anyway\n\n\n  for (const key in patchToApply) {\n    if (!patchToApply.hasOwnProperty(key)) continue;\n    const subPatch = patchToApply[key];\n    const targetValue = target[key];\n\n    if (isPlainObject(targetValue) && isPlainObject(subPatch) && target.hasOwnProperty(key) && !isRef(subPatch) && !isReactive(subPatch)) {\n      // NOTE: here I wanted to warn about inconsistent types but it's not possible because in setup stores one might\n      // start the value of a property as a certain type e.g. a Map, and then for some reason, during SSR, change that\n      // to `undefined`. When trying to hydrate, we want to override the Map with `undefined`.\n      target[key] = mergeReactiveObjects(targetValue, subPatch);\n    } else {\n      // @ts-expect-error: subPatch is a valid value\n      target[key] = subPatch;\n    }\n  }\n\n  return target;\n}\n\nconst skipHydrateSymbol = process.env.NODE_ENV !== 'production' ? Symbol('pinia:skipHydration') :\n/* istanbul ignore next */\nSymbol();\nconst skipHydrateMap = /*#__PURE__*/new WeakMap();\n/**\n * Tells Pinia to skip the hydration process of a given object. This is useful in setup stores (only) when you return a\n * stateful object in the store but it isn't really state. e.g. returning a router instance in a setup store.\n *\n * @param obj - target object\n * @returns obj\n */\n\nfunction skipHydrate(obj) {\n  return isVue2 ? // in @vue/composition-api, the refs are sealed so defineProperty doesn't work...\n\n  /* istanbul ignore next */\n  skipHydrateMap.set(obj, 1) && obj : Object.defineProperty(obj, skipHydrateSymbol, {});\n}\n/**\n * Returns whether a value should be hydrated\n *\n * @param obj - target variable\n * @returns true if `obj` should be hydrated\n */\n\n\nfunction shouldHydrate(obj) {\n  return isVue2 ?\n  /* istanbul ignore next */\n  !skipHydrateMap.has(obj) : !isPlainObject(obj) || !obj.hasOwnProperty(skipHydrateSymbol);\n}\n\nconst {\n  assign\n} = Object;\n\nfunction isComputed(o) {\n  return !!(isRef(o) && o.effect);\n}\n\nfunction createOptionsStore(id, options, pinia, hot) {\n  const {\n    state,\n    actions,\n    getters\n  } = options;\n  const initialState = pinia.state.value[id];\n  let store;\n\n  function setup() {\n    if (!initialState && (!(process.env.NODE_ENV !== 'production') || !hot)) {\n      /* istanbul ignore if */\n      if (isVue2) {\n        set(pinia.state.value, id, state ? state() : {});\n      } else {\n        pinia.state.value[id] = state ? state() : {};\n      }\n    } // avoid creating a state in pinia.state.value\n\n\n    const localState = process.env.NODE_ENV !== 'production' && hot ? // use ref() to unwrap refs inside state TODO: check if this is still necessary\n    toRefs(ref(state ? state() : {}).value) : toRefs(pinia.state.value[id]);\n    return assign(localState, actions, Object.keys(getters || {}).reduce((computedGetters, name) => {\n      if (process.env.NODE_ENV !== 'production' && name in localState) {\n        console.warn(`[üçç]: A getter cannot have the same name as another state property. Rename one of them. Found with \"${name}\" in store \"${id}\".`);\n      }\n\n      computedGetters[name] = markRaw(computed(() => {\n        setActivePinia(pinia); // it was created just before\n\n        const store = pinia._s.get(id); // allow cross using stores\n\n        /* istanbul ignore next */\n\n\n        if (isVue2 && !store._r) return; // @ts-expect-error\n        // return getters![name].call(context, context)\n        // TODO: avoid reading the getter while assigning with a global variable\n\n        return getters[name].call(store, store);\n      }));\n      return computedGetters;\n    }, {}));\n  }\n\n  store = createSetupStore(id, setup, options, pinia, hot, true);\n\n  store.$reset = function $reset() {\n    const newState = state ? state() : {}; // we use a patch to group all changes into one single subscription\n\n    this.$patch($state => {\n      assign($state, newState);\n    });\n  };\n\n  return store;\n}\n\nfunction createSetupStore($id, setup, options = {}, pinia, hot, isOptionsStore) {\n  let scope;\n  const optionsForPlugin = assign({\n    actions: {}\n  }, options);\n  /* istanbul ignore if */\n  // @ts-expect-error: active is an internal property\n\n  if (process.env.NODE_ENV !== 'production' && !pinia._e.active) {\n    throw new Error('Pinia destroyed');\n  } // watcher options for $subscribe\n\n\n  const $subscribeOptions = {\n    deep: true // flush: 'post',\n\n  };\n  /* istanbul ignore else */\n\n  if (process.env.NODE_ENV !== 'production' && !isVue2) {\n    $subscribeOptions.onTrigger = event => {\n      /* istanbul ignore else */\n      if (isListening) {\n        debuggerEvents = event; // avoid triggering this while the store is being built and the state is being set in pinia\n      } else if (isListening == false && !store._hotUpdating) {\n        // let patch send all the events together later\n\n        /* istanbul ignore else */\n        if (Array.isArray(debuggerEvents)) {\n          debuggerEvents.push(event);\n        } else {\n          console.error('üçç debuggerEvents should be an array. This is most likely an internal Pinia bug.');\n        }\n      }\n    };\n  } // internal state\n\n\n  let isListening; // set to true at the end\n\n  let isSyncListening; // set to true at the end\n\n  let subscriptions = markRaw([]);\n  let actionSubscriptions = markRaw([]);\n  let debuggerEvents;\n  const initialState = pinia.state.value[$id]; // avoid setting the state for option stores if it is set\n  // by the setup\n\n  if (!isOptionsStore && !initialState && (!(process.env.NODE_ENV !== 'production') || !hot)) {\n    /* istanbul ignore if */\n    if (isVue2) {\n      set(pinia.state.value, $id, {});\n    } else {\n      pinia.state.value[$id] = {};\n    }\n  }\n\n  const hotState = ref({}); // avoid triggering too many listeners\n  // https://github.com/vuejs/pinia/issues/1129\n\n  let activeListener;\n\n  function $patch(partialStateOrMutator) {\n    let subscriptionMutation;\n    isListening = isSyncListening = false; // reset the debugger events since patches are sync\n\n    /* istanbul ignore else */\n\n    if (process.env.NODE_ENV !== 'production') {\n      debuggerEvents = [];\n    }\n\n    if (typeof partialStateOrMutator === 'function') {\n      partialStateOrMutator(pinia.state.value[$id]);\n      subscriptionMutation = {\n        type: MutationType.patchFunction,\n        storeId: $id,\n        events: debuggerEvents\n      };\n    } else {\n      mergeReactiveObjects(pinia.state.value[$id], partialStateOrMutator);\n      subscriptionMutation = {\n        type: MutationType.patchObject,\n        payload: partialStateOrMutator,\n        storeId: $id,\n        events: debuggerEvents\n      };\n    }\n\n    const myListenerId = activeListener = Symbol();\n    nextTick().then(() => {\n      if (activeListener === myListenerId) {\n        isListening = true;\n      }\n    });\n    isSyncListening = true; // because we paused the watcher, we need to manually call the subscriptions\n\n    triggerSubscriptions(subscriptions, subscriptionMutation, pinia.state.value[$id]);\n  }\n  /* istanbul ignore next */\n\n\n  const $reset = process.env.NODE_ENV !== 'production' ? () => {\n    throw new Error(`üçç: Store \"${$id}\" is built using the setup syntax and does not implement $reset().`);\n  } : noop;\n\n  function $dispose() {\n    scope.stop();\n    subscriptions = [];\n    actionSubscriptions = [];\n\n    pinia._s.delete($id);\n  }\n  /**\n   * Wraps an action to handle subscriptions.\n   *\n   * @param name - name of the action\n   * @param action - action to wrap\n   * @returns a wrapped action to handle subscriptions\n   */\n\n\n  function wrapAction(name, action) {\n    return function () {\n      setActivePinia(pinia);\n      const args = Array.from(arguments);\n      const afterCallbackList = [];\n      const onErrorCallbackList = [];\n\n      function after(callback) {\n        afterCallbackList.push(callback);\n      }\n\n      function onError(callback) {\n        onErrorCallbackList.push(callback);\n      } // @ts-expect-error\n\n\n      triggerSubscriptions(actionSubscriptions, {\n        args,\n        name,\n        store,\n        after,\n        onError\n      });\n      let ret;\n\n      try {\n        ret = action.apply(this && this.$id === $id ? this : store, args); // handle sync errors\n      } catch (error) {\n        triggerSubscriptions(onErrorCallbackList, error);\n        throw error;\n      }\n\n      if (ret instanceof Promise) {\n        return ret.then(value => {\n          triggerSubscriptions(afterCallbackList, value);\n          return value;\n        }).catch(error => {\n          triggerSubscriptions(onErrorCallbackList, error);\n          return Promise.reject(error);\n        });\n      } // allow the afterCallback to override the return value\n\n\n      triggerSubscriptions(afterCallbackList, ret);\n      return ret;\n    };\n  }\n\n  const _hmrPayload = /*#__PURE__*/markRaw({\n    actions: {},\n    getters: {},\n    state: [],\n    hotState\n  });\n\n  const partialStore = {\n    _p: pinia,\n    // _s: scope,\n    $id,\n    $onAction: addSubscription.bind(null, actionSubscriptions),\n    $patch,\n    $reset,\n\n    $subscribe(callback, options = {}) {\n      const removeSubscription = addSubscription(subscriptions, callback, options.detached, () => stopWatcher());\n      const stopWatcher = scope.run(() => watch(() => pinia.state.value[$id], state => {\n        if (options.flush === 'sync' ? isSyncListening : isListening) {\n          callback({\n            storeId: $id,\n            type: MutationType.direct,\n            events: debuggerEvents\n          }, state);\n        }\n      }, assign({}, $subscribeOptions, options)));\n      return removeSubscription;\n    },\n\n    $dispose\n  };\n  /* istanbul ignore if */\n\n  if (isVue2) {\n    // start as non ready\n    partialStore._r = false;\n  }\n\n  const store = reactive(process.env.NODE_ENV !== 'production' || USE_DEVTOOLS ? assign({\n    _hmrPayload,\n    _customProperties: markRaw(new Set()) // devtools custom properties\n\n  }, partialStore // must be added later\n  // setupStore\n  ) : partialStore); // store the partial store now so the setup of stores can instantiate each other before they are finished without\n  // creating infinite loops.\n\n  pinia._s.set($id, store); // TODO: idea create skipSerialize that marks properties as non serializable and they are skipped\n\n\n  const setupStore = pinia._e.run(() => {\n    scope = effectScope();\n    return scope.run(() => setup());\n  }); // overwrite existing actions to support $onAction\n\n\n  for (const key in setupStore) {\n    const prop = setupStore[key];\n\n    if (isRef(prop) && !isComputed(prop) || isReactive(prop)) {\n      // mark it as a piece of state to be serialized\n      if (process.env.NODE_ENV !== 'production' && hot) {\n        set(hotState.value, key, toRef(setupStore, key)); // createOptionStore directly sets the state in pinia.state.value so we\n        // can just skip that\n      } else if (!isOptionsStore) {\n        // in setup stores we must hydrate the state and sync pinia state tree with the refs the user just created\n        if (initialState && shouldHydrate(prop)) {\n          if (isRef(prop)) {\n            prop.value = initialState[key];\n          } else {\n            // probably a reactive object, lets recursively assign\n            // @ts-expect-error: prop is unknown\n            mergeReactiveObjects(prop, initialState[key]);\n          }\n        } // transfer the ref to the pinia state to keep everything in sync\n\n        /* istanbul ignore if */\n\n\n        if (isVue2) {\n          set(pinia.state.value[$id], key, prop);\n        } else {\n          pinia.state.value[$id][key] = prop;\n        }\n      }\n      /* istanbul ignore else */\n\n\n      if (process.env.NODE_ENV !== 'production') {\n        _hmrPayload.state.push(key);\n      } // action\n\n    } else if (typeof prop === 'function') {\n      // @ts-expect-error: we are overriding the function we avoid wrapping if\n      const actionValue = process.env.NODE_ENV !== 'production' && hot ? prop : wrapAction(key, prop); // this a hot module replacement store because the hotUpdate method needs\n      // to do it with the right context\n\n      /* istanbul ignore if */\n\n      if (isVue2) {\n        set(setupStore, key, actionValue);\n      } else {\n        // @ts-expect-error\n        setupStore[key] = actionValue;\n      }\n      /* istanbul ignore else */\n\n\n      if (process.env.NODE_ENV !== 'production') {\n        _hmrPayload.actions[key] = prop;\n      } // list actions so they can be used in plugins\n      // @ts-expect-error\n\n\n      optionsForPlugin.actions[key] = prop;\n    } else if (process.env.NODE_ENV !== 'production') {\n      // add getters for devtools\n      if (isComputed(prop)) {\n        _hmrPayload.getters[key] = isOptionsStore ? // @ts-expect-error\n        options.getters[key] : prop;\n\n        if (IS_CLIENT) {\n          const getters = setupStore._getters || ( // @ts-expect-error: same\n          setupStore._getters = markRaw([]));\n          getters.push(key);\n        }\n      }\n    }\n  } // add the state, getters, and action properties\n\n  /* istanbul ignore if */\n\n\n  if (isVue2) {\n    Object.keys(setupStore).forEach(key => {\n      set(store, key, setupStore[key]);\n    });\n  } else {\n    assign(store, setupStore); // allows retrieving reactive objects with `storeToRefs()`. Must be called after assigning to the reactive object.\n    // Make `storeToRefs()` work with `reactive()` #799\n\n    assign(toRaw(store), setupStore);\n  } // use this instead of a computed with setter to be able to create it anywhere\n  // without linking the computed lifespan to wherever the store is first\n  // created.\n\n\n  Object.defineProperty(store, '$state', {\n    get: () => process.env.NODE_ENV !== 'production' && hot ? hotState.value : pinia.state.value[$id],\n    set: state => {\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && hot) {\n        throw new Error('cannot set hotState');\n      }\n\n      $patch($state => {\n        assign($state, state);\n      });\n    }\n  }); // add the hotUpdate before plugins to allow them to override it\n\n  /* istanbul ignore else */\n\n  if (process.env.NODE_ENV !== 'production') {\n    store._hotUpdate = markRaw(newStore => {\n      store._hotUpdating = true;\n\n      newStore._hmrPayload.state.forEach(stateKey => {\n        if (stateKey in store.$state) {\n          const newStateTarget = newStore.$state[stateKey];\n          const oldStateSource = store.$state[stateKey];\n\n          if (typeof newStateTarget === 'object' && isPlainObject(newStateTarget) && isPlainObject(oldStateSource)) {\n            patchObject(newStateTarget, oldStateSource);\n          } else {\n            // transfer the ref\n            newStore.$state[stateKey] = oldStateSource;\n          }\n        } // patch direct access properties to allow store.stateProperty to work as\n        // store.$state.stateProperty\n\n\n        set(store, stateKey, toRef(newStore.$state, stateKey));\n      }); // remove deleted state properties\n\n\n      Object.keys(store.$state).forEach(stateKey => {\n        if (!(stateKey in newStore.$state)) {\n          del(store, stateKey);\n        }\n      }); // avoid devtools logging this as a mutation\n\n      isListening = false;\n      isSyncListening = false;\n      pinia.state.value[$id] = toRef(newStore._hmrPayload, 'hotState');\n      isSyncListening = true;\n      nextTick().then(() => {\n        isListening = true;\n      });\n\n      for (const actionName in newStore._hmrPayload.actions) {\n        const action = newStore[actionName];\n        set(store, actionName, wrapAction(actionName, action));\n      } // TODO: does this work in both setup and option store?\n\n\n      for (const getterName in newStore._hmrPayload.getters) {\n        const getter = newStore._hmrPayload.getters[getterName];\n        const getterValue = isOptionsStore ? // special handling of options api\n        computed(() => {\n          setActivePinia(pinia);\n          return getter.call(store, store);\n        }) : getter;\n        set(store, getterName, getterValue);\n      } // remove deleted getters\n\n\n      Object.keys(store._hmrPayload.getters).forEach(key => {\n        if (!(key in newStore._hmrPayload.getters)) {\n          del(store, key);\n        }\n      }); // remove old actions\n\n      Object.keys(store._hmrPayload.actions).forEach(key => {\n        if (!(key in newStore._hmrPayload.actions)) {\n          del(store, key);\n        }\n      }); // update the values used in devtools and to allow deleting new properties later on\n\n      store._hmrPayload = newStore._hmrPayload;\n      store._getters = newStore._getters;\n      store._hotUpdating = false;\n    });\n  }\n\n  if (USE_DEVTOOLS) {\n    const nonEnumerable = {\n      writable: true,\n      configurable: true,\n      // avoid warning on devtools trying to display this property\n      enumerable: false\n    };\n    ['_p', '_hmrPayload', '_getters', '_customProperties'].forEach(p => {\n      Object.defineProperty(store, p, {\n        value: store[p],\n        ...nonEnumerable\n      });\n    });\n  }\n  /* istanbul ignore if */\n\n\n  if (isVue2) {\n    // mark the store as ready before plugins\n    store._r = true;\n  } // apply all plugins\n\n\n  pinia._p.forEach(extender => {\n    /* istanbul ignore else */\n    if (USE_DEVTOOLS) {\n      const extensions = scope.run(() => extender({\n        store,\n        app: pinia._a,\n        pinia,\n        options: optionsForPlugin\n      }));\n      Object.keys(extensions || {}).forEach(key => store._customProperties.add(key));\n      assign(store, extensions);\n    } else {\n      assign(store, scope.run(() => extender({\n        store,\n        app: pinia._a,\n        pinia,\n        options: optionsForPlugin\n      })));\n    }\n  });\n\n  if (process.env.NODE_ENV !== 'production' && store.$state && typeof store.$state === 'object' && typeof store.$state.constructor === 'function' && !store.$state.constructor.toString().includes('[native code]')) {\n    console.warn(`[üçç]: The \"state\" must be a plain object. It cannot be\\n` + `\\tstate: () => new MyClass()\\n` + `Found in store \"${store.$id}\".`);\n  } // only apply hydrate to option stores with an initial state in pinia\n\n\n  if (initialState && isOptionsStore && options.hydrate) {\n    options.hydrate(store.$state, initialState);\n  }\n\n  isListening = true;\n  isSyncListening = true;\n  return store;\n}\n\nfunction defineStore( // TODO: add proper types from above\nidOrOptions, setup, setupOptions) {\n  let id;\n  let options;\n  const isSetupStore = typeof setup === 'function';\n\n  if (typeof idOrOptions === 'string') {\n    id = idOrOptions; // the option store setup will contain the actual options in this case\n\n    options = isSetupStore ? setupOptions : setup;\n  } else {\n    options = idOrOptions;\n    id = idOrOptions.id;\n  }\n\n  function useStore(pinia, hot) {\n    const currentInstance = getCurrentInstance();\n    pinia = // in test mode, ignore the argument provided as we can always retrieve a\n    // pinia instance with getActivePinia()\n    (process.env.NODE_ENV === 'test' && activePinia && activePinia._testing ? null : pinia) || currentInstance && inject(piniaSymbol, null);\n    if (pinia) setActivePinia(pinia);\n\n    if (process.env.NODE_ENV !== 'production' && !activePinia) {\n      throw new Error(`[üçç]: getActivePinia was called with no active Pinia. Did you forget to install pinia?\\n` + `\\tconst pinia = createPinia()\\n` + `\\tapp.use(pinia)\\n` + `This will fail in production.`);\n    }\n\n    pinia = activePinia;\n\n    if (!pinia._s.has(id)) {\n      // creating the store registers it in `pinia._s`\n      if (isSetupStore) {\n        createSetupStore(id, setup, options, pinia);\n      } else {\n        createOptionsStore(id, options, pinia);\n      }\n      /* istanbul ignore else */\n\n\n      if (process.env.NODE_ENV !== 'production') {\n        // @ts-expect-error: not the right inferred type\n        useStore._pinia = pinia;\n      }\n    }\n\n    const store = pinia._s.get(id);\n\n    if (process.env.NODE_ENV !== 'production' && hot) {\n      const hotId = '__hot:' + id;\n      const newStore = isSetupStore ? createSetupStore(hotId, setup, options, pinia, true) : createOptionsStore(hotId, assign({}, options), pinia, true);\n\n      hot._hotUpdate(newStore); // cleanup the state properties and the store from the cache\n\n\n      delete pinia.state.value[hotId];\n\n      pinia._s.delete(hotId);\n    } // save stores in instances to access them devtools\n\n\n    if (process.env.NODE_ENV !== 'production' && IS_CLIENT && currentInstance && currentInstance.proxy && // avoid adding stores that are just built for hot module replacement\n    !hot) {\n      const vm = currentInstance.proxy;\n      const cache = '_pStores' in vm ? vm._pStores : vm._pStores = {};\n      cache[id] = store;\n    } // StoreGeneric cannot be casted towards Store\n\n\n    return store;\n  }\n\n  useStore.$id = id;\n  return useStore;\n}\n\nlet mapStoreSuffix = 'Store';\n/**\n * Changes the suffix added by `mapStores()`. Can be set to an empty string.\n * Defaults to `\"Store\"`. Make sure to extend the MapStoresCustomization\n * interface if you are using TypeScript.\n *\n * @param suffix - new suffix\n */\n\nfunction setMapStoreSuffix(suffix // could be 'Store' but that would be annoying for JS\n) {\n  mapStoreSuffix = suffix;\n}\n/**\n * Allows using stores without the composition API (`setup()`) by generating an\n * object to be spread in the `computed` field of a component. It accepts a list\n * of store definitions.\n *\n * @example\n * ```js\n * export default {\n *   computed: {\n *     // other computed properties\n *     ...mapStores(useUserStore, useCartStore)\n *   },\n *\n *   created() {\n *     this.userStore // store with id \"user\"\n *     this.cartStore // store with id \"cart\"\n *   }\n * }\n * ```\n *\n * @param stores - list of stores to map to an object\n */\n\n\nfunction mapStores(...stores) {\n  if (process.env.NODE_ENV !== 'production' && Array.isArray(stores[0])) {\n    console.warn(`[üçç]: Directly pass all stores to \"mapStores()\" without putting them in an array:\\n` + `Replace\\n` + `\\tmapStores([useAuthStore, useCartStore])\\n` + `with\\n` + `\\tmapStores(useAuthStore, useCartStore)\\n` + `This will fail in production if not fixed.`);\n    stores = stores[0];\n  }\n\n  return stores.reduce((reduced, useStore) => {\n    // @ts-expect-error: $id is added by defineStore\n    reduced[useStore.$id + mapStoreSuffix] = function () {\n      return useStore(this.$pinia);\n    };\n\n    return reduced;\n  }, {});\n}\n/**\n * Allows using state and getters from one store without using the composition\n * API (`setup()`) by generating an object to be spread in the `computed` field\n * of a component.\n *\n * @param useStore - store to map from\n * @param keysOrMapper - array or object\n */\n\n\nfunction mapState(useStore, keysOrMapper) {\n  return Array.isArray(keysOrMapper) ? keysOrMapper.reduce((reduced, key) => {\n    reduced[key] = function () {\n      return useStore(this.$pinia)[key];\n    };\n\n    return reduced;\n  }, {}) : Object.keys(keysOrMapper).reduce((reduced, key) => {\n    // @ts-expect-error\n    reduced[key] = function () {\n      const store = useStore(this.$pinia);\n      const storeKey = keysOrMapper[key]; // for some reason TS is unable to infer the type of storeKey to be a\n      // function\n\n      return typeof storeKey === 'function' ? storeKey.call(this, store) : store[storeKey];\n    };\n\n    return reduced;\n  }, {});\n}\n/**\n * Alias for `mapState()`. You should use `mapState()` instead.\n * @deprecated use `mapState()` instead.\n */\n\n\nconst mapGetters = mapState;\n/**\n * Allows directly using actions from your store without using the composition\n * API (`setup()`) by generating an object to be spread in the `methods` field\n * of a component.\n *\n * @param useStore - store to map from\n * @param keysOrMapper - array or object\n */\n\nfunction mapActions(useStore, keysOrMapper) {\n  return Array.isArray(keysOrMapper) ? keysOrMapper.reduce((reduced, key) => {\n    // @ts-expect-error\n    reduced[key] = function (...args) {\n      return useStore(this.$pinia)[key](...args);\n    };\n\n    return reduced;\n  }, {}) : Object.keys(keysOrMapper).reduce((reduced, key) => {\n    // @ts-expect-error\n    reduced[key] = function (...args) {\n      return useStore(this.$pinia)[keysOrMapper[key]](...args);\n    };\n\n    return reduced;\n  }, {});\n}\n/**\n * Allows using state and getters from one store without using the composition\n * API (`setup()`) by generating an object to be spread in the `computed` field\n * of a component.\n *\n * @param useStore - store to map from\n * @param keysOrMapper - array or object\n */\n\n\nfunction mapWritableState(useStore, keysOrMapper) {\n  return Array.isArray(keysOrMapper) ? keysOrMapper.reduce((reduced, key) => {\n    // @ts-ignore\n    reduced[key] = {\n      get() {\n        return useStore(this.$pinia)[key];\n      },\n\n      set(value) {\n        // it's easier to type it here as any\n        return useStore(this.$pinia)[key] = value;\n      }\n\n    };\n    return reduced;\n  }, {}) : Object.keys(keysOrMapper).reduce((reduced, key) => {\n    // @ts-ignore\n    reduced[key] = {\n      get() {\n        return useStore(this.$pinia)[keysOrMapper[key]];\n      },\n\n      set(value) {\n        // it's easier to type it here as any\n        return useStore(this.$pinia)[keysOrMapper[key]] = value;\n      }\n\n    };\n    return reduced;\n  }, {});\n}\n/**\n * Creates an object of references with all the state, getters, and plugin-added\n * state properties of the store. Similar to `toRefs()` but specifically\n * designed for Pinia stores so methods and non reactive properties are\n * completely ignored.\n *\n * @param store - store to extract the refs from\n */\n\n\nfunction storeToRefs(store) {\n  // See https://github.com/vuejs/pinia/issues/852\n  // It's easier to just use toRefs() even if it includes more stuff\n  if (isVue2) {\n    // @ts-expect-error: toRefs include methods and others\n    return toRefs(store);\n  } else {\n    store = toRaw(store);\n    const refs = {};\n\n    for (const key in store) {\n      const value = store[key];\n\n      if (isRef(value) || isReactive(value)) {\n        // @ts-expect-error: the key is state or getter\n        refs[key] = // ---\n        toRef(store, key);\n      }\n    }\n\n    return refs;\n  }\n}\n/**\n * Vue 2 Plugin that must be installed for pinia to work. Note **you don't need\n * this plugin if you are using Nuxt.js**. Use the `buildModule` instead:\n * https://pinia.vuejs.org/ssr/nuxt.html.\n *\n * @example\n * ```js\n * import Vue from 'vue'\n * import { PiniaVuePlugin, createPinia } from 'pinia'\n *\n * Vue.use(PiniaVuePlugin)\n * const pinia = createPinia()\n *\n * new Vue({\n *   el: '#app',\n *   // ...\n *   pinia,\n * })\n * ```\n *\n * @param _Vue - `Vue` imported from 'vue'.\n */\n\n\nconst PiniaVuePlugin = function (_Vue) {\n  // Equivalent of\n  // app.config.globalProperties.$pinia = pinia\n  _Vue.mixin({\n    beforeCreate() {\n      const options = this.$options;\n\n      if (options.pinia) {\n        const pinia = options.pinia; // HACK: taken from provide(): https://github.com/vuejs/composition-api/blob/main/src/apis/inject.ts#L31\n\n        /* istanbul ignore else */\n\n        if (!this._provided) {\n          const provideCache = {};\n          Object.defineProperty(this, '_provided', {\n            get: () => provideCache,\n            set: v => Object.assign(provideCache, v)\n          });\n        }\n\n        this._provided[piniaSymbol] = pinia; // propagate the pinia instance in an SSR friendly way\n        // avoid adding it to nuxt twice\n\n        /* istanbul ignore else */\n\n        if (!this.$pinia) {\n          this.$pinia = pinia;\n        }\n\n        pinia._a = this;\n\n        if (IS_CLIENT) {\n          // this allows calling useStore() outside of a component setup after\n          // installing pinia's plugin\n          setActivePinia(pinia);\n        }\n\n        if (USE_DEVTOOLS) {\n          registerPiniaDevtools(pinia._a, pinia);\n        }\n      } else if (!this.$pinia && options.parent && options.parent.$pinia) {\n        this.$pinia = options.parent.$pinia;\n      }\n    },\n\n    destroyed() {\n      delete this._pStores;\n    }\n\n  });\n};\n\nexport { MutationType, PiniaVuePlugin, acceptHMRUpdate, createPinia, defineStore, getActivePinia, mapActions, mapGetters, mapState, mapStores, mapWritableState, setActivePinia, setMapStoreSuffix, skipHydrate, storeToRefs };","map":{"version":3,"names":["getCurrentInstance","inject","toRaw","watch","unref","markRaw","effectScope","ref","isVue2","isRef","isReactive","set","getCurrentScope","onScopeDispose","reactive","toRef","del","nextTick","computed","toRefs","setupDevtoolsPlugin","activePinia","setActivePinia","pinia","getActivePinia","piniaSymbol","process","env","NODE_ENV","Symbol","isPlainObject","o","Object","prototype","toString","call","toJSON","MutationType","IS_CLIENT","window","USE_DEVTOOLS","__VUE_PROD_DEVTOOLS__","_global","self","global","globalThis","HTMLElement","bom","blob","autoBom","test","type","Blob","String","fromCharCode","download","url","name","opts","xhr","XMLHttpRequest","open","responseType","onload","saveAs","response","onerror","console","error","send","corsEnabled","e","status","click","node","dispatchEvent","MouseEvent","evt","document","createEvent","initMouseEvent","_navigator","navigator","userAgent","isMacOSWebView","HTMLAnchorElement","downloadSaveAs","msSaveAs","fileSaverSaveAs","a","createElement","rel","href","origin","location","target","URL","createObjectURL","setTimeout","revokeObjectURL","msSaveOrOpenBlob","popup","title","body","innerText","force","isSafari","isChromeIOS","FileReader","reader","onloadend","result","Error","replace","assign","readAsDataURL","toastMessage","message","piniaMessage","__VUE_DEVTOOLS_TOAST__","warn","log","isPinia","checkClipboardAccess","checkNotFocusedError","toLowerCase","includes","actionGlobalCopyState","clipboard","writeText","JSON","stringify","state","value","actionGlobalPasteState","parse","readText","actionGlobalSaveState","fileInput","getFileOpener","accept","openFile","Promise","resolve","reject","onchange","files","file","item","text","oncancel","actionGlobalOpenStateFile","formatDisplay","display","_custom","PINIA_ROOT_LABEL","PINIA_ROOT_ID","formatStoreForInspectorTree","store","id","label","$id","formatStoreForInspectorState","storeNames","Array","from","_s","keys","storeMap","map","storeId","editable","key","getters","filter","get","_getters","reduce","$state","length","getterName","_customProperties","size","customProperties","formatEventData","events","isArray","data","event","push","operations","oldValue","newValue","operation","formatMutationType","direct","patchFunction","patchObject","isTimelineActive","componentStateTypes","MUTATIONS_LAYER_ID","INSPECTOR_ID","getStoreType","registerPiniaDevtools","app","logo","packageName","homepage","api","now","addTimelineLayer","color","addInspector","icon","treeFilterPlaceholder","actions","action","tooltip","sendInspectorTree","sendInspectorState","nodeActions","nodeId","_isOptionsAPI","$reset","on","inspectComponent","payload","ctx","proxy","componentInstance","_pStores","piniaStores","values","forEach","instanceData","getInspectorTree","inspectorId","stores","concat","rootNodes","getInspectorState","inspectedStore","editInspectorState","path","has","unshift","editComponentState","startsWith","addStoreToDevtools","settings","logStoreChanges","defaultValue","bind","Date","$onAction","after","onError","args","groupId","runningActionId","addTimelineEvent","layerId","time","subtitle","activeAction","undefined","logType","notifyComponentUpdate","deep","$subscribe","eventData","detached","flush","hotUpdate","_hotUpdate","newStore","info","$dispose","getSettings","patchActionForGrouping","actionNames","storeActions","actionName","_actionId","trackedStore","Proxy","Reflect","apply","arguments","devtoolsPlugin","options","originalHotUpdate","_hmrPayload","createPinia","scope","run","_p","toBeInstalled","install","_a","provide","config","globalProperties","$pinia","plugin","use","_e","Map","isUseStore","fn","newState","oldState","subPatch","targetValue","acceptHMRUpdate","initialUseStore","hot","newModule","_pinia","exportName","useStore","invalidate","existingStore","noop","addSubscription","subscriptions","callback","onCleanup","removeSubscription","idx","indexOf","splice","triggerSubscriptions","slice","mergeReactiveObjects","patchToApply","Set","add","hasOwnProperty","skipHydrateSymbol","skipHydrateMap","WeakMap","skipHydrate","obj","defineProperty","shouldHydrate","isComputed","effect","createOptionsStore","initialState","setup","localState","computedGetters","_r","createSetupStore","$patch","isOptionsStore","optionsForPlugin","active","$subscribeOptions","onTrigger","isListening","debuggerEvents","_hotUpdating","isSyncListening","actionSubscriptions","hotState","activeListener","partialStateOrMutator","subscriptionMutation","myListenerId","then","stop","delete","wrapAction","afterCallbackList","onErrorCallbackList","ret","catch","partialStore","stopWatcher","setupStore","prop","actionValue","stateKey","newStateTarget","oldStateSource","getter","getterValue","nonEnumerable","writable","configurable","enumerable","p","extender","extensions","constructor","hydrate","defineStore","idOrOptions","setupOptions","isSetupStore","currentInstance","_testing","hotId","vm","cache","mapStoreSuffix","setMapStoreSuffix","suffix","mapStores","reduced","mapState","keysOrMapper","storeKey","mapGetters","mapActions","mapWritableState","storeToRefs","refs","PiniaVuePlugin","_Vue","mixin","beforeCreate","$options","_provided","provideCache","v","parent","destroyed"],"sources":["F:/adminDeal/node_modules/pinia/dist/pinia.mjs"],"sourcesContent":["/*!\n  * pinia v2.0.28\n  * (c) 2022 Eduardo San Martin Morote\n  * @license MIT\n  */\nimport { getCurrentInstance, inject, toRaw, watch, unref, markRaw, effectScope, ref, isVue2, isRef, isReactive, set, getCurrentScope, onScopeDispose, reactive, toRef, del, nextTick, computed, toRefs } from 'vue-demi';\nimport { setupDevtoolsPlugin } from '@vue/devtools-api';\n\n/**\n * setActivePinia must be called to handle SSR at the top of functions like\n * `fetch`, `setup`, `serverPrefetch` and others\n */\nlet activePinia;\n/**\n * Sets or unsets the active pinia. Used in SSR and internally when calling\n * actions and getters\n *\n * @param pinia - Pinia instance\n */\nconst setActivePinia = (pinia) => (activePinia = pinia);\n/**\n * Get the currently active pinia if there is any.\n */\nconst getActivePinia = () => (getCurrentInstance() && inject(piniaSymbol)) || activePinia;\nconst piniaSymbol = ((process.env.NODE_ENV !== 'production') ? Symbol('pinia') : /* istanbul ignore next */ Symbol());\n\nfunction isPlainObject(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\no) {\n    return (o &&\n        typeof o === 'object' &&\n        Object.prototype.toString.call(o) === '[object Object]' &&\n        typeof o.toJSON !== 'function');\n}\n// type DeepReadonly<T> = { readonly [P in keyof T]: DeepReadonly<T[P]> }\n// TODO: can we change these to numbers?\n/**\n * Possible types for SubscriptionCallback\n */\nvar MutationType;\n(function (MutationType) {\n    /**\n     * Direct mutation of the state:\n     *\n     * - `store.name = 'new name'`\n     * - `store.$state.name = 'new name'`\n     * - `store.list.push('new item')`\n     */\n    MutationType[\"direct\"] = \"direct\";\n    /**\n     * Mutated the state with `$patch` and an object\n     *\n     * - `store.$patch({ name: 'newName' })`\n     */\n    MutationType[\"patchObject\"] = \"patch object\";\n    /**\n     * Mutated the state with `$patch` and a function\n     *\n     * - `store.$patch(state => state.name = 'newName')`\n     */\n    MutationType[\"patchFunction\"] = \"patch function\";\n    // maybe reset? for $state = {} and $reset\n})(MutationType || (MutationType = {}));\n\nconst IS_CLIENT = typeof window !== 'undefined';\n/**\n * Should we add the devtools plugins.\n * - only if dev mode or forced through the prod devtools flag\n * - not in test\n * - only if window exists (could change in the future)\n */\nconst USE_DEVTOOLS = ((process.env.NODE_ENV !== 'production') || (typeof __VUE_PROD_DEVTOOLS__ !== 'undefined' && __VUE_PROD_DEVTOOLS__)) && !(process.env.NODE_ENV === 'test') && IS_CLIENT;\n\n/*\n * FileSaver.js A saveAs() FileSaver implementation.\n *\n * Originally by Eli Grey, adapted as an ESM module by Eduardo San Martin\n * Morote.\n *\n * License : MIT\n */\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nconst _global = /*#__PURE__*/ (() => typeof window === 'object' && window.window === window\n    ? window\n    : typeof self === 'object' && self.self === self\n        ? self\n        : typeof global === 'object' && global.global === global\n            ? global\n            : typeof globalThis === 'object'\n                ? globalThis\n                : { HTMLElement: null })();\nfunction bom(blob, { autoBom = false } = {}) {\n    // prepend BOM for UTF-8 XML and text/* types (including HTML)\n    // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n    if (autoBom &&\n        /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n        return new Blob([String.fromCharCode(0xfeff), blob], { type: blob.type });\n    }\n    return blob;\n}\nfunction download(url, name, opts) {\n    const xhr = new XMLHttpRequest();\n    xhr.open('GET', url);\n    xhr.responseType = 'blob';\n    xhr.onload = function () {\n        saveAs(xhr.response, name, opts);\n    };\n    xhr.onerror = function () {\n        console.error('could not download file');\n    };\n    xhr.send();\n}\nfunction corsEnabled(url) {\n    const xhr = new XMLHttpRequest();\n    // use sync to avoid popup blocker\n    xhr.open('HEAD', url, false);\n    try {\n        xhr.send();\n    }\n    catch (e) { }\n    return xhr.status >= 200 && xhr.status <= 299;\n}\n// `a.click()` doesn't work for all browsers (#465)\nfunction click(node) {\n    try {\n        node.dispatchEvent(new MouseEvent('click'));\n    }\n    catch (e) {\n        const evt = document.createEvent('MouseEvents');\n        evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80, 20, false, false, false, false, 0, null);\n        node.dispatchEvent(evt);\n    }\n}\nconst _navigator = \n typeof navigator === 'object' ? navigator : { userAgent: '' };\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nconst isMacOSWebView = /*#__PURE__*/ (() => /Macintosh/.test(_navigator.userAgent) &&\n    /AppleWebKit/.test(_navigator.userAgent) &&\n    !/Safari/.test(_navigator.userAgent))();\nconst saveAs = !IS_CLIENT\n    ? () => { } // noop\n    : // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView or mini program\n        typeof HTMLAnchorElement !== 'undefined' &&\n            'download' in HTMLAnchorElement.prototype &&\n            !isMacOSWebView\n            ? downloadSaveAs\n            : // Use msSaveOrOpenBlob as a second approach\n                'msSaveOrOpenBlob' in _navigator\n                    ? msSaveAs\n                    : // Fallback to using FileReader and a popup\n                        fileSaverSaveAs;\nfunction downloadSaveAs(blob, name = 'download', opts) {\n    const a = document.createElement('a');\n    a.download = name;\n    a.rel = 'noopener'; // tabnabbing\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n    if (typeof blob === 'string') {\n        // Support regular links\n        a.href = blob;\n        if (a.origin !== location.origin) {\n            if (corsEnabled(a.href)) {\n                download(blob, name, opts);\n            }\n            else {\n                a.target = '_blank';\n                click(a);\n            }\n        }\n        else {\n            click(a);\n        }\n    }\n    else {\n        // Support blobs\n        a.href = URL.createObjectURL(blob);\n        setTimeout(function () {\n            URL.revokeObjectURL(a.href);\n        }, 4e4); // 40s\n        setTimeout(function () {\n            click(a);\n        }, 0);\n    }\n}\nfunction msSaveAs(blob, name = 'download', opts) {\n    if (typeof blob === 'string') {\n        if (corsEnabled(blob)) {\n            download(blob, name, opts);\n        }\n        else {\n            const a = document.createElement('a');\n            a.href = blob;\n            a.target = '_blank';\n            setTimeout(function () {\n                click(a);\n            });\n        }\n    }\n    else {\n        // @ts-ignore: works on windows\n        navigator.msSaveOrOpenBlob(bom(blob, opts), name);\n    }\n}\nfunction fileSaverSaveAs(blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank');\n    if (popup) {\n        popup.document.title = popup.document.body.innerText = 'downloading...';\n    }\n    if (typeof blob === 'string')\n        return download(blob, name, opts);\n    const force = blob.type === 'application/octet-stream';\n    const isSafari = /constructor/i.test(String(_global.HTMLElement)) || 'safari' in _global;\n    const isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent);\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) &&\n        typeof FileReader !== 'undefined') {\n        // Safari doesn't allow downloading of blob URLs\n        const reader = new FileReader();\n        reader.onloadend = function () {\n            let url = reader.result;\n            if (typeof url !== 'string') {\n                popup = null;\n                throw new Error('Wrong reader.result type');\n            }\n            url = isChromeIOS\n                ? url\n                : url.replace(/^data:[^;]*;/, 'data:attachment/file;');\n            if (popup) {\n                popup.location.href = url;\n            }\n            else {\n                location.assign(url);\n            }\n            popup = null; // reverse-tabnabbing #460\n        };\n        reader.readAsDataURL(blob);\n    }\n    else {\n        const url = URL.createObjectURL(blob);\n        if (popup)\n            popup.location.assign(url);\n        else\n            location.href = url;\n        popup = null; // reverse-tabnabbing #460\n        setTimeout(function () {\n            URL.revokeObjectURL(url);\n        }, 4e4); // 40s\n    }\n}\n\n/**\n * Shows a toast or console.log\n *\n * @param message - message to log\n * @param type - different color of the tooltip\n */\nfunction toastMessage(message, type) {\n    const piniaMessage = 'üçç ' + message;\n    if (typeof __VUE_DEVTOOLS_TOAST__ === 'function') {\n        __VUE_DEVTOOLS_TOAST__(piniaMessage, type);\n    }\n    else if (type === 'error') {\n        console.error(piniaMessage);\n    }\n    else if (type === 'warn') {\n        console.warn(piniaMessage);\n    }\n    else {\n        console.log(piniaMessage);\n    }\n}\nfunction isPinia(o) {\n    return '_a' in o && 'install' in o;\n}\n\nfunction checkClipboardAccess() {\n    if (!('clipboard' in navigator)) {\n        toastMessage(`Your browser doesn't support the Clipboard API`, 'error');\n        return true;\n    }\n}\nfunction checkNotFocusedError(error) {\n    if (error instanceof Error &&\n        error.message.toLowerCase().includes('document is not focused')) {\n        toastMessage('You need to activate the \"Emulate a focused page\" setting in the \"Rendering\" panel of devtools.', 'warn');\n        return true;\n    }\n    return false;\n}\nasync function actionGlobalCopyState(pinia) {\n    if (checkClipboardAccess())\n        return;\n    try {\n        await navigator.clipboard.writeText(JSON.stringify(pinia.state.value));\n        toastMessage('Global state copied to clipboard.');\n    }\n    catch (error) {\n        if (checkNotFocusedError(error))\n            return;\n        toastMessage(`Failed to serialize the state. Check the console for more details.`, 'error');\n        console.error(error);\n    }\n}\nasync function actionGlobalPasteState(pinia) {\n    if (checkClipboardAccess())\n        return;\n    try {\n        pinia.state.value = JSON.parse(await navigator.clipboard.readText());\n        toastMessage('Global state pasted from clipboard.');\n    }\n    catch (error) {\n        if (checkNotFocusedError(error))\n            return;\n        toastMessage(`Failed to deserialize the state from clipboard. Check the console for more details.`, 'error');\n        console.error(error);\n    }\n}\nasync function actionGlobalSaveState(pinia) {\n    try {\n        saveAs(new Blob([JSON.stringify(pinia.state.value)], {\n            type: 'text/plain;charset=utf-8',\n        }), 'pinia-state.json');\n    }\n    catch (error) {\n        toastMessage(`Failed to export the state as JSON. Check the console for more details.`, 'error');\n        console.error(error);\n    }\n}\nlet fileInput;\nfunction getFileOpener() {\n    if (!fileInput) {\n        fileInput = document.createElement('input');\n        fileInput.type = 'file';\n        fileInput.accept = '.json';\n    }\n    function openFile() {\n        return new Promise((resolve, reject) => {\n            fileInput.onchange = async () => {\n                const files = fileInput.files;\n                if (!files)\n                    return resolve(null);\n                const file = files.item(0);\n                if (!file)\n                    return resolve(null);\n                return resolve({ text: await file.text(), file });\n            };\n            // @ts-ignore: TODO: changed from 4.3 to 4.4\n            fileInput.oncancel = () => resolve(null);\n            fileInput.onerror = reject;\n            fileInput.click();\n        });\n    }\n    return openFile;\n}\nasync function actionGlobalOpenStateFile(pinia) {\n    try {\n        const open = await getFileOpener();\n        const result = await open();\n        if (!result)\n            return;\n        const { text, file } = result;\n        pinia.state.value = JSON.parse(text);\n        toastMessage(`Global state imported from \"${file.name}\".`);\n    }\n    catch (error) {\n        toastMessage(`Failed to export the state as JSON. Check the console for more details.`, 'error');\n        console.error(error);\n    }\n}\n\nfunction formatDisplay(display) {\n    return {\n        _custom: {\n            display,\n        },\n    };\n}\nconst PINIA_ROOT_LABEL = 'üçç Pinia (root)';\nconst PINIA_ROOT_ID = '_root';\nfunction formatStoreForInspectorTree(store) {\n    return isPinia(store)\n        ? {\n            id: PINIA_ROOT_ID,\n            label: PINIA_ROOT_LABEL,\n        }\n        : {\n            id: store.$id,\n            label: store.$id,\n        };\n}\nfunction formatStoreForInspectorState(store) {\n    if (isPinia(store)) {\n        const storeNames = Array.from(store._s.keys());\n        const storeMap = store._s;\n        const state = {\n            state: storeNames.map((storeId) => ({\n                editable: true,\n                key: storeId,\n                value: store.state.value[storeId],\n            })),\n            getters: storeNames\n                .filter((id) => storeMap.get(id)._getters)\n                .map((id) => {\n                const store = storeMap.get(id);\n                return {\n                    editable: false,\n                    key: id,\n                    value: store._getters.reduce((getters, key) => {\n                        getters[key] = store[key];\n                        return getters;\n                    }, {}),\n                };\n            }),\n        };\n        return state;\n    }\n    const state = {\n        state: Object.keys(store.$state).map((key) => ({\n            editable: true,\n            key,\n            value: store.$state[key],\n        })),\n    };\n    // avoid adding empty getters\n    if (store._getters && store._getters.length) {\n        state.getters = store._getters.map((getterName) => ({\n            editable: false,\n            key: getterName,\n            value: store[getterName],\n        }));\n    }\n    if (store._customProperties.size) {\n        state.customProperties = Array.from(store._customProperties).map((key) => ({\n            editable: true,\n            key,\n            value: store[key],\n        }));\n    }\n    return state;\n}\nfunction formatEventData(events) {\n    if (!events)\n        return {};\n    if (Array.isArray(events)) {\n        // TODO: handle add and delete for arrays and objects\n        return events.reduce((data, event) => {\n            data.keys.push(event.key);\n            data.operations.push(event.type);\n            data.oldValue[event.key] = event.oldValue;\n            data.newValue[event.key] = event.newValue;\n            return data;\n        }, {\n            oldValue: {},\n            keys: [],\n            operations: [],\n            newValue: {},\n        });\n    }\n    else {\n        return {\n            operation: formatDisplay(events.type),\n            key: formatDisplay(events.key),\n            oldValue: events.oldValue,\n            newValue: events.newValue,\n        };\n    }\n}\nfunction formatMutationType(type) {\n    switch (type) {\n        case MutationType.direct:\n            return 'mutation';\n        case MutationType.patchFunction:\n            return '$patch';\n        case MutationType.patchObject:\n            return '$patch';\n        default:\n            return 'unknown';\n    }\n}\n\n// timeline can be paused when directly changing the state\nlet isTimelineActive = true;\nconst componentStateTypes = [];\nconst MUTATIONS_LAYER_ID = 'pinia:mutations';\nconst INSPECTOR_ID = 'pinia';\n/**\n * Gets the displayed name of a store in devtools\n *\n * @param id - id of the store\n * @returns a formatted string\n */\nconst getStoreType = (id) => 'üçç ' + id;\n/**\n * Add the pinia plugin without any store. Allows displaying a Pinia plugin tab\n * as soon as it is added to the application.\n *\n * @param app - Vue application\n * @param pinia - pinia instance\n */\nfunction registerPiniaDevtools(app, pinia) {\n    setupDevtoolsPlugin({\n        id: 'dev.esm.pinia',\n        label: 'Pinia üçç',\n        logo: 'https://pinia.vuejs.org/logo.svg',\n        packageName: 'pinia',\n        homepage: 'https://pinia.vuejs.org',\n        componentStateTypes,\n        app,\n    }, (api) => {\n        if (typeof api.now !== 'function') {\n            toastMessage('You seem to be using an outdated version of Vue Devtools. Are you still using the Beta release instead of the stable one? You can find the links at https://devtools.vuejs.org/guide/installation.html.');\n        }\n        api.addTimelineLayer({\n            id: MUTATIONS_LAYER_ID,\n            label: `Pinia üçç`,\n            color: 0xe5df88,\n        });\n        api.addInspector({\n            id: INSPECTOR_ID,\n            label: 'Pinia üçç',\n            icon: 'storage',\n            treeFilterPlaceholder: 'Search stores',\n            actions: [\n                {\n                    icon: 'content_copy',\n                    action: () => {\n                        actionGlobalCopyState(pinia);\n                    },\n                    tooltip: 'Serialize and copy the state',\n                },\n                {\n                    icon: 'content_paste',\n                    action: async () => {\n                        await actionGlobalPasteState(pinia);\n                        api.sendInspectorTree(INSPECTOR_ID);\n                        api.sendInspectorState(INSPECTOR_ID);\n                    },\n                    tooltip: 'Replace the state with the content of your clipboard',\n                },\n                {\n                    icon: 'save',\n                    action: () => {\n                        actionGlobalSaveState(pinia);\n                    },\n                    tooltip: 'Save the state as a JSON file',\n                },\n                {\n                    icon: 'folder_open',\n                    action: async () => {\n                        await actionGlobalOpenStateFile(pinia);\n                        api.sendInspectorTree(INSPECTOR_ID);\n                        api.sendInspectorState(INSPECTOR_ID);\n                    },\n                    tooltip: 'Import the state from a JSON file',\n                },\n            ],\n            nodeActions: [\n                {\n                    icon: 'restore',\n                    tooltip: 'Reset the state (option store only)',\n                    action: (nodeId) => {\n                        const store = pinia._s.get(nodeId);\n                        if (!store) {\n                            toastMessage(`Cannot reset \"${nodeId}\" store because it wasn't found.`, 'warn');\n                        }\n                        else if (!store._isOptionsAPI) {\n                            toastMessage(`Cannot reset \"${nodeId}\" store because it's a setup store.`, 'warn');\n                        }\n                        else {\n                            store.$reset();\n                            toastMessage(`Store \"${nodeId}\" reset.`);\n                        }\n                    },\n                },\n            ],\n        });\n        api.on.inspectComponent((payload, ctx) => {\n            const proxy = (payload.componentInstance &&\n                payload.componentInstance.proxy);\n            if (proxy && proxy._pStores) {\n                const piniaStores = payload.componentInstance.proxy._pStores;\n                Object.values(piniaStores).forEach((store) => {\n                    payload.instanceData.state.push({\n                        type: getStoreType(store.$id),\n                        key: 'state',\n                        editable: true,\n                        value: store._isOptionsAPI\n                            ? {\n                                _custom: {\n                                    value: toRaw(store.$state),\n                                    actions: [\n                                        {\n                                            icon: 'restore',\n                                            tooltip: 'Reset the state of this store',\n                                            action: () => store.$reset(),\n                                        },\n                                    ],\n                                },\n                            }\n                            : // NOTE: workaround to unwrap transferred refs\n                                Object.keys(store.$state).reduce((state, key) => {\n                                    state[key] = store.$state[key];\n                                    return state;\n                                }, {}),\n                    });\n                    if (store._getters && store._getters.length) {\n                        payload.instanceData.state.push({\n                            type: getStoreType(store.$id),\n                            key: 'getters',\n                            editable: false,\n                            value: store._getters.reduce((getters, key) => {\n                                try {\n                                    getters[key] = store[key];\n                                }\n                                catch (error) {\n                                    // @ts-expect-error: we just want to show it in devtools\n                                    getters[key] = error;\n                                }\n                                return getters;\n                            }, {}),\n                        });\n                    }\n                });\n            }\n        });\n        api.on.getInspectorTree((payload) => {\n            if (payload.app === app && payload.inspectorId === INSPECTOR_ID) {\n                let stores = [pinia];\n                stores = stores.concat(Array.from(pinia._s.values()));\n                payload.rootNodes = (payload.filter\n                    ? stores.filter((store) => '$id' in store\n                        ? store.$id\n                            .toLowerCase()\n                            .includes(payload.filter.toLowerCase())\n                        : PINIA_ROOT_LABEL.toLowerCase().includes(payload.filter.toLowerCase()))\n                    : stores).map(formatStoreForInspectorTree);\n            }\n        });\n        api.on.getInspectorState((payload) => {\n            if (payload.app === app && payload.inspectorId === INSPECTOR_ID) {\n                const inspectedStore = payload.nodeId === PINIA_ROOT_ID\n                    ? pinia\n                    : pinia._s.get(payload.nodeId);\n                if (!inspectedStore) {\n                    // this could be the selected store restored for a different project\n                    // so it's better not to say anything here\n                    return;\n                }\n                if (inspectedStore) {\n                    payload.state = formatStoreForInspectorState(inspectedStore);\n                }\n            }\n        });\n        api.on.editInspectorState((payload, ctx) => {\n            if (payload.app === app && payload.inspectorId === INSPECTOR_ID) {\n                const inspectedStore = payload.nodeId === PINIA_ROOT_ID\n                    ? pinia\n                    : pinia._s.get(payload.nodeId);\n                if (!inspectedStore) {\n                    return toastMessage(`store \"${payload.nodeId}\" not found`, 'error');\n                }\n                const { path } = payload;\n                if (!isPinia(inspectedStore)) {\n                    // access only the state\n                    if (path.length !== 1 ||\n                        !inspectedStore._customProperties.has(path[0]) ||\n                        path[0] in inspectedStore.$state) {\n                        path.unshift('$state');\n                    }\n                }\n                else {\n                    // Root access, we can omit the `.value` because the devtools API does it for us\n                    path.unshift('state');\n                }\n                isTimelineActive = false;\n                payload.set(inspectedStore, path, payload.state.value);\n                isTimelineActive = true;\n            }\n        });\n        api.on.editComponentState((payload) => {\n            if (payload.type.startsWith('üçç')) {\n                const storeId = payload.type.replace(/^üçç\\s*/, '');\n                const store = pinia._s.get(storeId);\n                if (!store) {\n                    return toastMessage(`store \"${storeId}\" not found`, 'error');\n                }\n                const { path } = payload;\n                if (path[0] !== 'state') {\n                    return toastMessage(`Invalid path for store \"${storeId}\":\\n${path}\\nOnly state can be modified.`);\n                }\n                // rewrite the first entry to be able to directly set the state as\n                // well as any other path\n                path[0] = '$state';\n                isTimelineActive = false;\n                payload.set(store, path, payload.state.value);\n                isTimelineActive = true;\n            }\n        });\n    });\n}\nfunction addStoreToDevtools(app, store) {\n    if (!componentStateTypes.includes(getStoreType(store.$id))) {\n        componentStateTypes.push(getStoreType(store.$id));\n    }\n    setupDevtoolsPlugin({\n        id: 'dev.esm.pinia',\n        label: 'Pinia üçç',\n        logo: 'https://pinia.vuejs.org/logo.svg',\n        packageName: 'pinia',\n        homepage: 'https://pinia.vuejs.org',\n        componentStateTypes,\n        app,\n        settings: {\n            logStoreChanges: {\n                label: 'Notify about new/deleted stores',\n                type: 'boolean',\n                defaultValue: true,\n            },\n            // useEmojis: {\n            //   label: 'Use emojis in messages ‚ö°Ô∏è',\n            //   type: 'boolean',\n            //   defaultValue: true,\n            // },\n        },\n    }, (api) => {\n        // gracefully handle errors\n        const now = typeof api.now === 'function' ? api.now.bind(api) : Date.now;\n        store.$onAction(({ after, onError, name, args }) => {\n            const groupId = runningActionId++;\n            api.addTimelineEvent({\n                layerId: MUTATIONS_LAYER_ID,\n                event: {\n                    time: now(),\n                    title: 'üõ´ ' + name,\n                    subtitle: 'start',\n                    data: {\n                        store: formatDisplay(store.$id),\n                        action: formatDisplay(name),\n                        args,\n                    },\n                    groupId,\n                },\n            });\n            after((result) => {\n                activeAction = undefined;\n                api.addTimelineEvent({\n                    layerId: MUTATIONS_LAYER_ID,\n                    event: {\n                        time: now(),\n                        title: 'üõ¨ ' + name,\n                        subtitle: 'end',\n                        data: {\n                            store: formatDisplay(store.$id),\n                            action: formatDisplay(name),\n                            args,\n                            result,\n                        },\n                        groupId,\n                    },\n                });\n            });\n            onError((error) => {\n                activeAction = undefined;\n                api.addTimelineEvent({\n                    layerId: MUTATIONS_LAYER_ID,\n                    event: {\n                        time: now(),\n                        logType: 'error',\n                        title: 'üí• ' + name,\n                        subtitle: 'end',\n                        data: {\n                            store: formatDisplay(store.$id),\n                            action: formatDisplay(name),\n                            args,\n                            error,\n                        },\n                        groupId,\n                    },\n                });\n            });\n        }, true);\n        store._customProperties.forEach((name) => {\n            watch(() => unref(store[name]), (newValue, oldValue) => {\n                api.notifyComponentUpdate();\n                api.sendInspectorState(INSPECTOR_ID);\n                if (isTimelineActive) {\n                    api.addTimelineEvent({\n                        layerId: MUTATIONS_LAYER_ID,\n                        event: {\n                            time: now(),\n                            title: 'Change',\n                            subtitle: name,\n                            data: {\n                                newValue,\n                                oldValue,\n                            },\n                            groupId: activeAction,\n                        },\n                    });\n                }\n            }, { deep: true });\n        });\n        store.$subscribe(({ events, type }, state) => {\n            api.notifyComponentUpdate();\n            api.sendInspectorState(INSPECTOR_ID);\n            if (!isTimelineActive)\n                return;\n            // rootStore.state[store.id] = state\n            const eventData = {\n                time: now(),\n                title: formatMutationType(type),\n                data: {\n                    store: formatDisplay(store.$id),\n                    ...formatEventData(events),\n                },\n                groupId: activeAction,\n            };\n            // reset for the next mutation\n            activeAction = undefined;\n            if (type === MutationType.patchFunction) {\n                eventData.subtitle = '‚§µÔ∏è';\n            }\n            else if (type === MutationType.patchObject) {\n                eventData.subtitle = 'üß©';\n            }\n            else if (events && !Array.isArray(events)) {\n                eventData.subtitle = events.type;\n            }\n            if (events) {\n                eventData.data['rawEvent(s)'] = {\n                    _custom: {\n                        display: 'DebuggerEvent',\n                        type: 'object',\n                        tooltip: 'raw DebuggerEvent[]',\n                        value: events,\n                    },\n                };\n            }\n            api.addTimelineEvent({\n                layerId: MUTATIONS_LAYER_ID,\n                event: eventData,\n            });\n        }, { detached: true, flush: 'sync' });\n        const hotUpdate = store._hotUpdate;\n        store._hotUpdate = markRaw((newStore) => {\n            hotUpdate(newStore);\n            api.addTimelineEvent({\n                layerId: MUTATIONS_LAYER_ID,\n                event: {\n                    time: now(),\n                    title: 'üî• ' + store.$id,\n                    subtitle: 'HMR update',\n                    data: {\n                        store: formatDisplay(store.$id),\n                        info: formatDisplay(`HMR update`),\n                    },\n                },\n            });\n            // update the devtools too\n            api.notifyComponentUpdate();\n            api.sendInspectorTree(INSPECTOR_ID);\n            api.sendInspectorState(INSPECTOR_ID);\n        });\n        const { $dispose } = store;\n        store.$dispose = () => {\n            $dispose();\n            api.notifyComponentUpdate();\n            api.sendInspectorTree(INSPECTOR_ID);\n            api.sendInspectorState(INSPECTOR_ID);\n            api.getSettings().logStoreChanges &&\n                toastMessage(`Disposed \"${store.$id}\" store üóë`);\n        };\n        // trigger an update so it can display new registered stores\n        api.notifyComponentUpdate();\n        api.sendInspectorTree(INSPECTOR_ID);\n        api.sendInspectorState(INSPECTOR_ID);\n        api.getSettings().logStoreChanges &&\n            toastMessage(`\"${store.$id}\" store installed üÜï`);\n    });\n}\nlet runningActionId = 0;\nlet activeAction;\n/**\n * Patches a store to enable action grouping in devtools by wrapping the store with a Proxy that is passed as the\n * context of all actions, allowing us to set `runningAction` on each access and effectively associating any state\n * mutation to the action.\n *\n * @param store - store to patch\n * @param actionNames - list of actionst to patch\n */\nfunction patchActionForGrouping(store, actionNames) {\n    // original actions of the store as they are given by pinia. We are going to override them\n    const actions = actionNames.reduce((storeActions, actionName) => {\n        // use toRaw to avoid tracking #541\n        storeActions[actionName] = toRaw(store)[actionName];\n        return storeActions;\n    }, {});\n    for (const actionName in actions) {\n        store[actionName] = function () {\n            // setActivePinia(store._p)\n            // the running action id is incremented in a before action hook\n            const _actionId = runningActionId;\n            const trackedStore = new Proxy(store, {\n                get(...args) {\n                    activeAction = _actionId;\n                    return Reflect.get(...args);\n                },\n                set(...args) {\n                    activeAction = _actionId;\n                    return Reflect.set(...args);\n                },\n            });\n            return actions[actionName].apply(trackedStore, arguments);\n        };\n    }\n}\n/**\n * pinia.use(devtoolsPlugin)\n */\nfunction devtoolsPlugin({ app, store, options }) {\n    // HMR module\n    if (store.$id.startsWith('__hot:')) {\n        return;\n    }\n    // detect option api vs setup api\n    if (options.state) {\n        store._isOptionsAPI = true;\n    }\n    // only wrap actions in option-defined stores as this technique relies on\n    // wrapping the context of the action with a proxy\n    if (typeof options.state === 'function') {\n        patchActionForGrouping(\n        // @ts-expect-error: can cast the store...\n        store, Object.keys(options.actions));\n        const originalHotUpdate = store._hotUpdate;\n        // Upgrade the HMR to also update the new actions\n        toRaw(store)._hotUpdate = function (newStore) {\n            originalHotUpdate.apply(this, arguments);\n            patchActionForGrouping(store, Object.keys(newStore._hmrPayload.actions));\n        };\n    }\n    addStoreToDevtools(app, \n    // FIXME: is there a way to allow the assignment from Store<Id, S, G, A> to StoreGeneric?\n    store);\n}\n\n/**\n * Creates a Pinia instance to be used by the application\n */\nfunction createPinia() {\n    const scope = effectScope(true);\n    // NOTE: here we could check the window object for a state and directly set it\n    // if there is anything like it with Vue 3 SSR\n    const state = scope.run(() => ref({}));\n    let _p = [];\n    // plugins added before calling app.use(pinia)\n    let toBeInstalled = [];\n    const pinia = markRaw({\n        install(app) {\n            // this allows calling useStore() outside of a component setup after\n            // installing pinia's plugin\n            setActivePinia(pinia);\n            if (!isVue2) {\n                pinia._a = app;\n                app.provide(piniaSymbol, pinia);\n                app.config.globalProperties.$pinia = pinia;\n                /* istanbul ignore else */\n                if (USE_DEVTOOLS) {\n                    registerPiniaDevtools(app, pinia);\n                }\n                toBeInstalled.forEach((plugin) => _p.push(plugin));\n                toBeInstalled = [];\n            }\n        },\n        use(plugin) {\n            if (!this._a && !isVue2) {\n                toBeInstalled.push(plugin);\n            }\n            else {\n                _p.push(plugin);\n            }\n            return this;\n        },\n        _p,\n        // it's actually undefined here\n        // @ts-expect-error\n        _a: null,\n        _e: scope,\n        _s: new Map(),\n        state,\n    });\n    // pinia devtools rely on dev only features so they cannot be forced unless\n    // the dev build of Vue is used. Avoid old browsers like IE11.\n    if (USE_DEVTOOLS && typeof Proxy !== 'undefined') {\n        pinia.use(devtoolsPlugin);\n    }\n    return pinia;\n}\n\n/**\n * Checks if a function is a `StoreDefinition`.\n *\n * @param fn - object to test\n * @returns true if `fn` is a StoreDefinition\n */\nconst isUseStore = (fn) => {\n    return typeof fn === 'function' && typeof fn.$id === 'string';\n};\n/**\n * Mutates in place `newState` with `oldState` to _hot update_ it. It will\n * remove any key not existing in `newState` and recursively merge plain\n * objects.\n *\n * @param newState - new state object to be patched\n * @param oldState - old state that should be used to patch newState\n * @returns - newState\n */\nfunction patchObject(newState, oldState) {\n    // no need to go through symbols because they cannot be serialized anyway\n    for (const key in oldState) {\n        const subPatch = oldState[key];\n        // skip the whole sub tree\n        if (!(key in newState)) {\n            continue;\n        }\n        const targetValue = newState[key];\n        if (isPlainObject(targetValue) &&\n            isPlainObject(subPatch) &&\n            !isRef(subPatch) &&\n            !isReactive(subPatch)) {\n            newState[key] = patchObject(targetValue, subPatch);\n        }\n        else {\n            // objects are either a bit more complex (e.g. refs) or primitives, so we\n            // just set the whole thing\n            if (isVue2) {\n                set(newState, key, subPatch);\n            }\n            else {\n                newState[key] = subPatch;\n            }\n        }\n    }\n    return newState;\n}\n/**\n * Creates an _accept_ function to pass to `import.meta.hot` in Vite applications.\n *\n * @example\n * ```js\n * const useUser = defineStore(...)\n * if (import.meta.hot) {\n *   import.meta.hot.accept(acceptHMRUpdate(useUser, import.meta.hot))\n * }\n * ```\n *\n * @param initialUseStore - return of the defineStore to hot update\n * @param hot - `import.meta.hot`\n */\nfunction acceptHMRUpdate(initialUseStore, hot) {\n    // strip as much as possible from iife.prod\n    if (!(process.env.NODE_ENV !== 'production')) {\n        return () => { };\n    }\n    return (newModule) => {\n        const pinia = hot.data.pinia || initialUseStore._pinia;\n        if (!pinia) {\n            // this store is still not used\n            return;\n        }\n        // preserve the pinia instance across loads\n        hot.data.pinia = pinia;\n        // console.log('got data', newStore)\n        for (const exportName in newModule) {\n            const useStore = newModule[exportName];\n            // console.log('checking for', exportName)\n            if (isUseStore(useStore) && pinia._s.has(useStore.$id)) {\n                // console.log('Accepting update for', useStore.$id)\n                const id = useStore.$id;\n                if (id !== initialUseStore.$id) {\n                    console.warn(`The id of the store changed from \"${initialUseStore.$id}\" to \"${id}\". Reloading.`);\n                    // return import.meta.hot.invalidate()\n                    return hot.invalidate();\n                }\n                const existingStore = pinia._s.get(id);\n                if (!existingStore) {\n                    console.log(`[Pinia]: skipping hmr because store doesn't exist yet`);\n                    return;\n                }\n                useStore(pinia, existingStore);\n            }\n        }\n    };\n}\n\nconst noop = () => { };\nfunction addSubscription(subscriptions, callback, detached, onCleanup = noop) {\n    subscriptions.push(callback);\n    const removeSubscription = () => {\n        const idx = subscriptions.indexOf(callback);\n        if (idx > -1) {\n            subscriptions.splice(idx, 1);\n            onCleanup();\n        }\n    };\n    if (!detached && getCurrentScope()) {\n        onScopeDispose(removeSubscription);\n    }\n    return removeSubscription;\n}\nfunction triggerSubscriptions(subscriptions, ...args) {\n    subscriptions.slice().forEach((callback) => {\n        callback(...args);\n    });\n}\n\nfunction mergeReactiveObjects(target, patchToApply) {\n    // Handle Map instances\n    if (target instanceof Map && patchToApply instanceof Map) {\n        patchToApply.forEach((value, key) => target.set(key, value));\n    }\n    // Handle Set instances\n    if (target instanceof Set && patchToApply instanceof Set) {\n        patchToApply.forEach(target.add, target);\n    }\n    // no need to go through symbols because they cannot be serialized anyway\n    for (const key in patchToApply) {\n        if (!patchToApply.hasOwnProperty(key))\n            continue;\n        const subPatch = patchToApply[key];\n        const targetValue = target[key];\n        if (isPlainObject(targetValue) &&\n            isPlainObject(subPatch) &&\n            target.hasOwnProperty(key) &&\n            !isRef(subPatch) &&\n            !isReactive(subPatch)) {\n            // NOTE: here I wanted to warn about inconsistent types but it's not possible because in setup stores one might\n            // start the value of a property as a certain type e.g. a Map, and then for some reason, during SSR, change that\n            // to `undefined`. When trying to hydrate, we want to override the Map with `undefined`.\n            target[key] = mergeReactiveObjects(targetValue, subPatch);\n        }\n        else {\n            // @ts-expect-error: subPatch is a valid value\n            target[key] = subPatch;\n        }\n    }\n    return target;\n}\nconst skipHydrateSymbol = (process.env.NODE_ENV !== 'production')\n    ? Symbol('pinia:skipHydration')\n    : /* istanbul ignore next */ Symbol();\nconst skipHydrateMap = /*#__PURE__*/ new WeakMap();\n/**\n * Tells Pinia to skip the hydration process of a given object. This is useful in setup stores (only) when you return a\n * stateful object in the store but it isn't really state. e.g. returning a router instance in a setup store.\n *\n * @param obj - target object\n * @returns obj\n */\nfunction skipHydrate(obj) {\n    return isVue2\n        ? // in @vue/composition-api, the refs are sealed so defineProperty doesn't work...\n            /* istanbul ignore next */ skipHydrateMap.set(obj, 1) && obj\n        : Object.defineProperty(obj, skipHydrateSymbol, {});\n}\n/**\n * Returns whether a value should be hydrated\n *\n * @param obj - target variable\n * @returns true if `obj` should be hydrated\n */\nfunction shouldHydrate(obj) {\n    return isVue2\n        ? /* istanbul ignore next */ !skipHydrateMap.has(obj)\n        : !isPlainObject(obj) || !obj.hasOwnProperty(skipHydrateSymbol);\n}\nconst { assign } = Object;\nfunction isComputed(o) {\n    return !!(isRef(o) && o.effect);\n}\nfunction createOptionsStore(id, options, pinia, hot) {\n    const { state, actions, getters } = options;\n    const initialState = pinia.state.value[id];\n    let store;\n    function setup() {\n        if (!initialState && (!(process.env.NODE_ENV !== 'production') || !hot)) {\n            /* istanbul ignore if */\n            if (isVue2) {\n                set(pinia.state.value, id, state ? state() : {});\n            }\n            else {\n                pinia.state.value[id] = state ? state() : {};\n            }\n        }\n        // avoid creating a state in pinia.state.value\n        const localState = (process.env.NODE_ENV !== 'production') && hot\n            ? // use ref() to unwrap refs inside state TODO: check if this is still necessary\n                toRefs(ref(state ? state() : {}).value)\n            : toRefs(pinia.state.value[id]);\n        return assign(localState, actions, Object.keys(getters || {}).reduce((computedGetters, name) => {\n            if ((process.env.NODE_ENV !== 'production') && name in localState) {\n                console.warn(`[üçç]: A getter cannot have the same name as another state property. Rename one of them. Found with \"${name}\" in store \"${id}\".`);\n            }\n            computedGetters[name] = markRaw(computed(() => {\n                setActivePinia(pinia);\n                // it was created just before\n                const store = pinia._s.get(id);\n                // allow cross using stores\n                /* istanbul ignore next */\n                if (isVue2 && !store._r)\n                    return;\n                // @ts-expect-error\n                // return getters![name].call(context, context)\n                // TODO: avoid reading the getter while assigning with a global variable\n                return getters[name].call(store, store);\n            }));\n            return computedGetters;\n        }, {}));\n    }\n    store = createSetupStore(id, setup, options, pinia, hot, true);\n    store.$reset = function $reset() {\n        const newState = state ? state() : {};\n        // we use a patch to group all changes into one single subscription\n        this.$patch(($state) => {\n            assign($state, newState);\n        });\n    };\n    return store;\n}\nfunction createSetupStore($id, setup, options = {}, pinia, hot, isOptionsStore) {\n    let scope;\n    const optionsForPlugin = assign({ actions: {} }, options);\n    /* istanbul ignore if */\n    // @ts-expect-error: active is an internal property\n    if ((process.env.NODE_ENV !== 'production') && !pinia._e.active) {\n        throw new Error('Pinia destroyed');\n    }\n    // watcher options for $subscribe\n    const $subscribeOptions = {\n        deep: true,\n        // flush: 'post',\n    };\n    /* istanbul ignore else */\n    if ((process.env.NODE_ENV !== 'production') && !isVue2) {\n        $subscribeOptions.onTrigger = (event) => {\n            /* istanbul ignore else */\n            if (isListening) {\n                debuggerEvents = event;\n                // avoid triggering this while the store is being built and the state is being set in pinia\n            }\n            else if (isListening == false && !store._hotUpdating) {\n                // let patch send all the events together later\n                /* istanbul ignore else */\n                if (Array.isArray(debuggerEvents)) {\n                    debuggerEvents.push(event);\n                }\n                else {\n                    console.error('üçç debuggerEvents should be an array. This is most likely an internal Pinia bug.');\n                }\n            }\n        };\n    }\n    // internal state\n    let isListening; // set to true at the end\n    let isSyncListening; // set to true at the end\n    let subscriptions = markRaw([]);\n    let actionSubscriptions = markRaw([]);\n    let debuggerEvents;\n    const initialState = pinia.state.value[$id];\n    // avoid setting the state for option stores if it is set\n    // by the setup\n    if (!isOptionsStore && !initialState && (!(process.env.NODE_ENV !== 'production') || !hot)) {\n        /* istanbul ignore if */\n        if (isVue2) {\n            set(pinia.state.value, $id, {});\n        }\n        else {\n            pinia.state.value[$id] = {};\n        }\n    }\n    const hotState = ref({});\n    // avoid triggering too many listeners\n    // https://github.com/vuejs/pinia/issues/1129\n    let activeListener;\n    function $patch(partialStateOrMutator) {\n        let subscriptionMutation;\n        isListening = isSyncListening = false;\n        // reset the debugger events since patches are sync\n        /* istanbul ignore else */\n        if ((process.env.NODE_ENV !== 'production')) {\n            debuggerEvents = [];\n        }\n        if (typeof partialStateOrMutator === 'function') {\n            partialStateOrMutator(pinia.state.value[$id]);\n            subscriptionMutation = {\n                type: MutationType.patchFunction,\n                storeId: $id,\n                events: debuggerEvents,\n            };\n        }\n        else {\n            mergeReactiveObjects(pinia.state.value[$id], partialStateOrMutator);\n            subscriptionMutation = {\n                type: MutationType.patchObject,\n                payload: partialStateOrMutator,\n                storeId: $id,\n                events: debuggerEvents,\n            };\n        }\n        const myListenerId = (activeListener = Symbol());\n        nextTick().then(() => {\n            if (activeListener === myListenerId) {\n                isListening = true;\n            }\n        });\n        isSyncListening = true;\n        // because we paused the watcher, we need to manually call the subscriptions\n        triggerSubscriptions(subscriptions, subscriptionMutation, pinia.state.value[$id]);\n    }\n    /* istanbul ignore next */\n    const $reset = (process.env.NODE_ENV !== 'production')\n        ? () => {\n            throw new Error(`üçç: Store \"${$id}\" is built using the setup syntax and does not implement $reset().`);\n        }\n        : noop;\n    function $dispose() {\n        scope.stop();\n        subscriptions = [];\n        actionSubscriptions = [];\n        pinia._s.delete($id);\n    }\n    /**\n     * Wraps an action to handle subscriptions.\n     *\n     * @param name - name of the action\n     * @param action - action to wrap\n     * @returns a wrapped action to handle subscriptions\n     */\n    function wrapAction(name, action) {\n        return function () {\n            setActivePinia(pinia);\n            const args = Array.from(arguments);\n            const afterCallbackList = [];\n            const onErrorCallbackList = [];\n            function after(callback) {\n                afterCallbackList.push(callback);\n            }\n            function onError(callback) {\n                onErrorCallbackList.push(callback);\n            }\n            // @ts-expect-error\n            triggerSubscriptions(actionSubscriptions, {\n                args,\n                name,\n                store,\n                after,\n                onError,\n            });\n            let ret;\n            try {\n                ret = action.apply(this && this.$id === $id ? this : store, args);\n                // handle sync errors\n            }\n            catch (error) {\n                triggerSubscriptions(onErrorCallbackList, error);\n                throw error;\n            }\n            if (ret instanceof Promise) {\n                return ret\n                    .then((value) => {\n                    triggerSubscriptions(afterCallbackList, value);\n                    return value;\n                })\n                    .catch((error) => {\n                    triggerSubscriptions(onErrorCallbackList, error);\n                    return Promise.reject(error);\n                });\n            }\n            // allow the afterCallback to override the return value\n            triggerSubscriptions(afterCallbackList, ret);\n            return ret;\n        };\n    }\n    const _hmrPayload = /*#__PURE__*/ markRaw({\n        actions: {},\n        getters: {},\n        state: [],\n        hotState,\n    });\n    const partialStore = {\n        _p: pinia,\n        // _s: scope,\n        $id,\n        $onAction: addSubscription.bind(null, actionSubscriptions),\n        $patch,\n        $reset,\n        $subscribe(callback, options = {}) {\n            const removeSubscription = addSubscription(subscriptions, callback, options.detached, () => stopWatcher());\n            const stopWatcher = scope.run(() => watch(() => pinia.state.value[$id], (state) => {\n                if (options.flush === 'sync' ? isSyncListening : isListening) {\n                    callback({\n                        storeId: $id,\n                        type: MutationType.direct,\n                        events: debuggerEvents,\n                    }, state);\n                }\n            }, assign({}, $subscribeOptions, options)));\n            return removeSubscription;\n        },\n        $dispose,\n    };\n    /* istanbul ignore if */\n    if (isVue2) {\n        // start as non ready\n        partialStore._r = false;\n    }\n    const store = reactive((process.env.NODE_ENV !== 'production') || USE_DEVTOOLS\n        ? assign({\n            _hmrPayload,\n            _customProperties: markRaw(new Set()), // devtools custom properties\n        }, partialStore\n        // must be added later\n        // setupStore\n        )\n        : partialStore);\n    // store the partial store now so the setup of stores can instantiate each other before they are finished without\n    // creating infinite loops.\n    pinia._s.set($id, store);\n    // TODO: idea create skipSerialize that marks properties as non serializable and they are skipped\n    const setupStore = pinia._e.run(() => {\n        scope = effectScope();\n        return scope.run(() => setup());\n    });\n    // overwrite existing actions to support $onAction\n    for (const key in setupStore) {\n        const prop = setupStore[key];\n        if ((isRef(prop) && !isComputed(prop)) || isReactive(prop)) {\n            // mark it as a piece of state to be serialized\n            if ((process.env.NODE_ENV !== 'production') && hot) {\n                set(hotState.value, key, toRef(setupStore, key));\n                // createOptionStore directly sets the state in pinia.state.value so we\n                // can just skip that\n            }\n            else if (!isOptionsStore) {\n                // in setup stores we must hydrate the state and sync pinia state tree with the refs the user just created\n                if (initialState && shouldHydrate(prop)) {\n                    if (isRef(prop)) {\n                        prop.value = initialState[key];\n                    }\n                    else {\n                        // probably a reactive object, lets recursively assign\n                        // @ts-expect-error: prop is unknown\n                        mergeReactiveObjects(prop, initialState[key]);\n                    }\n                }\n                // transfer the ref to the pinia state to keep everything in sync\n                /* istanbul ignore if */\n                if (isVue2) {\n                    set(pinia.state.value[$id], key, prop);\n                }\n                else {\n                    pinia.state.value[$id][key] = prop;\n                }\n            }\n            /* istanbul ignore else */\n            if ((process.env.NODE_ENV !== 'production')) {\n                _hmrPayload.state.push(key);\n            }\n            // action\n        }\n        else if (typeof prop === 'function') {\n            // @ts-expect-error: we are overriding the function we avoid wrapping if\n            const actionValue = (process.env.NODE_ENV !== 'production') && hot ? prop : wrapAction(key, prop);\n            // this a hot module replacement store because the hotUpdate method needs\n            // to do it with the right context\n            /* istanbul ignore if */\n            if (isVue2) {\n                set(setupStore, key, actionValue);\n            }\n            else {\n                // @ts-expect-error\n                setupStore[key] = actionValue;\n            }\n            /* istanbul ignore else */\n            if ((process.env.NODE_ENV !== 'production')) {\n                _hmrPayload.actions[key] = prop;\n            }\n            // list actions so they can be used in plugins\n            // @ts-expect-error\n            optionsForPlugin.actions[key] = prop;\n        }\n        else if ((process.env.NODE_ENV !== 'production')) {\n            // add getters for devtools\n            if (isComputed(prop)) {\n                _hmrPayload.getters[key] = isOptionsStore\n                    ? // @ts-expect-error\n                        options.getters[key]\n                    : prop;\n                if (IS_CLIENT) {\n                    const getters = setupStore._getters ||\n                        // @ts-expect-error: same\n                        (setupStore._getters = markRaw([]));\n                    getters.push(key);\n                }\n            }\n        }\n    }\n    // add the state, getters, and action properties\n    /* istanbul ignore if */\n    if (isVue2) {\n        Object.keys(setupStore).forEach((key) => {\n            set(store, key, setupStore[key]);\n        });\n    }\n    else {\n        assign(store, setupStore);\n        // allows retrieving reactive objects with `storeToRefs()`. Must be called after assigning to the reactive object.\n        // Make `storeToRefs()` work with `reactive()` #799\n        assign(toRaw(store), setupStore);\n    }\n    // use this instead of a computed with setter to be able to create it anywhere\n    // without linking the computed lifespan to wherever the store is first\n    // created.\n    Object.defineProperty(store, '$state', {\n        get: () => ((process.env.NODE_ENV !== 'production') && hot ? hotState.value : pinia.state.value[$id]),\n        set: (state) => {\n            /* istanbul ignore if */\n            if ((process.env.NODE_ENV !== 'production') && hot) {\n                throw new Error('cannot set hotState');\n            }\n            $patch(($state) => {\n                assign($state, state);\n            });\n        },\n    });\n    // add the hotUpdate before plugins to allow them to override it\n    /* istanbul ignore else */\n    if ((process.env.NODE_ENV !== 'production')) {\n        store._hotUpdate = markRaw((newStore) => {\n            store._hotUpdating = true;\n            newStore._hmrPayload.state.forEach((stateKey) => {\n                if (stateKey in store.$state) {\n                    const newStateTarget = newStore.$state[stateKey];\n                    const oldStateSource = store.$state[stateKey];\n                    if (typeof newStateTarget === 'object' &&\n                        isPlainObject(newStateTarget) &&\n                        isPlainObject(oldStateSource)) {\n                        patchObject(newStateTarget, oldStateSource);\n                    }\n                    else {\n                        // transfer the ref\n                        newStore.$state[stateKey] = oldStateSource;\n                    }\n                }\n                // patch direct access properties to allow store.stateProperty to work as\n                // store.$state.stateProperty\n                set(store, stateKey, toRef(newStore.$state, stateKey));\n            });\n            // remove deleted state properties\n            Object.keys(store.$state).forEach((stateKey) => {\n                if (!(stateKey in newStore.$state)) {\n                    del(store, stateKey);\n                }\n            });\n            // avoid devtools logging this as a mutation\n            isListening = false;\n            isSyncListening = false;\n            pinia.state.value[$id] = toRef(newStore._hmrPayload, 'hotState');\n            isSyncListening = true;\n            nextTick().then(() => {\n                isListening = true;\n            });\n            for (const actionName in newStore._hmrPayload.actions) {\n                const action = newStore[actionName];\n                set(store, actionName, wrapAction(actionName, action));\n            }\n            // TODO: does this work in both setup and option store?\n            for (const getterName in newStore._hmrPayload.getters) {\n                const getter = newStore._hmrPayload.getters[getterName];\n                const getterValue = isOptionsStore\n                    ? // special handling of options api\n                        computed(() => {\n                            setActivePinia(pinia);\n                            return getter.call(store, store);\n                        })\n                    : getter;\n                set(store, getterName, getterValue);\n            }\n            // remove deleted getters\n            Object.keys(store._hmrPayload.getters).forEach((key) => {\n                if (!(key in newStore._hmrPayload.getters)) {\n                    del(store, key);\n                }\n            });\n            // remove old actions\n            Object.keys(store._hmrPayload.actions).forEach((key) => {\n                if (!(key in newStore._hmrPayload.actions)) {\n                    del(store, key);\n                }\n            });\n            // update the values used in devtools and to allow deleting new properties later on\n            store._hmrPayload = newStore._hmrPayload;\n            store._getters = newStore._getters;\n            store._hotUpdating = false;\n        });\n    }\n    if (USE_DEVTOOLS) {\n        const nonEnumerable = {\n            writable: true,\n            configurable: true,\n            // avoid warning on devtools trying to display this property\n            enumerable: false,\n        };\n        ['_p', '_hmrPayload', '_getters', '_customProperties'].forEach((p) => {\n            Object.defineProperty(store, p, {\n                value: store[p],\n                ...nonEnumerable,\n            });\n        });\n    }\n    /* istanbul ignore if */\n    if (isVue2) {\n        // mark the store as ready before plugins\n        store._r = true;\n    }\n    // apply all plugins\n    pinia._p.forEach((extender) => {\n        /* istanbul ignore else */\n        if (USE_DEVTOOLS) {\n            const extensions = scope.run(() => extender({\n                store,\n                app: pinia._a,\n                pinia,\n                options: optionsForPlugin,\n            }));\n            Object.keys(extensions || {}).forEach((key) => store._customProperties.add(key));\n            assign(store, extensions);\n        }\n        else {\n            assign(store, scope.run(() => extender({\n                store,\n                app: pinia._a,\n                pinia,\n                options: optionsForPlugin,\n            })));\n        }\n    });\n    if ((process.env.NODE_ENV !== 'production') &&\n        store.$state &&\n        typeof store.$state === 'object' &&\n        typeof store.$state.constructor === 'function' &&\n        !store.$state.constructor.toString().includes('[native code]')) {\n        console.warn(`[üçç]: The \"state\" must be a plain object. It cannot be\\n` +\n            `\\tstate: () => new MyClass()\\n` +\n            `Found in store \"${store.$id}\".`);\n    }\n    // only apply hydrate to option stores with an initial state in pinia\n    if (initialState &&\n        isOptionsStore &&\n        options.hydrate) {\n        options.hydrate(store.$state, initialState);\n    }\n    isListening = true;\n    isSyncListening = true;\n    return store;\n}\nfunction defineStore(\n// TODO: add proper types from above\nidOrOptions, setup, setupOptions) {\n    let id;\n    let options;\n    const isSetupStore = typeof setup === 'function';\n    if (typeof idOrOptions === 'string') {\n        id = idOrOptions;\n        // the option store setup will contain the actual options in this case\n        options = isSetupStore ? setupOptions : setup;\n    }\n    else {\n        options = idOrOptions;\n        id = idOrOptions.id;\n    }\n    function useStore(pinia, hot) {\n        const currentInstance = getCurrentInstance();\n        pinia =\n            // in test mode, ignore the argument provided as we can always retrieve a\n            // pinia instance with getActivePinia()\n            ((process.env.NODE_ENV === 'test') && activePinia && activePinia._testing ? null : pinia) ||\n                (currentInstance && inject(piniaSymbol, null));\n        if (pinia)\n            setActivePinia(pinia);\n        if ((process.env.NODE_ENV !== 'production') && !activePinia) {\n            throw new Error(`[üçç]: getActivePinia was called with no active Pinia. Did you forget to install pinia?\\n` +\n                `\\tconst pinia = createPinia()\\n` +\n                `\\tapp.use(pinia)\\n` +\n                `This will fail in production.`);\n        }\n        pinia = activePinia;\n        if (!pinia._s.has(id)) {\n            // creating the store registers it in `pinia._s`\n            if (isSetupStore) {\n                createSetupStore(id, setup, options, pinia);\n            }\n            else {\n                createOptionsStore(id, options, pinia);\n            }\n            /* istanbul ignore else */\n            if ((process.env.NODE_ENV !== 'production')) {\n                // @ts-expect-error: not the right inferred type\n                useStore._pinia = pinia;\n            }\n        }\n        const store = pinia._s.get(id);\n        if ((process.env.NODE_ENV !== 'production') && hot) {\n            const hotId = '__hot:' + id;\n            const newStore = isSetupStore\n                ? createSetupStore(hotId, setup, options, pinia, true)\n                : createOptionsStore(hotId, assign({}, options), pinia, true);\n            hot._hotUpdate(newStore);\n            // cleanup the state properties and the store from the cache\n            delete pinia.state.value[hotId];\n            pinia._s.delete(hotId);\n        }\n        // save stores in instances to access them devtools\n        if ((process.env.NODE_ENV !== 'production') &&\n            IS_CLIENT &&\n            currentInstance &&\n            currentInstance.proxy &&\n            // avoid adding stores that are just built for hot module replacement\n            !hot) {\n            const vm = currentInstance.proxy;\n            const cache = '_pStores' in vm ? vm._pStores : (vm._pStores = {});\n            cache[id] = store;\n        }\n        // StoreGeneric cannot be casted towards Store\n        return store;\n    }\n    useStore.$id = id;\n    return useStore;\n}\n\nlet mapStoreSuffix = 'Store';\n/**\n * Changes the suffix added by `mapStores()`. Can be set to an empty string.\n * Defaults to `\"Store\"`. Make sure to extend the MapStoresCustomization\n * interface if you are using TypeScript.\n *\n * @param suffix - new suffix\n */\nfunction setMapStoreSuffix(suffix // could be 'Store' but that would be annoying for JS\n) {\n    mapStoreSuffix = suffix;\n}\n/**\n * Allows using stores without the composition API (`setup()`) by generating an\n * object to be spread in the `computed` field of a component. It accepts a list\n * of store definitions.\n *\n * @example\n * ```js\n * export default {\n *   computed: {\n *     // other computed properties\n *     ...mapStores(useUserStore, useCartStore)\n *   },\n *\n *   created() {\n *     this.userStore // store with id \"user\"\n *     this.cartStore // store with id \"cart\"\n *   }\n * }\n * ```\n *\n * @param stores - list of stores to map to an object\n */\nfunction mapStores(...stores) {\n    if ((process.env.NODE_ENV !== 'production') && Array.isArray(stores[0])) {\n        console.warn(`[üçç]: Directly pass all stores to \"mapStores()\" without putting them in an array:\\n` +\n            `Replace\\n` +\n            `\\tmapStores([useAuthStore, useCartStore])\\n` +\n            `with\\n` +\n            `\\tmapStores(useAuthStore, useCartStore)\\n` +\n            `This will fail in production if not fixed.`);\n        stores = stores[0];\n    }\n    return stores.reduce((reduced, useStore) => {\n        // @ts-expect-error: $id is added by defineStore\n        reduced[useStore.$id + mapStoreSuffix] = function () {\n            return useStore(this.$pinia);\n        };\n        return reduced;\n    }, {});\n}\n/**\n * Allows using state and getters from one store without using the composition\n * API (`setup()`) by generating an object to be spread in the `computed` field\n * of a component.\n *\n * @param useStore - store to map from\n * @param keysOrMapper - array or object\n */\nfunction mapState(useStore, keysOrMapper) {\n    return Array.isArray(keysOrMapper)\n        ? keysOrMapper.reduce((reduced, key) => {\n            reduced[key] = function () {\n                return useStore(this.$pinia)[key];\n            };\n            return reduced;\n        }, {})\n        : Object.keys(keysOrMapper).reduce((reduced, key) => {\n            // @ts-expect-error\n            reduced[key] = function () {\n                const store = useStore(this.$pinia);\n                const storeKey = keysOrMapper[key];\n                // for some reason TS is unable to infer the type of storeKey to be a\n                // function\n                return typeof storeKey === 'function'\n                    ? storeKey.call(this, store)\n                    : store[storeKey];\n            };\n            return reduced;\n        }, {});\n}\n/**\n * Alias for `mapState()`. You should use `mapState()` instead.\n * @deprecated use `mapState()` instead.\n */\nconst mapGetters = mapState;\n/**\n * Allows directly using actions from your store without using the composition\n * API (`setup()`) by generating an object to be spread in the `methods` field\n * of a component.\n *\n * @param useStore - store to map from\n * @param keysOrMapper - array or object\n */\nfunction mapActions(useStore, keysOrMapper) {\n    return Array.isArray(keysOrMapper)\n        ? keysOrMapper.reduce((reduced, key) => {\n            // @ts-expect-error\n            reduced[key] = function (...args) {\n                return useStore(this.$pinia)[key](...args);\n            };\n            return reduced;\n        }, {})\n        : Object.keys(keysOrMapper).reduce((reduced, key) => {\n            // @ts-expect-error\n            reduced[key] = function (...args) {\n                return useStore(this.$pinia)[keysOrMapper[key]](...args);\n            };\n            return reduced;\n        }, {});\n}\n/**\n * Allows using state and getters from one store without using the composition\n * API (`setup()`) by generating an object to be spread in the `computed` field\n * of a component.\n *\n * @param useStore - store to map from\n * @param keysOrMapper - array or object\n */\nfunction mapWritableState(useStore, keysOrMapper) {\n    return Array.isArray(keysOrMapper)\n        ? keysOrMapper.reduce((reduced, key) => {\n            // @ts-ignore\n            reduced[key] = {\n                get() {\n                    return useStore(this.$pinia)[key];\n                },\n                set(value) {\n                    // it's easier to type it here as any\n                    return (useStore(this.$pinia)[key] = value);\n                },\n            };\n            return reduced;\n        }, {})\n        : Object.keys(keysOrMapper).reduce((reduced, key) => {\n            // @ts-ignore\n            reduced[key] = {\n                get() {\n                    return useStore(this.$pinia)[keysOrMapper[key]];\n                },\n                set(value) {\n                    // it's easier to type it here as any\n                    return (useStore(this.$pinia)[keysOrMapper[key]] = value);\n                },\n            };\n            return reduced;\n        }, {});\n}\n\n/**\n * Creates an object of references with all the state, getters, and plugin-added\n * state properties of the store. Similar to `toRefs()` but specifically\n * designed for Pinia stores so methods and non reactive properties are\n * completely ignored.\n *\n * @param store - store to extract the refs from\n */\nfunction storeToRefs(store) {\n    // See https://github.com/vuejs/pinia/issues/852\n    // It's easier to just use toRefs() even if it includes more stuff\n    if (isVue2) {\n        // @ts-expect-error: toRefs include methods and others\n        return toRefs(store);\n    }\n    else {\n        store = toRaw(store);\n        const refs = {};\n        for (const key in store) {\n            const value = store[key];\n            if (isRef(value) || isReactive(value)) {\n                // @ts-expect-error: the key is state or getter\n                refs[key] =\n                    // ---\n                    toRef(store, key);\n            }\n        }\n        return refs;\n    }\n}\n\n/**\n * Vue 2 Plugin that must be installed for pinia to work. Note **you don't need\n * this plugin if you are using Nuxt.js**. Use the `buildModule` instead:\n * https://pinia.vuejs.org/ssr/nuxt.html.\n *\n * @example\n * ```js\n * import Vue from 'vue'\n * import { PiniaVuePlugin, createPinia } from 'pinia'\n *\n * Vue.use(PiniaVuePlugin)\n * const pinia = createPinia()\n *\n * new Vue({\n *   el: '#app',\n *   // ...\n *   pinia,\n * })\n * ```\n *\n * @param _Vue - `Vue` imported from 'vue'.\n */\nconst PiniaVuePlugin = function (_Vue) {\n    // Equivalent of\n    // app.config.globalProperties.$pinia = pinia\n    _Vue.mixin({\n        beforeCreate() {\n            const options = this.$options;\n            if (options.pinia) {\n                const pinia = options.pinia;\n                // HACK: taken from provide(): https://github.com/vuejs/composition-api/blob/main/src/apis/inject.ts#L31\n                /* istanbul ignore else */\n                if (!this._provided) {\n                    const provideCache = {};\n                    Object.defineProperty(this, '_provided', {\n                        get: () => provideCache,\n                        set: (v) => Object.assign(provideCache, v),\n                    });\n                }\n                this._provided[piniaSymbol] = pinia;\n                // propagate the pinia instance in an SSR friendly way\n                // avoid adding it to nuxt twice\n                /* istanbul ignore else */\n                if (!this.$pinia) {\n                    this.$pinia = pinia;\n                }\n                pinia._a = this;\n                if (IS_CLIENT) {\n                    // this allows calling useStore() outside of a component setup after\n                    // installing pinia's plugin\n                    setActivePinia(pinia);\n                }\n                if (USE_DEVTOOLS) {\n                    registerPiniaDevtools(pinia._a, pinia);\n                }\n            }\n            else if (!this.$pinia && options.parent && options.parent.$pinia) {\n                this.$pinia = options.parent.$pinia;\n            }\n        },\n        destroyed() {\n            delete this._pStores;\n        },\n    });\n};\n\nexport { MutationType, PiniaVuePlugin, acceptHMRUpdate, createPinia, defineStore, getActivePinia, mapActions, mapGetters, mapState, mapStores, mapWritableState, setActivePinia, setMapStoreSuffix, skipHydrate, storeToRefs };\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA,SAASA,kBAAT,EAA6BC,MAA7B,EAAqCC,KAArC,EAA4CC,KAA5C,EAAmDC,KAAnD,EAA0DC,OAA1D,EAAmEC,WAAnE,EAAgFC,GAAhF,EAAqFC,MAArF,EAA6FC,KAA7F,EAAoGC,UAApG,EAAgHC,GAAhH,EAAqHC,eAArH,EAAsIC,cAAtI,EAAsJC,QAAtJ,EAAgKC,KAAhK,EAAuKC,GAAvK,EAA4KC,QAA5K,EAAsLC,QAAtL,EAAgMC,MAAhM,QAA8M,UAA9M;AACA,SAASC,mBAAT,QAAoC,mBAApC;AAEA;AACA;AACA;AACA;;AACA,IAAIC,WAAJ;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,cAAc,GAAIC,KAAD,IAAYF,WAAW,GAAGE,KAAjD;AACA;AACA;AACA;;;AACA,MAAMC,cAAc,GAAG,MAAOxB,kBAAkB,MAAMC,MAAM,CAACwB,WAAD,CAA/B,IAAiDJ,WAA9E;;AACA,MAAMI,WAAW,GAAKC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA1B,GAA0CC,MAAM,CAAC,OAAD,CAAhD;AAA4D;AAA2BA,MAAM,EAAlH;;AAEA,SAASC,aAAT,EACA;AACAC,CAFA,EAEG;EACC,OAAQA,CAAC,IACL,OAAOA,CAAP,KAAa,QADT,IAEJC,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BJ,CAA/B,MAAsC,iBAFlC,IAGJ,OAAOA,CAAC,CAACK,MAAT,KAAoB,UAHxB;AAIH,C,CACD;AACA;;AACA;AACA;AACA;;;AACA,IAAIC,YAAJ;;AACA,CAAC,UAAUA,YAAV,EAAwB;EACrB;AACJ;AACA;AACA;AACA;AACA;AACA;EACIA,YAAY,CAAC,QAAD,CAAZ,GAAyB,QAAzB;EACA;AACJ;AACA;AACA;AACA;;EACIA,YAAY,CAAC,aAAD,CAAZ,GAA8B,cAA9B;EACA;AACJ;AACA;AACA;AACA;;EACIA,YAAY,CAAC,eAAD,CAAZ,GAAgC,gBAAhC,CApBqB,CAqBrB;AACH,CAtBD,EAsBGA,YAAY,KAAKA,YAAY,GAAG,EAApB,CAtBf;;AAwBA,MAAMC,SAAS,GAAG,OAAOC,MAAP,KAAkB,WAApC;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,YAAY,GAAG,CAAEd,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA1B,IAA4C,OAAOa,qBAAP,KAAiC,WAAjC,IAAgDA,qBAA7F,KAAwH,EAAEf,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,MAA3B,CAAxH,IAA8JU,SAAnL;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMI,OAAO,GAAG,aAAc,CAAC,MAAM,OAAOH,MAAP,KAAkB,QAAlB,IAA8BA,MAAM,CAACA,MAAP,KAAkBA,MAAhD,GAC/BA,MAD+B,GAE/B,OAAOI,IAAP,KAAgB,QAAhB,IAA4BA,IAAI,CAACA,IAAL,KAAcA,IAA1C,GACIA,IADJ,GAEI,OAAOC,MAAP,KAAkB,QAAlB,IAA8BA,MAAM,CAACA,MAAP,KAAkBA,MAAhD,GACIA,MADJ,GAEI,OAAOC,UAAP,KAAsB,QAAtB,GACIA,UADJ,GAEI;EAAEC,WAAW,EAAE;AAAf,CARY,GAA9B;;AASA,SAASC,GAAT,CAAaC,IAAb,EAAmB;EAAEC,OAAO,GAAG;AAAZ,IAAsB,EAAzC,EAA6C;EACzC;EACA;EACA,IAAIA,OAAO,IACP,6EAA6EC,IAA7E,CAAkFF,IAAI,CAACG,IAAvF,CADJ,EACkG;IAC9F,OAAO,IAAIC,IAAJ,CAAS,CAACC,MAAM,CAACC,YAAP,CAAoB,MAApB,CAAD,EAA8BN,IAA9B,CAAT,EAA8C;MAAEG,IAAI,EAAEH,IAAI,CAACG;IAAb,CAA9C,CAAP;EACH;;EACD,OAAOH,IAAP;AACH;;AACD,SAASO,QAAT,CAAkBC,GAAlB,EAAuBC,IAAvB,EAA6BC,IAA7B,EAAmC;EAC/B,MAAMC,GAAG,GAAG,IAAIC,cAAJ,EAAZ;EACAD,GAAG,CAACE,IAAJ,CAAS,KAAT,EAAgBL,GAAhB;EACAG,GAAG,CAACG,YAAJ,GAAmB,MAAnB;;EACAH,GAAG,CAACI,MAAJ,GAAa,YAAY;IACrBC,MAAM,CAACL,GAAG,CAACM,QAAL,EAAeR,IAAf,EAAqBC,IAArB,CAAN;EACH,CAFD;;EAGAC,GAAG,CAACO,OAAJ,GAAc,YAAY;IACtBC,OAAO,CAACC,KAAR,CAAc,yBAAd;EACH,CAFD;;EAGAT,GAAG,CAACU,IAAJ;AACH;;AACD,SAASC,WAAT,CAAqBd,GAArB,EAA0B;EACtB,MAAMG,GAAG,GAAG,IAAIC,cAAJ,EAAZ,CADsB,CAEtB;;EACAD,GAAG,CAACE,IAAJ,CAAS,MAAT,EAAiBL,GAAjB,EAAsB,KAAtB;;EACA,IAAI;IACAG,GAAG,CAACU,IAAJ;EACH,CAFD,CAGA,OAAOE,CAAP,EAAU,CAAG;;EACb,OAAOZ,GAAG,CAACa,MAAJ,IAAc,GAAd,IAAqBb,GAAG,CAACa,MAAJ,IAAc,GAA1C;AACH,C,CACD;;;AACA,SAASC,KAAT,CAAeC,IAAf,EAAqB;EACjB,IAAI;IACAA,IAAI,CAACC,aAAL,CAAmB,IAAIC,UAAJ,CAAe,OAAf,CAAnB;EACH,CAFD,CAGA,OAAOL,CAAP,EAAU;IACN,MAAMM,GAAG,GAAGC,QAAQ,CAACC,WAAT,CAAqB,aAArB,CAAZ;IACAF,GAAG,CAACG,cAAJ,CAAmB,OAAnB,EAA4B,IAA5B,EAAkC,IAAlC,EAAwCzC,MAAxC,EAAgD,CAAhD,EAAmD,CAAnD,EAAsD,CAAtD,EAAyD,EAAzD,EAA6D,EAA7D,EAAiE,KAAjE,EAAwE,KAAxE,EAA+E,KAA/E,EAAsF,KAAtF,EAA6F,CAA7F,EAAgG,IAAhG;IACAmC,IAAI,CAACC,aAAL,CAAmBE,GAAnB;EACH;AACJ;;AACD,MAAMI,UAAU,GACf,OAAOC,SAAP,KAAqB,QAArB,GAAgCA,SAAhC,GAA4C;EAAEC,SAAS,EAAE;AAAb,CAD7C,C,CAEA;AACA;AACA;;;AACA,MAAMC,cAAc,GAAG,aAAc,CAAC,MAAM,YAAYlC,IAAZ,CAAiB+B,UAAU,CAACE,SAA5B,KACxC,cAAcjC,IAAd,CAAmB+B,UAAU,CAACE,SAA9B,CADwC,IAExC,CAAC,SAASjC,IAAT,CAAc+B,UAAU,CAACE,SAAzB,CAFgC,GAArC;;AAGA,MAAMnB,MAAM,GAAG,CAAC1B,SAAD,GACT,MAAM,CAAG,CADA,CACC;AADD,EAET;AACE,OAAO+C,iBAAP,KAA6B,WAA7B,IACI,cAAcA,iBAAiB,CAACpD,SADpC,IAEI,CAACmD,cAFL,GAGME,cAHN,GAIM;AACE,sBAAsBL,UAAtB,GACMM,QADN,GAEM;AACEC,eAXxB;;AAYA,SAASF,cAAT,CAAwBtC,IAAxB,EAA8BS,IAAI,GAAG,UAArC,EAAiDC,IAAjD,EAAuD;EACnD,MAAM+B,CAAC,GAAGX,QAAQ,CAACY,aAAT,CAAuB,GAAvB,CAAV;EACAD,CAAC,CAAClC,QAAF,GAAaE,IAAb;EACAgC,CAAC,CAACE,GAAF,GAAQ,UAAR,CAHmD,CAG/B;EACpB;EACA;;EACA,IAAI,OAAO3C,IAAP,KAAgB,QAApB,EAA8B;IAC1B;IACAyC,CAAC,CAACG,IAAF,GAAS5C,IAAT;;IACA,IAAIyC,CAAC,CAACI,MAAF,KAAaC,QAAQ,CAACD,MAA1B,EAAkC;MAC9B,IAAIvB,WAAW,CAACmB,CAAC,CAACG,IAAH,CAAf,EAAyB;QACrBrC,QAAQ,CAACP,IAAD,EAAOS,IAAP,EAAaC,IAAb,CAAR;MACH,CAFD,MAGK;QACD+B,CAAC,CAACM,MAAF,GAAW,QAAX;QACAtB,KAAK,CAACgB,CAAD,CAAL;MACH;IACJ,CARD,MASK;MACDhB,KAAK,CAACgB,CAAD,CAAL;IACH;EACJ,CAfD,MAgBK;IACD;IACAA,CAAC,CAACG,IAAF,GAASI,GAAG,CAACC,eAAJ,CAAoBjD,IAApB,CAAT;IACAkD,UAAU,CAAC,YAAY;MACnBF,GAAG,CAACG,eAAJ,CAAoBV,CAAC,CAACG,IAAtB;IACH,CAFS,EAEP,GAFO,CAAV,CAHC,CAKQ;;IACTM,UAAU,CAAC,YAAY;MACnBzB,KAAK,CAACgB,CAAD,CAAL;IACH,CAFS,EAEP,CAFO,CAAV;EAGH;AACJ;;AACD,SAASF,QAAT,CAAkBvC,IAAlB,EAAwBS,IAAI,GAAG,UAA/B,EAA2CC,IAA3C,EAAiD;EAC7C,IAAI,OAAOV,IAAP,KAAgB,QAApB,EAA8B;IAC1B,IAAIsB,WAAW,CAACtB,IAAD,CAAf,EAAuB;MACnBO,QAAQ,CAACP,IAAD,EAAOS,IAAP,EAAaC,IAAb,CAAR;IACH,CAFD,MAGK;MACD,MAAM+B,CAAC,GAAGX,QAAQ,CAACY,aAAT,CAAuB,GAAvB,CAAV;MACAD,CAAC,CAACG,IAAF,GAAS5C,IAAT;MACAyC,CAAC,CAACM,MAAF,GAAW,QAAX;MACAG,UAAU,CAAC,YAAY;QACnBzB,KAAK,CAACgB,CAAD,CAAL;MACH,CAFS,CAAV;IAGH;EACJ,CAZD,MAaK;IACD;IACAP,SAAS,CAACkB,gBAAV,CAA2BrD,GAAG,CAACC,IAAD,EAAOU,IAAP,CAA9B,EAA4CD,IAA5C;EACH;AACJ;;AACD,SAAS+B,eAAT,CAAyBxC,IAAzB,EAA+BS,IAA/B,EAAqCC,IAArC,EAA2C2C,KAA3C,EAAkD;EAC9C;EACA;EACAA,KAAK,GAAGA,KAAK,IAAIxC,IAAI,CAAC,EAAD,EAAK,QAAL,CAArB;;EACA,IAAIwC,KAAJ,EAAW;IACPA,KAAK,CAACvB,QAAN,CAAewB,KAAf,GAAuBD,KAAK,CAACvB,QAAN,CAAeyB,IAAf,CAAoBC,SAApB,GAAgC,gBAAvD;EACH;;EACD,IAAI,OAAOxD,IAAP,KAAgB,QAApB,EACI,OAAOO,QAAQ,CAACP,IAAD,EAAOS,IAAP,EAAaC,IAAb,CAAf;EACJ,MAAM+C,KAAK,GAAGzD,IAAI,CAACG,IAAL,KAAc,0BAA5B;;EACA,MAAMuD,QAAQ,GAAG,eAAexD,IAAf,CAAoBG,MAAM,CAACX,OAAO,CAACI,WAAT,CAA1B,KAAoD,YAAYJ,OAAjF;;EACA,MAAMiE,WAAW,GAAG,eAAezD,IAAf,CAAoBgC,SAAS,CAACC,SAA9B,CAApB;;EACA,IAAI,CAACwB,WAAW,IAAKF,KAAK,IAAIC,QAAzB,IAAsCtB,cAAvC,KACA,OAAOwB,UAAP,KAAsB,WAD1B,EACuC;IACnC;IACA,MAAMC,MAAM,GAAG,IAAID,UAAJ,EAAf;;IACAC,MAAM,CAACC,SAAP,GAAmB,YAAY;MAC3B,IAAItD,GAAG,GAAGqD,MAAM,CAACE,MAAjB;;MACA,IAAI,OAAOvD,GAAP,KAAe,QAAnB,EAA6B;QACzB6C,KAAK,GAAG,IAAR;QACA,MAAM,IAAIW,KAAJ,CAAU,0BAAV,CAAN;MACH;;MACDxD,GAAG,GAAGmD,WAAW,GACXnD,GADW,GAEXA,GAAG,CAACyD,OAAJ,CAAY,cAAZ,EAA4B,uBAA5B,CAFN;;MAGA,IAAIZ,KAAJ,EAAW;QACPA,KAAK,CAACP,QAAN,CAAeF,IAAf,GAAsBpC,GAAtB;MACH,CAFD,MAGK;QACDsC,QAAQ,CAACoB,MAAT,CAAgB1D,GAAhB;MACH;;MACD6C,KAAK,GAAG,IAAR,CAf2B,CAeb;IACjB,CAhBD;;IAiBAQ,MAAM,CAACM,aAAP,CAAqBnE,IAArB;EACH,CAtBD,MAuBK;IACD,MAAMQ,GAAG,GAAGwC,GAAG,CAACC,eAAJ,CAAoBjD,IAApB,CAAZ;IACA,IAAIqD,KAAJ,EACIA,KAAK,CAACP,QAAN,CAAeoB,MAAf,CAAsB1D,GAAtB,EADJ,KAGIsC,QAAQ,CAACF,IAAT,GAAgBpC,GAAhB;IACJ6C,KAAK,GAAG,IAAR,CANC,CAMa;;IACdH,UAAU,CAAC,YAAY;MACnBF,GAAG,CAACG,eAAJ,CAAoB3C,GAApB;IACH,CAFS,EAEP,GAFO,CAAV,CAPC,CASQ;EACZ;AACJ;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS4D,YAAT,CAAsBC,OAAtB,EAA+BlE,IAA/B,EAAqC;EACjC,MAAMmE,YAAY,GAAG,QAAQD,OAA7B;;EACA,IAAI,OAAOE,sBAAP,KAAkC,UAAtC,EAAkD;IAC9CA,sBAAsB,CAACD,YAAD,EAAenE,IAAf,CAAtB;EACH,CAFD,MAGK,IAAIA,IAAI,KAAK,OAAb,EAAsB;IACvBgB,OAAO,CAACC,KAAR,CAAckD,YAAd;EACH,CAFI,MAGA,IAAInE,IAAI,KAAK,MAAb,EAAqB;IACtBgB,OAAO,CAACqD,IAAR,CAAaF,YAAb;EACH,CAFI,MAGA;IACDnD,OAAO,CAACsD,GAAR,CAAYH,YAAZ;EACH;AACJ;;AACD,SAASI,OAAT,CAAiB3F,CAAjB,EAAoB;EAChB,OAAO,QAAQA,CAAR,IAAa,aAAaA,CAAjC;AACH;;AAED,SAAS4F,oBAAT,GAAgC;EAC5B,IAAI,EAAE,eAAezC,SAAjB,CAAJ,EAAiC;IAC7BkC,YAAY,CAAE,gDAAF,EAAmD,OAAnD,CAAZ;IACA,OAAO,IAAP;EACH;AACJ;;AACD,SAASQ,oBAAT,CAA8BxD,KAA9B,EAAqC;EACjC,IAAIA,KAAK,YAAY4C,KAAjB,IACA5C,KAAK,CAACiD,OAAN,CAAcQ,WAAd,GAA4BC,QAA5B,CAAqC,yBAArC,CADJ,EACqE;IACjEV,YAAY,CAAC,iGAAD,EAAoG,MAApG,CAAZ;IACA,OAAO,IAAP;EACH;;EACD,OAAO,KAAP;AACH;;AACD,eAAeW,qBAAf,CAAqCxG,KAArC,EAA4C;EACxC,IAAIoG,oBAAoB,EAAxB,EACI;;EACJ,IAAI;IACA,MAAMzC,SAAS,CAAC8C,SAAV,CAAoBC,SAApB,CAA8BC,IAAI,CAACC,SAAL,CAAe5G,KAAK,CAAC6G,KAAN,CAAYC,KAA3B,CAA9B,CAAN;IACAjB,YAAY,CAAC,mCAAD,CAAZ;EACH,CAHD,CAIA,OAAOhD,KAAP,EAAc;IACV,IAAIwD,oBAAoB,CAACxD,KAAD,CAAxB,EACI;IACJgD,YAAY,CAAE,oEAAF,EAAuE,OAAvE,CAAZ;IACAjD,OAAO,CAACC,KAAR,CAAcA,KAAd;EACH;AACJ;;AACD,eAAekE,sBAAf,CAAsC/G,KAAtC,EAA6C;EACzC,IAAIoG,oBAAoB,EAAxB,EACI;;EACJ,IAAI;IACApG,KAAK,CAAC6G,KAAN,CAAYC,KAAZ,GAAoBH,IAAI,CAACK,KAAL,CAAW,MAAMrD,SAAS,CAAC8C,SAAV,CAAoBQ,QAApB,EAAjB,CAApB;IACApB,YAAY,CAAC,qCAAD,CAAZ;EACH,CAHD,CAIA,OAAOhD,KAAP,EAAc;IACV,IAAIwD,oBAAoB,CAACxD,KAAD,CAAxB,EACI;IACJgD,YAAY,CAAE,qFAAF,EAAwF,OAAxF,CAAZ;IACAjD,OAAO,CAACC,KAAR,CAAcA,KAAd;EACH;AACJ;;AACD,eAAeqE,qBAAf,CAAqClH,KAArC,EAA4C;EACxC,IAAI;IACAyC,MAAM,CAAC,IAAIZ,IAAJ,CAAS,CAAC8E,IAAI,CAACC,SAAL,CAAe5G,KAAK,CAAC6G,KAAN,CAAYC,KAA3B,CAAD,CAAT,EAA8C;MACjDlF,IAAI,EAAE;IAD2C,CAA9C,CAAD,EAEF,kBAFE,CAAN;EAGH,CAJD,CAKA,OAAOiB,KAAP,EAAc;IACVgD,YAAY,CAAE,yEAAF,EAA4E,OAA5E,CAAZ;IACAjD,OAAO,CAACC,KAAR,CAAcA,KAAd;EACH;AACJ;;AACD,IAAIsE,SAAJ;;AACA,SAASC,aAAT,GAAyB;EACrB,IAAI,CAACD,SAAL,EAAgB;IACZA,SAAS,GAAG5D,QAAQ,CAACY,aAAT,CAAuB,OAAvB,CAAZ;IACAgD,SAAS,CAACvF,IAAV,GAAiB,MAAjB;IACAuF,SAAS,CAACE,MAAV,GAAmB,OAAnB;EACH;;EACD,SAASC,QAAT,GAAoB;IAChB,OAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;MACpCN,SAAS,CAACO,QAAV,GAAqB,YAAY;QAC7B,MAAMC,KAAK,GAAGR,SAAS,CAACQ,KAAxB;QACA,IAAI,CAACA,KAAL,EACI,OAAOH,OAAO,CAAC,IAAD,CAAd;QACJ,MAAMI,IAAI,GAAGD,KAAK,CAACE,IAAN,CAAW,CAAX,CAAb;QACA,IAAI,CAACD,IAAL,EACI,OAAOJ,OAAO,CAAC,IAAD,CAAd;QACJ,OAAOA,OAAO,CAAC;UAAEM,IAAI,EAAE,MAAMF,IAAI,CAACE,IAAL,EAAd;UAA2BF;QAA3B,CAAD,CAAd;MACH,CARD,CADoC,CAUpC;;;MACAT,SAAS,CAACY,QAAV,GAAqB,MAAMP,OAAO,CAAC,IAAD,CAAlC;;MACAL,SAAS,CAACxE,OAAV,GAAoB8E,MAApB;MACAN,SAAS,CAACjE,KAAV;IACH,CAdM,CAAP;EAeH;;EACD,OAAOoE,QAAP;AACH;;AACD,eAAeU,yBAAf,CAAyChI,KAAzC,EAAgD;EAC5C,IAAI;IACA,MAAMsC,IAAI,GAAG,MAAM8E,aAAa,EAAhC;IACA,MAAM5B,MAAM,GAAG,MAAMlD,IAAI,EAAzB;IACA,IAAI,CAACkD,MAAL,EACI;IACJ,MAAM;MAAEsC,IAAF;MAAQF;IAAR,IAAiBpC,MAAvB;IACAxF,KAAK,CAAC6G,KAAN,CAAYC,KAAZ,GAAoBH,IAAI,CAACK,KAAL,CAAWc,IAAX,CAApB;IACAjC,YAAY,CAAE,+BAA8B+B,IAAI,CAAC1F,IAAK,IAA1C,CAAZ;EACH,CARD,CASA,OAAOW,KAAP,EAAc;IACVgD,YAAY,CAAE,yEAAF,EAA4E,OAA5E,CAAZ;IACAjD,OAAO,CAACC,KAAR,CAAcA,KAAd;EACH;AACJ;;AAED,SAASoF,aAAT,CAAuBC,OAAvB,EAAgC;EAC5B,OAAO;IACHC,OAAO,EAAE;MACLD;IADK;EADN,CAAP;AAKH;;AACD,MAAME,gBAAgB,GAAG,iBAAzB;AACA,MAAMC,aAAa,GAAG,OAAtB;;AACA,SAASC,2BAAT,CAAqCC,KAArC,EAA4C;EACxC,OAAOpC,OAAO,CAACoC,KAAD,CAAP,GACD;IACEC,EAAE,EAAEH,aADN;IAEEI,KAAK,EAAEL;EAFT,CADC,GAKD;IACEI,EAAE,EAAED,KAAK,CAACG,GADZ;IAEED,KAAK,EAAEF,KAAK,CAACG;EAFf,CALN;AASH;;AACD,SAASC,4BAAT,CAAsCJ,KAAtC,EAA6C;EACzC,IAAIpC,OAAO,CAACoC,KAAD,CAAX,EAAoB;IAChB,MAAMK,UAAU,GAAGC,KAAK,CAACC,IAAN,CAAWP,KAAK,CAACQ,EAAN,CAASC,IAAT,EAAX,CAAnB;IACA,MAAMC,QAAQ,GAAGV,KAAK,CAACQ,EAAvB;IACA,MAAMlC,KAAK,GAAG;MACVA,KAAK,EAAE+B,UAAU,CAACM,GAAX,CAAgBC,OAAD,KAAc;QAChCC,QAAQ,EAAE,IADsB;QAEhCC,GAAG,EAAEF,OAF2B;QAGhCrC,KAAK,EAAEyB,KAAK,CAAC1B,KAAN,CAAYC,KAAZ,CAAkBqC,OAAlB;MAHyB,CAAd,CAAf,CADG;MAMVG,OAAO,EAAEV,UAAU,CACdW,MADI,CACIf,EAAD,IAAQS,QAAQ,CAACO,GAAT,CAAahB,EAAb,EAAiBiB,QAD5B,EAEJP,GAFI,CAECV,EAAD,IAAQ;QACb,MAAMD,KAAK,GAAGU,QAAQ,CAACO,GAAT,CAAahB,EAAb,CAAd;QACA,OAAO;UACHY,QAAQ,EAAE,KADP;UAEHC,GAAG,EAAEb,EAFF;UAGH1B,KAAK,EAAEyB,KAAK,CAACkB,QAAN,CAAeC,MAAf,CAAsB,CAACJ,OAAD,EAAUD,GAAV,KAAkB;YAC3CC,OAAO,CAACD,GAAD,CAAP,GAAed,KAAK,CAACc,GAAD,CAApB;YACA,OAAOC,OAAP;UACH,CAHM,EAGJ,EAHI;QAHJ,CAAP;MAQH,CAZQ;IANC,CAAd;IAoBA,OAAOzC,KAAP;EACH;;EACD,MAAMA,KAAK,GAAG;IACVA,KAAK,EAAEpG,MAAM,CAACuI,IAAP,CAAYT,KAAK,CAACoB,MAAlB,EAA0BT,GAA1B,CAA+BG,GAAD,KAAU;MAC3CD,QAAQ,EAAE,IADiC;MAE3CC,GAF2C;MAG3CvC,KAAK,EAAEyB,KAAK,CAACoB,MAAN,CAAaN,GAAb;IAHoC,CAAV,CAA9B;EADG,CAAd,CA1ByC,CAiCzC;;EACA,IAAId,KAAK,CAACkB,QAAN,IAAkBlB,KAAK,CAACkB,QAAN,CAAeG,MAArC,EAA6C;IACzC/C,KAAK,CAACyC,OAAN,GAAgBf,KAAK,CAACkB,QAAN,CAAeP,GAAf,CAAoBW,UAAD,KAAiB;MAChDT,QAAQ,EAAE,KADsC;MAEhDC,GAAG,EAAEQ,UAF2C;MAGhD/C,KAAK,EAAEyB,KAAK,CAACsB,UAAD;IAHoC,CAAjB,CAAnB,CAAhB;EAKH;;EACD,IAAItB,KAAK,CAACuB,iBAAN,CAAwBC,IAA5B,EAAkC;IAC9BlD,KAAK,CAACmD,gBAAN,GAAyBnB,KAAK,CAACC,IAAN,CAAWP,KAAK,CAACuB,iBAAjB,EAAoCZ,GAApC,CAAyCG,GAAD,KAAU;MACvED,QAAQ,EAAE,IAD6D;MAEvEC,GAFuE;MAGvEvC,KAAK,EAAEyB,KAAK,CAACc,GAAD;IAH2D,CAAV,CAAxC,CAAzB;EAKH;;EACD,OAAOxC,KAAP;AACH;;AACD,SAASoD,eAAT,CAAyBC,MAAzB,EAAiC;EAC7B,IAAI,CAACA,MAAL,EACI,OAAO,EAAP;;EACJ,IAAIrB,KAAK,CAACsB,OAAN,CAAcD,MAAd,CAAJ,EAA2B;IACvB;IACA,OAAOA,MAAM,CAACR,MAAP,CAAc,CAACU,IAAD,EAAOC,KAAP,KAAiB;MAClCD,IAAI,CAACpB,IAAL,CAAUsB,IAAV,CAAeD,KAAK,CAAChB,GAArB;MACAe,IAAI,CAACG,UAAL,CAAgBD,IAAhB,CAAqBD,KAAK,CAACzI,IAA3B;MACAwI,IAAI,CAACI,QAAL,CAAcH,KAAK,CAAChB,GAApB,IAA2BgB,KAAK,CAACG,QAAjC;MACAJ,IAAI,CAACK,QAAL,CAAcJ,KAAK,CAAChB,GAApB,IAA2BgB,KAAK,CAACI,QAAjC;MACA,OAAOL,IAAP;IACH,CANM,EAMJ;MACCI,QAAQ,EAAE,EADX;MAECxB,IAAI,EAAE,EAFP;MAGCuB,UAAU,EAAE,EAHb;MAICE,QAAQ,EAAE;IAJX,CANI,CAAP;EAYH,CAdD,MAeK;IACD,OAAO;MACHC,SAAS,EAAEzC,aAAa,CAACiC,MAAM,CAACtI,IAAR,CADrB;MAEHyH,GAAG,EAAEpB,aAAa,CAACiC,MAAM,CAACb,GAAR,CAFf;MAGHmB,QAAQ,EAAEN,MAAM,CAACM,QAHd;MAIHC,QAAQ,EAAEP,MAAM,CAACO;IAJd,CAAP;EAMH;AACJ;;AACD,SAASE,kBAAT,CAA4B/I,IAA5B,EAAkC;EAC9B,QAAQA,IAAR;IACI,KAAKd,YAAY,CAAC8J,MAAlB;MACI,OAAO,UAAP;;IACJ,KAAK9J,YAAY,CAAC+J,aAAlB;MACI,OAAO,QAAP;;IACJ,KAAK/J,YAAY,CAACgK,WAAlB;MACI,OAAO,QAAP;;IACJ;MACI,OAAO,SAAP;EARR;AAUH,C,CAED;;;AACA,IAAIC,gBAAgB,GAAG,IAAvB;AACA,MAAMC,mBAAmB,GAAG,EAA5B;AACA,MAAMC,kBAAkB,GAAG,iBAA3B;AACA,MAAMC,YAAY,GAAG,OAArB;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,YAAY,GAAI3C,EAAD,IAAQ,QAAQA,EAArC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS4C,qBAAT,CAA+BC,GAA/B,EAAoCrL,KAApC,EAA2C;EACvCH,mBAAmB,CAAC;IAChB2I,EAAE,EAAE,eADY;IAEhBC,KAAK,EAAE,UAFS;IAGhB6C,IAAI,EAAE,kCAHU;IAIhBC,WAAW,EAAE,OAJG;IAKhBC,QAAQ,EAAE,yBALM;IAMhBR,mBANgB;IAOhBK;EAPgB,CAAD,EAQfI,GAAD,IAAS;IACR,IAAI,OAAOA,GAAG,CAACC,GAAX,KAAmB,UAAvB,EAAmC;MAC/B7F,YAAY,CAAC,yMAAD,CAAZ;IACH;;IACD4F,GAAG,CAACE,gBAAJ,CAAqB;MACjBnD,EAAE,EAAEyC,kBADa;MAEjBxC,KAAK,EAAG,UAFS;MAGjBmD,KAAK,EAAE;IAHU,CAArB;IAKAH,GAAG,CAACI,YAAJ,CAAiB;MACbrD,EAAE,EAAE0C,YADS;MAEbzC,KAAK,EAAE,UAFM;MAGbqD,IAAI,EAAE,SAHO;MAIbC,qBAAqB,EAAE,eAJV;MAKbC,OAAO,EAAE,CACL;QACIF,IAAI,EAAE,cADV;QAEIG,MAAM,EAAE,MAAM;UACVzF,qBAAqB,CAACxG,KAAD,CAArB;QACH,CAJL;QAKIkM,OAAO,EAAE;MALb,CADK,EAQL;QACIJ,IAAI,EAAE,eADV;QAEIG,MAAM,EAAE,YAAY;UAChB,MAAMlF,sBAAsB,CAAC/G,KAAD,CAA5B;UACAyL,GAAG,CAACU,iBAAJ,CAAsBjB,YAAtB;UACAO,GAAG,CAACW,kBAAJ,CAAuBlB,YAAvB;QACH,CANL;QAOIgB,OAAO,EAAE;MAPb,CARK,EAiBL;QACIJ,IAAI,EAAE,MADV;QAEIG,MAAM,EAAE,MAAM;UACV/E,qBAAqB,CAAClH,KAAD,CAArB;QACH,CAJL;QAKIkM,OAAO,EAAE;MALb,CAjBK,EAwBL;QACIJ,IAAI,EAAE,aADV;QAEIG,MAAM,EAAE,YAAY;UAChB,MAAMjE,yBAAyB,CAAChI,KAAD,CAA/B;UACAyL,GAAG,CAACU,iBAAJ,CAAsBjB,YAAtB;UACAO,GAAG,CAACW,kBAAJ,CAAuBlB,YAAvB;QACH,CANL;QAOIgB,OAAO,EAAE;MAPb,CAxBK,CALI;MAuCbG,WAAW,EAAE,CACT;QACIP,IAAI,EAAE,SADV;QAEII,OAAO,EAAE,qCAFb;QAGID,MAAM,EAAGK,MAAD,IAAY;UAChB,MAAM/D,KAAK,GAAGvI,KAAK,CAAC+I,EAAN,CAASS,GAAT,CAAa8C,MAAb,CAAd;;UACA,IAAI,CAAC/D,KAAL,EAAY;YACR1C,YAAY,CAAE,iBAAgByG,MAAO,kCAAzB,EAA4D,MAA5D,CAAZ;UACH,CAFD,MAGK,IAAI,CAAC/D,KAAK,CAACgE,aAAX,EAA0B;YAC3B1G,YAAY,CAAE,iBAAgByG,MAAO,qCAAzB,EAA+D,MAA/D,CAAZ;UACH,CAFI,MAGA;YACD/D,KAAK,CAACiE,MAAN;YACA3G,YAAY,CAAE,UAASyG,MAAO,UAAlB,CAAZ;UACH;QACJ;MAfL,CADS;IAvCA,CAAjB;IA2DAb,GAAG,CAACgB,EAAJ,CAAOC,gBAAP,CAAwB,CAACC,OAAD,EAAUC,GAAV,KAAkB;MACtC,MAAMC,KAAK,GAAIF,OAAO,CAACG,iBAAR,IACXH,OAAO,CAACG,iBAAR,CAA0BD,KAD9B;;MAEA,IAAIA,KAAK,IAAIA,KAAK,CAACE,QAAnB,EAA6B;QACzB,MAAMC,WAAW,GAAGL,OAAO,CAACG,iBAAR,CAA0BD,KAA1B,CAAgCE,QAApD;QACAtM,MAAM,CAACwM,MAAP,CAAcD,WAAd,EAA2BE,OAA3B,CAAoC3E,KAAD,IAAW;UAC1CoE,OAAO,CAACQ,YAAR,CAAqBtG,KAArB,CAA2ByD,IAA3B,CAAgC;YAC5B1I,IAAI,EAAEuJ,YAAY,CAAC5C,KAAK,CAACG,GAAP,CADU;YAE5BW,GAAG,EAAE,OAFuB;YAG5BD,QAAQ,EAAE,IAHkB;YAI5BtC,KAAK,EAAEyB,KAAK,CAACgE,aAAN,GACD;cACEpE,OAAO,EAAE;gBACLrB,KAAK,EAAEnI,KAAK,CAAC4J,KAAK,CAACoB,MAAP,CADP;gBAELqC,OAAO,EAAE,CACL;kBACIF,IAAI,EAAE,SADV;kBAEII,OAAO,EAAE,+BAFb;kBAGID,MAAM,EAAE,MAAM1D,KAAK,CAACiE,MAAN;gBAHlB,CADK;cAFJ;YADX,CADC,GAaD;YACE/L,MAAM,CAACuI,IAAP,CAAYT,KAAK,CAACoB,MAAlB,EAA0BD,MAA1B,CAAiC,CAAC7C,KAAD,EAAQwC,GAAR,KAAgB;cAC7CxC,KAAK,CAACwC,GAAD,CAAL,GAAad,KAAK,CAACoB,MAAN,CAAaN,GAAb,CAAb;cACA,OAAOxC,KAAP;YACH,CAHD,EAGG,EAHH;UAlBoB,CAAhC;;UAuBA,IAAI0B,KAAK,CAACkB,QAAN,IAAkBlB,KAAK,CAACkB,QAAN,CAAeG,MAArC,EAA6C;YACzC+C,OAAO,CAACQ,YAAR,CAAqBtG,KAArB,CAA2ByD,IAA3B,CAAgC;cAC5B1I,IAAI,EAAEuJ,YAAY,CAAC5C,KAAK,CAACG,GAAP,CADU;cAE5BW,GAAG,EAAE,SAFuB;cAG5BD,QAAQ,EAAE,KAHkB;cAI5BtC,KAAK,EAAEyB,KAAK,CAACkB,QAAN,CAAeC,MAAf,CAAsB,CAACJ,OAAD,EAAUD,GAAV,KAAkB;gBAC3C,IAAI;kBACAC,OAAO,CAACD,GAAD,CAAP,GAAed,KAAK,CAACc,GAAD,CAApB;gBACH,CAFD,CAGA,OAAOxG,KAAP,EAAc;kBACV;kBACAyG,OAAO,CAACD,GAAD,CAAP,GAAexG,KAAf;gBACH;;gBACD,OAAOyG,OAAP;cACH,CATM,EASJ,EATI;YAJqB,CAAhC;UAeH;QACJ,CAzCD;MA0CH;IACJ,CAhDD;IAiDAmC,GAAG,CAACgB,EAAJ,CAAOW,gBAAP,CAAyBT,OAAD,IAAa;MACjC,IAAIA,OAAO,CAACtB,GAAR,KAAgBA,GAAhB,IAAuBsB,OAAO,CAACU,WAAR,KAAwBnC,YAAnD,EAAiE;QAC7D,IAAIoC,MAAM,GAAG,CAACtN,KAAD,CAAb;QACAsN,MAAM,GAAGA,MAAM,CAACC,MAAP,CAAc1E,KAAK,CAACC,IAAN,CAAW9I,KAAK,CAAC+I,EAAN,CAASkE,MAAT,EAAX,CAAd,CAAT;QACAN,OAAO,CAACa,SAAR,GAAoB,CAACb,OAAO,CAACpD,MAAR,GACf+D,MAAM,CAAC/D,MAAP,CAAehB,KAAD,IAAW,SAASA,KAAT,GACrBA,KAAK,CAACG,GAAN,CACGpC,WADH,GAEGC,QAFH,CAEYoG,OAAO,CAACpD,MAAR,CAAejD,WAAf,EAFZ,CADqB,GAIrB8B,gBAAgB,CAAC9B,WAAjB,GAA+BC,QAA/B,CAAwCoG,OAAO,CAACpD,MAAR,CAAejD,WAAf,EAAxC,CAJJ,CADe,GAMfgH,MANc,EAMNpE,GANM,CAMFZ,2BANE,CAApB;MAOH;IACJ,CAZD;IAaAmD,GAAG,CAACgB,EAAJ,CAAOgB,iBAAP,CAA0Bd,OAAD,IAAa;MAClC,IAAIA,OAAO,CAACtB,GAAR,KAAgBA,GAAhB,IAAuBsB,OAAO,CAACU,WAAR,KAAwBnC,YAAnD,EAAiE;QAC7D,MAAMwC,cAAc,GAAGf,OAAO,CAACL,MAAR,KAAmBjE,aAAnB,GACjBrI,KADiB,GAEjBA,KAAK,CAAC+I,EAAN,CAASS,GAAT,CAAamD,OAAO,CAACL,MAArB,CAFN;;QAGA,IAAI,CAACoB,cAAL,EAAqB;UACjB;UACA;UACA;QACH;;QACD,IAAIA,cAAJ,EAAoB;UAChBf,OAAO,CAAC9F,KAAR,GAAgB8B,4BAA4B,CAAC+E,cAAD,CAA5C;QACH;MACJ;IACJ,CAdD;IAeAjC,GAAG,CAACgB,EAAJ,CAAOkB,kBAAP,CAA0B,CAAChB,OAAD,EAAUC,GAAV,KAAkB;MACxC,IAAID,OAAO,CAACtB,GAAR,KAAgBA,GAAhB,IAAuBsB,OAAO,CAACU,WAAR,KAAwBnC,YAAnD,EAAiE;QAC7D,MAAMwC,cAAc,GAAGf,OAAO,CAACL,MAAR,KAAmBjE,aAAnB,GACjBrI,KADiB,GAEjBA,KAAK,CAAC+I,EAAN,CAASS,GAAT,CAAamD,OAAO,CAACL,MAArB,CAFN;;QAGA,IAAI,CAACoB,cAAL,EAAqB;UACjB,OAAO7H,YAAY,CAAE,UAAS8G,OAAO,CAACL,MAAO,aAA1B,EAAwC,OAAxC,CAAnB;QACH;;QACD,MAAM;UAAEsB;QAAF,IAAWjB,OAAjB;;QACA,IAAI,CAACxG,OAAO,CAACuH,cAAD,CAAZ,EAA8B;UAC1B;UACA,IAAIE,IAAI,CAAChE,MAAL,KAAgB,CAAhB,IACA,CAAC8D,cAAc,CAAC5D,iBAAf,CAAiC+D,GAAjC,CAAqCD,IAAI,CAAC,CAAD,CAAzC,CADD,IAEAA,IAAI,CAAC,CAAD,CAAJ,IAAWF,cAAc,CAAC/D,MAF9B,EAEsC;YAClCiE,IAAI,CAACE,OAAL,CAAa,QAAb;UACH;QACJ,CAPD,MAQK;UACD;UACAF,IAAI,CAACE,OAAL,CAAa,OAAb;QACH;;QACD/C,gBAAgB,GAAG,KAAnB;QACA4B,OAAO,CAACvN,GAAR,CAAYsO,cAAZ,EAA4BE,IAA5B,EAAkCjB,OAAO,CAAC9F,KAAR,CAAcC,KAAhD;QACAiE,gBAAgB,GAAG,IAAnB;MACH;IACJ,CAzBD;IA0BAU,GAAG,CAACgB,EAAJ,CAAOsB,kBAAP,CAA2BpB,OAAD,IAAa;MACnC,IAAIA,OAAO,CAAC/K,IAAR,CAAaoM,UAAb,CAAwB,IAAxB,CAAJ,EAAmC;QAC/B,MAAM7E,OAAO,GAAGwD,OAAO,CAAC/K,IAAR,CAAa8D,OAAb,CAAqB,QAArB,EAA+B,EAA/B,CAAhB;;QACA,MAAM6C,KAAK,GAAGvI,KAAK,CAAC+I,EAAN,CAASS,GAAT,CAAaL,OAAb,CAAd;;QACA,IAAI,CAACZ,KAAL,EAAY;UACR,OAAO1C,YAAY,CAAE,UAASsD,OAAQ,aAAnB,EAAiC,OAAjC,CAAnB;QACH;;QACD,MAAM;UAAEyE;QAAF,IAAWjB,OAAjB;;QACA,IAAIiB,IAAI,CAAC,CAAD,CAAJ,KAAY,OAAhB,EAAyB;UACrB,OAAO/H,YAAY,CAAE,2BAA0BsD,OAAQ,OAAMyE,IAAK,+BAA/C,CAAnB;QACH,CAT8B,CAU/B;QACA;;;QACAA,IAAI,CAAC,CAAD,CAAJ,GAAU,QAAV;QACA7C,gBAAgB,GAAG,KAAnB;QACA4B,OAAO,CAACvN,GAAR,CAAYmJ,KAAZ,EAAmBqF,IAAnB,EAAyBjB,OAAO,CAAC9F,KAAR,CAAcC,KAAvC;QACAiE,gBAAgB,GAAG,IAAnB;MACH;IACJ,CAlBD;EAmBH,CAtMkB,CAAnB;AAuMH;;AACD,SAASkD,kBAAT,CAA4B5C,GAA5B,EAAiC9C,KAAjC,EAAwC;EACpC,IAAI,CAACyC,mBAAmB,CAACzE,QAApB,CAA6B4E,YAAY,CAAC5C,KAAK,CAACG,GAAP,CAAzC,CAAL,EAA4D;IACxDsC,mBAAmB,CAACV,IAApB,CAAyBa,YAAY,CAAC5C,KAAK,CAACG,GAAP,CAArC;EACH;;EACD7I,mBAAmB,CAAC;IAChB2I,EAAE,EAAE,eADY;IAEhBC,KAAK,EAAE,UAFS;IAGhB6C,IAAI,EAAE,kCAHU;IAIhBC,WAAW,EAAE,OAJG;IAKhBC,QAAQ,EAAE,yBALM;IAMhBR,mBANgB;IAOhBK,GAPgB;IAQhB6C,QAAQ,EAAE;MACNC,eAAe,EAAE;QACb1F,KAAK,EAAE,iCADM;QAEb7G,IAAI,EAAE,SAFO;QAGbwM,YAAY,EAAE;MAHD,CADX,CAMN;MACA;MACA;MACA;MACA;;IAVM;EARM,CAAD,EAoBf3C,GAAD,IAAS;IACR;IACA,MAAMC,GAAG,GAAG,OAAOD,GAAG,CAACC,GAAX,KAAmB,UAAnB,GAAgCD,GAAG,CAACC,GAAJ,CAAQ2C,IAAR,CAAa5C,GAAb,CAAhC,GAAoD6C,IAAI,CAAC5C,GAArE;IACAnD,KAAK,CAACgG,SAAN,CAAgB,CAAC;MAAEC,KAAF;MAASC,OAAT;MAAkBvM,IAAlB;MAAwBwM;IAAxB,CAAD,KAAoC;MAChD,MAAMC,OAAO,GAAGC,eAAe,EAA/B;MACAnD,GAAG,CAACoD,gBAAJ,CAAqB;QACjBC,OAAO,EAAE7D,kBADQ;QAEjBZ,KAAK,EAAE;UACH0E,IAAI,EAAErD,GAAG,EADN;UAEH3G,KAAK,EAAE,QAAQ7C,IAFZ;UAGH8M,QAAQ,EAAE,OAHP;UAIH5E,IAAI,EAAE;YACF7B,KAAK,EAAEN,aAAa,CAACM,KAAK,CAACG,GAAP,CADlB;YAEFuD,MAAM,EAAEhE,aAAa,CAAC/F,IAAD,CAFnB;YAGFwM;UAHE,CAJH;UASHC;QATG;MAFU,CAArB;MAcAH,KAAK,CAAEhJ,MAAD,IAAY;QACdyJ,YAAY,GAAGC,SAAf;QACAzD,GAAG,CAACoD,gBAAJ,CAAqB;UACjBC,OAAO,EAAE7D,kBADQ;UAEjBZ,KAAK,EAAE;YACH0E,IAAI,EAAErD,GAAG,EADN;YAEH3G,KAAK,EAAE,QAAQ7C,IAFZ;YAGH8M,QAAQ,EAAE,KAHP;YAIH5E,IAAI,EAAE;cACF7B,KAAK,EAAEN,aAAa,CAACM,KAAK,CAACG,GAAP,CADlB;cAEFuD,MAAM,EAAEhE,aAAa,CAAC/F,IAAD,CAFnB;cAGFwM,IAHE;cAIFlJ;YAJE,CAJH;YAUHmJ;UAVG;QAFU,CAArB;MAeH,CAjBI,CAAL;MAkBAF,OAAO,CAAE5L,KAAD,IAAW;QACfoM,YAAY,GAAGC,SAAf;QACAzD,GAAG,CAACoD,gBAAJ,CAAqB;UACjBC,OAAO,EAAE7D,kBADQ;UAEjBZ,KAAK,EAAE;YACH0E,IAAI,EAAErD,GAAG,EADN;YAEHyD,OAAO,EAAE,OAFN;YAGHpK,KAAK,EAAE,QAAQ7C,IAHZ;YAIH8M,QAAQ,EAAE,KAJP;YAKH5E,IAAI,EAAE;cACF7B,KAAK,EAAEN,aAAa,CAACM,KAAK,CAACG,GAAP,CADlB;cAEFuD,MAAM,EAAEhE,aAAa,CAAC/F,IAAD,CAFnB;cAGFwM,IAHE;cAIF7L;YAJE,CALH;YAWH8L;UAXG;QAFU,CAArB;MAgBH,CAlBM,CAAP;IAmBH,CArDD,EAqDG,IArDH;;IAsDApG,KAAK,CAACuB,iBAAN,CAAwBoD,OAAxB,CAAiChL,IAAD,IAAU;MACtCtD,KAAK,CAAC,MAAMC,KAAK,CAAC0J,KAAK,CAACrG,IAAD,CAAN,CAAZ,EAA2B,CAACuI,QAAD,EAAWD,QAAX,KAAwB;QACpDiB,GAAG,CAAC2D,qBAAJ;QACA3D,GAAG,CAACW,kBAAJ,CAAuBlB,YAAvB;;QACA,IAAIH,gBAAJ,EAAsB;UAClBU,GAAG,CAACoD,gBAAJ,CAAqB;YACjBC,OAAO,EAAE7D,kBADQ;YAEjBZ,KAAK,EAAE;cACH0E,IAAI,EAAErD,GAAG,EADN;cAEH3G,KAAK,EAAE,QAFJ;cAGHiK,QAAQ,EAAE9M,IAHP;cAIHkI,IAAI,EAAE;gBACFK,QADE;gBAEFD;cAFE,CAJH;cAQHmE,OAAO,EAAEM;YARN;UAFU,CAArB;QAaH;MACJ,CAlBI,EAkBF;QAAEI,IAAI,EAAE;MAAR,CAlBE,CAAL;IAmBH,CApBD;;IAqBA9G,KAAK,CAAC+G,UAAN,CAAiB,CAAC;MAAEpF,MAAF;MAAUtI;IAAV,CAAD,EAAmBiF,KAAnB,KAA6B;MAC1C4E,GAAG,CAAC2D,qBAAJ;MACA3D,GAAG,CAACW,kBAAJ,CAAuBlB,YAAvB;MACA,IAAI,CAACH,gBAAL,EACI,OAJsC,CAK1C;;MACA,MAAMwE,SAAS,GAAG;QACdR,IAAI,EAAErD,GAAG,EADK;QAEd3G,KAAK,EAAE4F,kBAAkB,CAAC/I,IAAD,CAFX;QAGdwI,IAAI,EAAE;UACF7B,KAAK,EAAEN,aAAa,CAACM,KAAK,CAACG,GAAP,CADlB;UAEF,GAAGuB,eAAe,CAACC,MAAD;QAFhB,CAHQ;QAOdyE,OAAO,EAAEM;MAPK,CAAlB,CAN0C,CAe1C;;MACAA,YAAY,GAAGC,SAAf;;MACA,IAAItN,IAAI,KAAKd,YAAY,CAAC+J,aAA1B,EAAyC;QACrC0E,SAAS,CAACP,QAAV,GAAqB,IAArB;MACH,CAFD,MAGK,IAAIpN,IAAI,KAAKd,YAAY,CAACgK,WAA1B,EAAuC;QACxCyE,SAAS,CAACP,QAAV,GAAqB,IAArB;MACH,CAFI,MAGA,IAAI9E,MAAM,IAAI,CAACrB,KAAK,CAACsB,OAAN,CAAcD,MAAd,CAAf,EAAsC;QACvCqF,SAAS,CAACP,QAAV,GAAqB9E,MAAM,CAACtI,IAA5B;MACH;;MACD,IAAIsI,MAAJ,EAAY;QACRqF,SAAS,CAACnF,IAAV,CAAe,aAAf,IAAgC;UAC5BjC,OAAO,EAAE;YACLD,OAAO,EAAE,eADJ;YAELtG,IAAI,EAAE,QAFD;YAGLsK,OAAO,EAAE,qBAHJ;YAILpF,KAAK,EAAEoD;UAJF;QADmB,CAAhC;MAQH;;MACDuB,GAAG,CAACoD,gBAAJ,CAAqB;QACjBC,OAAO,EAAE7D,kBADQ;QAEjBZ,KAAK,EAAEkF;MAFU,CAArB;IAIH,CAxCD,EAwCG;MAAEC,QAAQ,EAAE,IAAZ;MAAkBC,KAAK,EAAE;IAAzB,CAxCH;IAyCA,MAAMC,SAAS,GAAGnH,KAAK,CAACoH,UAAxB;IACApH,KAAK,CAACoH,UAAN,GAAmB7Q,OAAO,CAAE8Q,QAAD,IAAc;MACrCF,SAAS,CAACE,QAAD,CAAT;MACAnE,GAAG,CAACoD,gBAAJ,CAAqB;QACjBC,OAAO,EAAE7D,kBADQ;QAEjBZ,KAAK,EAAE;UACH0E,IAAI,EAAErD,GAAG,EADN;UAEH3G,KAAK,EAAE,QAAQwD,KAAK,CAACG,GAFlB;UAGHsG,QAAQ,EAAE,YAHP;UAIH5E,IAAI,EAAE;YACF7B,KAAK,EAAEN,aAAa,CAACM,KAAK,CAACG,GAAP,CADlB;YAEFmH,IAAI,EAAE5H,aAAa,CAAE,YAAF;UAFjB;QAJH;MAFU,CAArB,EAFqC,CAcrC;;MACAwD,GAAG,CAAC2D,qBAAJ;MACA3D,GAAG,CAACU,iBAAJ,CAAsBjB,YAAtB;MACAO,GAAG,CAACW,kBAAJ,CAAuBlB,YAAvB;IACH,CAlByB,CAA1B;IAmBA,MAAM;MAAE4E;IAAF,IAAevH,KAArB;;IACAA,KAAK,CAACuH,QAAN,GAAiB,MAAM;MACnBA,QAAQ;MACRrE,GAAG,CAAC2D,qBAAJ;MACA3D,GAAG,CAACU,iBAAJ,CAAsBjB,YAAtB;MACAO,GAAG,CAACW,kBAAJ,CAAuBlB,YAAvB;MACAO,GAAG,CAACsE,WAAJ,GAAkB5B,eAAlB,IACItI,YAAY,CAAE,aAAY0C,KAAK,CAACG,GAAI,YAAxB,CADhB;IAEH,CAPD,CA5IQ,CAoJR;;;IACA+C,GAAG,CAAC2D,qBAAJ;IACA3D,GAAG,CAACU,iBAAJ,CAAsBjB,YAAtB;IACAO,GAAG,CAACW,kBAAJ,CAAuBlB,YAAvB;IACAO,GAAG,CAACsE,WAAJ,GAAkB5B,eAAlB,IACItI,YAAY,CAAE,IAAG0C,KAAK,CAACG,GAAI,sBAAf,CADhB;EAEH,CA9KkB,CAAnB;AA+KH;;AACD,IAAIkG,eAAe,GAAG,CAAtB;AACA,IAAIK,YAAJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASe,sBAAT,CAAgCzH,KAAhC,EAAuC0H,WAAvC,EAAoD;EAChD;EACA,MAAMjE,OAAO,GAAGiE,WAAW,CAACvG,MAAZ,CAAmB,CAACwG,YAAD,EAAeC,UAAf,KAA8B;IAC7D;IACAD,YAAY,CAACC,UAAD,CAAZ,GAA2BxR,KAAK,CAAC4J,KAAD,CAAL,CAAa4H,UAAb,CAA3B;IACA,OAAOD,YAAP;EACH,CAJe,EAIb,EAJa,CAAhB;;EAKA,KAAK,MAAMC,UAAX,IAAyBnE,OAAzB,EAAkC;IAC9BzD,KAAK,CAAC4H,UAAD,CAAL,GAAoB,YAAY;MAC5B;MACA;MACA,MAAMC,SAAS,GAAGxB,eAAlB;MACA,MAAMyB,YAAY,GAAG,IAAIC,KAAJ,CAAU/H,KAAV,EAAiB;QAClCiB,GAAG,CAAC,GAAGkF,IAAJ,EAAU;UACTO,YAAY,GAAGmB,SAAf;UACA,OAAOG,OAAO,CAAC/G,GAAR,CAAY,GAAGkF,IAAf,CAAP;QACH,CAJiC;;QAKlCtP,GAAG,CAAC,GAAGsP,IAAJ,EAAU;UACTO,YAAY,GAAGmB,SAAf;UACA,OAAOG,OAAO,CAACnR,GAAR,CAAY,GAAGsP,IAAf,CAAP;QACH;;MARiC,CAAjB,CAArB;MAUA,OAAO1C,OAAO,CAACmE,UAAD,CAAP,CAAoBK,KAApB,CAA0BH,YAA1B,EAAwCI,SAAxC,CAAP;IACH,CAfD;EAgBH;AACJ;AACD;AACA;AACA;;;AACA,SAASC,cAAT,CAAwB;EAAErF,GAAF;EAAO9C,KAAP;EAAcoI;AAAd,CAAxB,EAAiD;EAC7C;EACA,IAAIpI,KAAK,CAACG,GAAN,CAAUsF,UAAV,CAAqB,QAArB,CAAJ,EAAoC;IAChC;EACH,CAJ4C,CAK7C;;;EACA,IAAI2C,OAAO,CAAC9J,KAAZ,EAAmB;IACf0B,KAAK,CAACgE,aAAN,GAAsB,IAAtB;EACH,CAR4C,CAS7C;EACA;;;EACA,IAAI,OAAOoE,OAAO,CAAC9J,KAAf,KAAyB,UAA7B,EAAyC;IACrCmJ,sBAAsB,EACtB;IACAzH,KAFsB,EAEf9H,MAAM,CAACuI,IAAP,CAAY2H,OAAO,CAAC3E,OAApB,CAFe,CAAtB;IAGA,MAAM4E,iBAAiB,GAAGrI,KAAK,CAACoH,UAAhC,CAJqC,CAKrC;;IACAhR,KAAK,CAAC4J,KAAD,CAAL,CAAaoH,UAAb,GAA0B,UAAUC,QAAV,EAAoB;MAC1CgB,iBAAiB,CAACJ,KAAlB,CAAwB,IAAxB,EAA8BC,SAA9B;MACAT,sBAAsB,CAACzH,KAAD,EAAQ9H,MAAM,CAACuI,IAAP,CAAY4G,QAAQ,CAACiB,WAAT,CAAqB7E,OAAjC,CAAR,CAAtB;IACH,CAHD;EAIH;;EACDiC,kBAAkB,CAAC5C,GAAD,EAClB;EACA9C,KAFkB,CAAlB;AAGH;AAED;AACA;AACA;;;AACA,SAASuI,WAAT,GAAuB;EACnB,MAAMC,KAAK,GAAGhS,WAAW,CAAC,IAAD,CAAzB,CADmB,CAEnB;EACA;;EACA,MAAM8H,KAAK,GAAGkK,KAAK,CAACC,GAAN,CAAU,MAAMhS,GAAG,CAAC,EAAD,CAAnB,CAAd;EACA,IAAIiS,EAAE,GAAG,EAAT,CALmB,CAMnB;;EACA,IAAIC,aAAa,GAAG,EAApB;EACA,MAAMlR,KAAK,GAAGlB,OAAO,CAAC;IAClBqS,OAAO,CAAC9F,GAAD,EAAM;MACT;MACA;MACAtL,cAAc,CAACC,KAAD,CAAd;;MACA,IAAI,CAACf,MAAL,EAAa;QACTe,KAAK,CAACoR,EAAN,GAAW/F,GAAX;QACAA,GAAG,CAACgG,OAAJ,CAAYnR,WAAZ,EAAyBF,KAAzB;QACAqL,GAAG,CAACiG,MAAJ,CAAWC,gBAAX,CAA4BC,MAA5B,GAAqCxR,KAArC;QACA;;QACA,IAAIiB,YAAJ,EAAkB;UACdmK,qBAAqB,CAACC,GAAD,EAAMrL,KAAN,CAArB;QACH;;QACDkR,aAAa,CAAChE,OAAd,CAAuBuE,MAAD,IAAYR,EAAE,CAAC3G,IAAH,CAAQmH,MAAR,CAAlC;QACAP,aAAa,GAAG,EAAhB;MACH;IACJ,CAhBiB;;IAiBlBQ,GAAG,CAACD,MAAD,EAAS;MACR,IAAI,CAAC,KAAKL,EAAN,IAAY,CAACnS,MAAjB,EAAyB;QACrBiS,aAAa,CAAC5G,IAAd,CAAmBmH,MAAnB;MACH,CAFD,MAGK;QACDR,EAAE,CAAC3G,IAAH,CAAQmH,MAAR;MACH;;MACD,OAAO,IAAP;IACH,CAzBiB;;IA0BlBR,EA1BkB;IA2BlB;IACA;IACAG,EAAE,EAAE,IA7Bc;IA8BlBO,EAAE,EAAEZ,KA9Bc;IA+BlBhI,EAAE,EAAE,IAAI6I,GAAJ,EA/Bc;IAgClB/K;EAhCkB,CAAD,CAArB,CARmB,CA0CnB;EACA;;EACA,IAAI5F,YAAY,IAAI,OAAOqP,KAAP,KAAiB,WAArC,EAAkD;IAC9CtQ,KAAK,CAAC0R,GAAN,CAAUhB,cAAV;EACH;;EACD,OAAO1Q,KAAP;AACH;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAM6R,UAAU,GAAIC,EAAD,IAAQ;EACvB,OAAO,OAAOA,EAAP,KAAc,UAAd,IAA4B,OAAOA,EAAE,CAACpJ,GAAV,KAAkB,QAArD;AACH,CAFD;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASoC,WAAT,CAAqBiH,QAArB,EAA+BC,QAA/B,EAAyC;EACrC;EACA,KAAK,MAAM3I,GAAX,IAAkB2I,QAAlB,EAA4B;IACxB,MAAMC,QAAQ,GAAGD,QAAQ,CAAC3I,GAAD,CAAzB,CADwB,CAExB;;IACA,IAAI,EAAEA,GAAG,IAAI0I,QAAT,CAAJ,EAAwB;MACpB;IACH;;IACD,MAAMG,WAAW,GAAGH,QAAQ,CAAC1I,GAAD,CAA5B;;IACA,IAAI9I,aAAa,CAAC2R,WAAD,CAAb,IACA3R,aAAa,CAAC0R,QAAD,CADb,IAEA,CAAC/S,KAAK,CAAC+S,QAAD,CAFN,IAGA,CAAC9S,UAAU,CAAC8S,QAAD,CAHf,EAG2B;MACvBF,QAAQ,CAAC1I,GAAD,CAAR,GAAgByB,WAAW,CAACoH,WAAD,EAAcD,QAAd,CAA3B;IACH,CALD,MAMK;MACD;MACA;MACA,IAAIhT,MAAJ,EAAY;QACRG,GAAG,CAAC2S,QAAD,EAAW1I,GAAX,EAAgB4I,QAAhB,CAAH;MACH,CAFD,MAGK;QACDF,QAAQ,CAAC1I,GAAD,CAAR,GAAgB4I,QAAhB;MACH;IACJ;EACJ;;EACD,OAAOF,QAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASI,eAAT,CAAyBC,eAAzB,EAA0CC,GAA1C,EAA+C;EAC3C;EACA,IAAI,EAAElS,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA3B,CAAJ,EAA8C;IAC1C,OAAO,MAAM,CAAG,CAAhB;EACH;;EACD,OAAQiS,SAAD,IAAe;IAClB,MAAMtS,KAAK,GAAGqS,GAAG,CAACjI,IAAJ,CAASpK,KAAT,IAAkBoS,eAAe,CAACG,MAAhD;;IACA,IAAI,CAACvS,KAAL,EAAY;MACR;MACA;IACH,CALiB,CAMlB;;;IACAqS,GAAG,CAACjI,IAAJ,CAASpK,KAAT,GAAiBA,KAAjB,CAPkB,CAQlB;;IACA,KAAK,MAAMwS,UAAX,IAAyBF,SAAzB,EAAoC;MAChC,MAAMG,QAAQ,GAAGH,SAAS,CAACE,UAAD,CAA1B,CADgC,CAEhC;;MACA,IAAIX,UAAU,CAACY,QAAD,CAAV,IAAwBzS,KAAK,CAAC+I,EAAN,CAAS8E,GAAT,CAAa4E,QAAQ,CAAC/J,GAAtB,CAA5B,EAAwD;QACpD;QACA,MAAMF,EAAE,GAAGiK,QAAQ,CAAC/J,GAApB;;QACA,IAAIF,EAAE,KAAK4J,eAAe,CAAC1J,GAA3B,EAAgC;UAC5B9F,OAAO,CAACqD,IAAR,CAAc,qCAAoCmM,eAAe,CAAC1J,GAAI,SAAQF,EAAG,eAAjF,EAD4B,CAE5B;;UACA,OAAO6J,GAAG,CAACK,UAAJ,EAAP;QACH;;QACD,MAAMC,aAAa,GAAG3S,KAAK,CAAC+I,EAAN,CAASS,GAAT,CAAahB,EAAb,CAAtB;;QACA,IAAI,CAACmK,aAAL,EAAoB;UAChB/P,OAAO,CAACsD,GAAR,CAAa,uDAAb;UACA;QACH;;QACDuM,QAAQ,CAACzS,KAAD,EAAQ2S,aAAR,CAAR;MACH;IACJ;EACJ,CA5BD;AA6BH;;AAED,MAAMC,IAAI,GAAG,MAAM,CAAG,CAAtB;;AACA,SAASC,eAAT,CAAyBC,aAAzB,EAAwCC,QAAxC,EAAkDvD,QAAlD,EAA4DwD,SAAS,GAAGJ,IAAxE,EAA8E;EAC1EE,aAAa,CAACxI,IAAd,CAAmByI,QAAnB;;EACA,MAAME,kBAAkB,GAAG,MAAM;IAC7B,MAAMC,GAAG,GAAGJ,aAAa,CAACK,OAAd,CAAsBJ,QAAtB,CAAZ;;IACA,IAAIG,GAAG,GAAG,CAAC,CAAX,EAAc;MACVJ,aAAa,CAACM,MAAd,CAAqBF,GAArB,EAA0B,CAA1B;MACAF,SAAS;IACZ;EACJ,CAND;;EAOA,IAAI,CAACxD,QAAD,IAAanQ,eAAe,EAAhC,EAAoC;IAChCC,cAAc,CAAC2T,kBAAD,CAAd;EACH;;EACD,OAAOA,kBAAP;AACH;;AACD,SAASI,oBAAT,CAA8BP,aAA9B,EAA6C,GAAGpE,IAAhD,EAAsD;EAClDoE,aAAa,CAACQ,KAAd,GAAsBpG,OAAtB,CAA+B6F,QAAD,IAAc;IACxCA,QAAQ,CAAC,GAAGrE,IAAJ,CAAR;EACH,CAFD;AAGH;;AAED,SAAS6E,oBAAT,CAA8B/O,MAA9B,EAAsCgP,YAAtC,EAAoD;EAChD;EACA,IAAIhP,MAAM,YAAYoN,GAAlB,IAAyB4B,YAAY,YAAY5B,GAArD,EAA0D;IACtD4B,YAAY,CAACtG,OAAb,CAAqB,CAACpG,KAAD,EAAQuC,GAAR,KAAgB7E,MAAM,CAACpF,GAAP,CAAWiK,GAAX,EAAgBvC,KAAhB,CAArC;EACH,CAJ+C,CAKhD;;;EACA,IAAItC,MAAM,YAAYiP,GAAlB,IAAyBD,YAAY,YAAYC,GAArD,EAA0D;IACtDD,YAAY,CAACtG,OAAb,CAAqB1I,MAAM,CAACkP,GAA5B,EAAiClP,MAAjC;EACH,CAR+C,CAShD;;;EACA,KAAK,MAAM6E,GAAX,IAAkBmK,YAAlB,EAAgC;IAC5B,IAAI,CAACA,YAAY,CAACG,cAAb,CAA4BtK,GAA5B,CAAL,EACI;IACJ,MAAM4I,QAAQ,GAAGuB,YAAY,CAACnK,GAAD,CAA7B;IACA,MAAM6I,WAAW,GAAG1N,MAAM,CAAC6E,GAAD,CAA1B;;IACA,IAAI9I,aAAa,CAAC2R,WAAD,CAAb,IACA3R,aAAa,CAAC0R,QAAD,CADb,IAEAzN,MAAM,CAACmP,cAAP,CAAsBtK,GAAtB,CAFA,IAGA,CAACnK,KAAK,CAAC+S,QAAD,CAHN,IAIA,CAAC9S,UAAU,CAAC8S,QAAD,CAJf,EAI2B;MACvB;MACA;MACA;MACAzN,MAAM,CAAC6E,GAAD,CAAN,GAAckK,oBAAoB,CAACrB,WAAD,EAAcD,QAAd,CAAlC;IACH,CATD,MAUK;MACD;MACAzN,MAAM,CAAC6E,GAAD,CAAN,GAAc4I,QAAd;IACH;EACJ;;EACD,OAAOzN,MAAP;AACH;;AACD,MAAMoP,iBAAiB,GAAIzT,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA1B,GACpBC,MAAM,CAAC,qBAAD,CADc;AAEpB;AAA2BA,MAAM,EAFvC;AAGA,MAAMuT,cAAc,GAAG,aAAc,IAAIC,OAAJ,EAArC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,WAAT,CAAqBC,GAArB,EAA0B;EACtB,OAAO/U,MAAM,GACP;;EACE;EAA2B4U,cAAc,CAACzU,GAAf,CAAmB4U,GAAnB,EAAwB,CAAxB,KAA8BA,GAFpD,GAGPvT,MAAM,CAACwT,cAAP,CAAsBD,GAAtB,EAA2BJ,iBAA3B,EAA8C,EAA9C,CAHN;AAIH;AACD;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASM,aAAT,CAAuBF,GAAvB,EAA4B;EACxB,OAAO/U,MAAM;EACP;EAA2B,CAAC4U,cAAc,CAAChG,GAAf,CAAmBmG,GAAnB,CADrB,GAEP,CAACzT,aAAa,CAACyT,GAAD,CAAd,IAAuB,CAACA,GAAG,CAACL,cAAJ,CAAmBC,iBAAnB,CAF9B;AAGH;;AACD,MAAM;EAAEjO;AAAF,IAAalF,MAAnB;;AACA,SAAS0T,UAAT,CAAoB3T,CAApB,EAAuB;EACnB,OAAO,CAAC,EAAEtB,KAAK,CAACsB,CAAD,CAAL,IAAYA,CAAC,CAAC4T,MAAhB,CAAR;AACH;;AACD,SAASC,kBAAT,CAA4B7L,EAA5B,EAAgCmI,OAAhC,EAAyC3Q,KAAzC,EAAgDqS,GAAhD,EAAqD;EACjD,MAAM;IAAExL,KAAF;IAASmF,OAAT;IAAkB1C;EAAlB,IAA8BqH,OAApC;EACA,MAAM2D,YAAY,GAAGtU,KAAK,CAAC6G,KAAN,CAAYC,KAAZ,CAAkB0B,EAAlB,CAArB;EACA,IAAID,KAAJ;;EACA,SAASgM,KAAT,GAAiB;IACb,IAAI,CAACD,YAAD,KAAkB,EAAEnU,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA3B,KAA4C,CAACgS,GAA/D,CAAJ,EAAyE;MACrE;MACA,IAAIpT,MAAJ,EAAY;QACRG,GAAG,CAACY,KAAK,CAAC6G,KAAN,CAAYC,KAAb,EAAoB0B,EAApB,EAAwB3B,KAAK,GAAGA,KAAK,EAAR,GAAa,EAA1C,CAAH;MACH,CAFD,MAGK;QACD7G,KAAK,CAAC6G,KAAN,CAAYC,KAAZ,CAAkB0B,EAAlB,IAAwB3B,KAAK,GAAGA,KAAK,EAAR,GAAa,EAA1C;MACH;IACJ,CATY,CAUb;;;IACA,MAAM2N,UAAU,GAAIrU,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA1B,IAA2CgS,GAA3C,GACb;IACEzS,MAAM,CAACZ,GAAG,CAAC6H,KAAK,GAAGA,KAAK,EAAR,GAAa,EAAnB,CAAH,CAA0BC,KAA3B,CAFK,GAGblH,MAAM,CAACI,KAAK,CAAC6G,KAAN,CAAYC,KAAZ,CAAkB0B,EAAlB,CAAD,CAHZ;IAIA,OAAO7C,MAAM,CAAC6O,UAAD,EAAaxI,OAAb,EAAsBvL,MAAM,CAACuI,IAAP,CAAYM,OAAO,IAAI,EAAvB,EAA2BI,MAA3B,CAAkC,CAAC+K,eAAD,EAAkBvS,IAAlB,KAA2B;MAC5F,IAAK/B,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA1B,IAA2C6B,IAAI,IAAIsS,UAAvD,EAAmE;QAC/D5R,OAAO,CAACqD,IAAR,CAAc,uGAAsG/D,IAAK,eAAcsG,EAAG,IAA1I;MACH;;MACDiM,eAAe,CAACvS,IAAD,CAAf,GAAwBpD,OAAO,CAACa,QAAQ,CAAC,MAAM;QAC3CI,cAAc,CAACC,KAAD,CAAd,CAD2C,CAE3C;;QACA,MAAMuI,KAAK,GAAGvI,KAAK,CAAC+I,EAAN,CAASS,GAAT,CAAahB,EAAb,CAAd,CAH2C,CAI3C;;QACA;;;QACA,IAAIvJ,MAAM,IAAI,CAACsJ,KAAK,CAACmM,EAArB,EACI,OAPuC,CAQ3C;QACA;QACA;;QACA,OAAOpL,OAAO,CAACpH,IAAD,CAAP,CAActB,IAAd,CAAmB2H,KAAnB,EAA0BA,KAA1B,CAAP;MACH,CAZuC,CAAT,CAA/B;MAaA,OAAOkM,eAAP;IACH,CAlBkC,EAkBhC,EAlBgC,CAAtB,CAAb;EAmBH;;EACDlM,KAAK,GAAGoM,gBAAgB,CAACnM,EAAD,EAAK+L,KAAL,EAAY5D,OAAZ,EAAqB3Q,KAArB,EAA4BqS,GAA5B,EAAiC,IAAjC,CAAxB;;EACA9J,KAAK,CAACiE,MAAN,GAAe,SAASA,MAAT,GAAkB;IAC7B,MAAMuF,QAAQ,GAAGlL,KAAK,GAAGA,KAAK,EAAR,GAAa,EAAnC,CAD6B,CAE7B;;IACA,KAAK+N,MAAL,CAAajL,MAAD,IAAY;MACpBhE,MAAM,CAACgE,MAAD,EAASoI,QAAT,CAAN;IACH,CAFD;EAGH,CAND;;EAOA,OAAOxJ,KAAP;AACH;;AACD,SAASoM,gBAAT,CAA0BjM,GAA1B,EAA+B6L,KAA/B,EAAsC5D,OAAO,GAAG,EAAhD,EAAoD3Q,KAApD,EAA2DqS,GAA3D,EAAgEwC,cAAhE,EAAgF;EAC5E,IAAI9D,KAAJ;EACA,MAAM+D,gBAAgB,GAAGnP,MAAM,CAAC;IAAEqG,OAAO,EAAE;EAAX,CAAD,EAAkB2E,OAAlB,CAA/B;EACA;EACA;;EACA,IAAKxQ,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA1B,IAA2C,CAACL,KAAK,CAAC2R,EAAN,CAASoD,MAAzD,EAAiE;IAC7D,MAAM,IAAItP,KAAJ,CAAU,iBAAV,CAAN;EACH,CAP2E,CAQ5E;;;EACA,MAAMuP,iBAAiB,GAAG;IACtB3F,IAAI,EAAE,IADgB,CAEtB;;EAFsB,CAA1B;EAIA;;EACA,IAAKlP,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA1B,IAA2C,CAACpB,MAAhD,EAAwD;IACpD+V,iBAAiB,CAACC,SAAlB,GAA+B5K,KAAD,IAAW;MACrC;MACA,IAAI6K,WAAJ,EAAiB;QACbC,cAAc,GAAG9K,KAAjB,CADa,CAEb;MACH,CAHD,MAIK,IAAI6K,WAAW,IAAI,KAAf,IAAwB,CAAC3M,KAAK,CAAC6M,YAAnC,EAAiD;QAClD;;QACA;QACA,IAAIvM,KAAK,CAACsB,OAAN,CAAcgL,cAAd,CAAJ,EAAmC;UAC/BA,cAAc,CAAC7K,IAAf,CAAoBD,KAApB;QACH,CAFD,MAGK;UACDzH,OAAO,CAACC,KAAR,CAAc,kFAAd;QACH;MACJ;IACJ,CAhBD;EAiBH,CAhC2E,CAiC5E;;;EACA,IAAIqS,WAAJ,CAlC4E,CAkC3D;;EACjB,IAAIG,eAAJ,CAnC4E,CAmCvD;;EACrB,IAAIvC,aAAa,GAAGhU,OAAO,CAAC,EAAD,CAA3B;EACA,IAAIwW,mBAAmB,GAAGxW,OAAO,CAAC,EAAD,CAAjC;EACA,IAAIqW,cAAJ;EACA,MAAMb,YAAY,GAAGtU,KAAK,CAAC6G,KAAN,CAAYC,KAAZ,CAAkB4B,GAAlB,CAArB,CAvC4E,CAwC5E;EACA;;EACA,IAAI,CAACmM,cAAD,IAAmB,CAACP,YAApB,KAAqC,EAAEnU,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA3B,KAA4C,CAACgS,GAAlF,CAAJ,EAA4F;IACxF;IACA,IAAIpT,MAAJ,EAAY;MACRG,GAAG,CAACY,KAAK,CAAC6G,KAAN,CAAYC,KAAb,EAAoB4B,GAApB,EAAyB,EAAzB,CAAH;IACH,CAFD,MAGK;MACD1I,KAAK,CAAC6G,KAAN,CAAYC,KAAZ,CAAkB4B,GAAlB,IAAyB,EAAzB;IACH;EACJ;;EACD,MAAM6M,QAAQ,GAAGvW,GAAG,CAAC,EAAD,CAApB,CAnD4E,CAoD5E;EACA;;EACA,IAAIwW,cAAJ;;EACA,SAASZ,MAAT,CAAgBa,qBAAhB,EAAuC;IACnC,IAAIC,oBAAJ;IACAR,WAAW,GAAGG,eAAe,GAAG,KAAhC,CAFmC,CAGnC;;IACA;;IACA,IAAKlV,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA9B,EAA6C;MACzC8U,cAAc,GAAG,EAAjB;IACH;;IACD,IAAI,OAAOM,qBAAP,KAAiC,UAArC,EAAiD;MAC7CA,qBAAqB,CAACzV,KAAK,CAAC6G,KAAN,CAAYC,KAAZ,CAAkB4B,GAAlB,CAAD,CAArB;MACAgN,oBAAoB,GAAG;QACnB9T,IAAI,EAAEd,YAAY,CAAC+J,aADA;QAEnB1B,OAAO,EAAET,GAFU;QAGnBwB,MAAM,EAAEiL;MAHW,CAAvB;IAKH,CAPD,MAQK;MACD5B,oBAAoB,CAACvT,KAAK,CAAC6G,KAAN,CAAYC,KAAZ,CAAkB4B,GAAlB,CAAD,EAAyB+M,qBAAzB,CAApB;MACAC,oBAAoB,GAAG;QACnB9T,IAAI,EAAEd,YAAY,CAACgK,WADA;QAEnB6B,OAAO,EAAE8I,qBAFU;QAGnBtM,OAAO,EAAET,GAHU;QAInBwB,MAAM,EAAEiL;MAJW,CAAvB;IAMH;;IACD,MAAMQ,YAAY,GAAIH,cAAc,GAAGlV,MAAM,EAA7C;IACAZ,QAAQ,GAAGkW,IAAX,CAAgB,MAAM;MAClB,IAAIJ,cAAc,KAAKG,YAAvB,EAAqC;QACjCT,WAAW,GAAG,IAAd;MACH;IACJ,CAJD;IAKAG,eAAe,GAAG,IAAlB,CA/BmC,CAgCnC;;IACAhC,oBAAoB,CAACP,aAAD,EAAgB4C,oBAAhB,EAAsC1V,KAAK,CAAC6G,KAAN,CAAYC,KAAZ,CAAkB4B,GAAlB,CAAtC,CAApB;EACH;EACD;;;EACA,MAAM8D,MAAM,GAAIrM,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA1B,GACT,MAAM;IACJ,MAAM,IAAIoF,KAAJ,CAAW,cAAaiD,GAAI,oEAA5B,CAAN;EACH,CAHU,GAITkK,IAJN;;EAKA,SAAS9C,QAAT,GAAoB;IAChBiB,KAAK,CAAC8E,IAAN;IACA/C,aAAa,GAAG,EAAhB;IACAwC,mBAAmB,GAAG,EAAtB;;IACAtV,KAAK,CAAC+I,EAAN,CAAS+M,MAAT,CAAgBpN,GAAhB;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;EACI,SAASqN,UAAT,CAAoB7T,IAApB,EAA0B+J,MAA1B,EAAkC;IAC9B,OAAO,YAAY;MACflM,cAAc,CAACC,KAAD,CAAd;MACA,MAAM0O,IAAI,GAAG7F,KAAK,CAACC,IAAN,CAAW2H,SAAX,CAAb;MACA,MAAMuF,iBAAiB,GAAG,EAA1B;MACA,MAAMC,mBAAmB,GAAG,EAA5B;;MACA,SAASzH,KAAT,CAAeuE,QAAf,EAAyB;QACrBiD,iBAAiB,CAAC1L,IAAlB,CAAuByI,QAAvB;MACH;;MACD,SAAStE,OAAT,CAAiBsE,QAAjB,EAA2B;QACvBkD,mBAAmB,CAAC3L,IAApB,CAAyByI,QAAzB;MACH,CAVc,CAWf;;;MACAM,oBAAoB,CAACiC,mBAAD,EAAsB;QACtC5G,IADsC;QAEtCxM,IAFsC;QAGtCqG,KAHsC;QAItCiG,KAJsC;QAKtCC;MALsC,CAAtB,CAApB;MAOA,IAAIyH,GAAJ;;MACA,IAAI;QACAA,GAAG,GAAGjK,MAAM,CAACuE,KAAP,CAAa,QAAQ,KAAK9H,GAAL,KAAaA,GAArB,GAA2B,IAA3B,GAAkCH,KAA/C,EAAsDmG,IAAtD,CAAN,CADA,CAEA;MACH,CAHD,CAIA,OAAO7L,KAAP,EAAc;QACVwQ,oBAAoB,CAAC4C,mBAAD,EAAsBpT,KAAtB,CAApB;QACA,MAAMA,KAAN;MACH;;MACD,IAAIqT,GAAG,YAAY3O,OAAnB,EAA4B;QACxB,OAAO2O,GAAG,CACLN,IADE,CACI9O,KAAD,IAAW;UACjBuM,oBAAoB,CAAC2C,iBAAD,EAAoBlP,KAApB,CAApB;UACA,OAAOA,KAAP;QACH,CAJM,EAKFqP,KALE,CAKKtT,KAAD,IAAW;UAClBwQ,oBAAoB,CAAC4C,mBAAD,EAAsBpT,KAAtB,CAApB;UACA,OAAO0E,OAAO,CAACE,MAAR,CAAe5E,KAAf,CAAP;QACH,CARM,CAAP;MASH,CAtCc,CAuCf;;;MACAwQ,oBAAoB,CAAC2C,iBAAD,EAAoBE,GAApB,CAApB;MACA,OAAOA,GAAP;IACH,CA1CD;EA2CH;;EACD,MAAMrF,WAAW,GAAG,aAAc/R,OAAO,CAAC;IACtCkN,OAAO,EAAE,EAD6B;IAEtC1C,OAAO,EAAE,EAF6B;IAGtCzC,KAAK,EAAE,EAH+B;IAItC0O;EAJsC,CAAD,CAAzC;;EAMA,MAAMa,YAAY,GAAG;IACjBnF,EAAE,EAAEjR,KADa;IAEjB;IACA0I,GAHiB;IAIjB6F,SAAS,EAAEsE,eAAe,CAACxE,IAAhB,CAAqB,IAArB,EAA2BiH,mBAA3B,CAJM;IAKjBV,MALiB;IAMjBpI,MANiB;;IAOjB8C,UAAU,CAACyD,QAAD,EAAWpC,OAAO,GAAG,EAArB,EAAyB;MAC/B,MAAMsC,kBAAkB,GAAGJ,eAAe,CAACC,aAAD,EAAgBC,QAAhB,EAA0BpC,OAAO,CAACnB,QAAlC,EAA4C,MAAM6G,WAAW,EAA7D,CAA1C;MACA,MAAMA,WAAW,GAAGtF,KAAK,CAACC,GAAN,CAAU,MAAMpS,KAAK,CAAC,MAAMoB,KAAK,CAAC6G,KAAN,CAAYC,KAAZ,CAAkB4B,GAAlB,CAAP,EAAgC7B,KAAD,IAAW;QAC/E,IAAI8J,OAAO,CAAClB,KAAR,KAAkB,MAAlB,GAA2B4F,eAA3B,GAA6CH,WAAjD,EAA8D;UAC1DnC,QAAQ,CAAC;YACL5J,OAAO,EAAET,GADJ;YAEL9G,IAAI,EAAEd,YAAY,CAAC8J,MAFd;YAGLV,MAAM,EAAEiL;UAHH,CAAD,EAILtO,KAJK,CAAR;QAKH;MACJ,CARwC,EAQtClB,MAAM,CAAC,EAAD,EAAKqP,iBAAL,EAAwBrE,OAAxB,CARgC,CAArB,CAApB;MASA,OAAOsC,kBAAP;IACH,CAnBgB;;IAoBjBnD;EApBiB,CAArB;EAsBA;;EACA,IAAI7Q,MAAJ,EAAY;IACR;IACAmX,YAAY,CAAC1B,EAAb,GAAkB,KAAlB;EACH;;EACD,MAAMnM,KAAK,GAAGhJ,QAAQ,CAAEY,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA1B,IAA2CY,YAA3C,GACjB0E,MAAM,CAAC;IACLkL,WADK;IAEL/G,iBAAiB,EAAEhL,OAAO,CAAC,IAAI2U,GAAJ,EAAD,CAFrB,CAEkC;;EAFlC,CAAD,EAGL2C,YAHK,CAIR;EACA;EALQ,CADW,GAQjBA,YARgB,CAAtB,CA3L4E,CAoM5E;EACA;;EACApW,KAAK,CAAC+I,EAAN,CAAS3J,GAAT,CAAasJ,GAAb,EAAkBH,KAAlB,EAtM4E,CAuM5E;;;EACA,MAAM+N,UAAU,GAAGtW,KAAK,CAAC2R,EAAN,CAASX,GAAT,CAAa,MAAM;IAClCD,KAAK,GAAGhS,WAAW,EAAnB;IACA,OAAOgS,KAAK,CAACC,GAAN,CAAU,MAAMuD,KAAK,EAArB,CAAP;EACH,CAHkB,CAAnB,CAxM4E,CA4M5E;;;EACA,KAAK,MAAMlL,GAAX,IAAkBiN,UAAlB,EAA8B;IAC1B,MAAMC,IAAI,GAAGD,UAAU,CAACjN,GAAD,CAAvB;;IACA,IAAKnK,KAAK,CAACqX,IAAD,CAAL,IAAe,CAACpC,UAAU,CAACoC,IAAD,CAA3B,IAAsCpX,UAAU,CAACoX,IAAD,CAApD,EAA4D;MACxD;MACA,IAAKpW,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA1B,IAA2CgS,GAA/C,EAAoD;QAChDjT,GAAG,CAACmW,QAAQ,CAACzO,KAAV,EAAiBuC,GAAjB,EAAsB7J,KAAK,CAAC8W,UAAD,EAAajN,GAAb,CAA3B,CAAH,CADgD,CAEhD;QACA;MACH,CAJD,MAKK,IAAI,CAACwL,cAAL,EAAqB;QACtB;QACA,IAAIP,YAAY,IAAIJ,aAAa,CAACqC,IAAD,CAAjC,EAAyC;UACrC,IAAIrX,KAAK,CAACqX,IAAD,CAAT,EAAiB;YACbA,IAAI,CAACzP,KAAL,GAAawN,YAAY,CAACjL,GAAD,CAAzB;UACH,CAFD,MAGK;YACD;YACA;YACAkK,oBAAoB,CAACgD,IAAD,EAAOjC,YAAY,CAACjL,GAAD,CAAnB,CAApB;UACH;QACJ,CAXqB,CAYtB;;QACA;;;QACA,IAAIpK,MAAJ,EAAY;UACRG,GAAG,CAACY,KAAK,CAAC6G,KAAN,CAAYC,KAAZ,CAAkB4B,GAAlB,CAAD,EAAyBW,GAAzB,EAA8BkN,IAA9B,CAAH;QACH,CAFD,MAGK;UACDvW,KAAK,CAAC6G,KAAN,CAAYC,KAAZ,CAAkB4B,GAAlB,EAAuBW,GAAvB,IAA8BkN,IAA9B;QACH;MACJ;MACD;;;MACA,IAAKpW,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA9B,EAA6C;QACzCwQ,WAAW,CAAChK,KAAZ,CAAkByD,IAAlB,CAAuBjB,GAAvB;MACH,CA/BuD,CAgCxD;;IACH,CAjCD,MAkCK,IAAI,OAAOkN,IAAP,KAAgB,UAApB,EAAgC;MACjC;MACA,MAAMC,WAAW,GAAIrW,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA1B,IAA2CgS,GAA3C,GAAiDkE,IAAjD,GAAwDR,UAAU,CAAC1M,GAAD,EAAMkN,IAAN,CAAtF,CAFiC,CAGjC;MACA;;MACA;;MACA,IAAItX,MAAJ,EAAY;QACRG,GAAG,CAACkX,UAAD,EAAajN,GAAb,EAAkBmN,WAAlB,CAAH;MACH,CAFD,MAGK;QACD;QACAF,UAAU,CAACjN,GAAD,CAAV,GAAkBmN,WAAlB;MACH;MACD;;;MACA,IAAKrW,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA9B,EAA6C;QACzCwQ,WAAW,CAAC7E,OAAZ,CAAoB3C,GAApB,IAA2BkN,IAA3B;MACH,CAhBgC,CAiBjC;MACA;;;MACAzB,gBAAgB,CAAC9I,OAAjB,CAAyB3C,GAAzB,IAAgCkN,IAAhC;IACH,CApBI,MAqBA,IAAKpW,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA9B,EAA6C;MAC9C;MACA,IAAI8T,UAAU,CAACoC,IAAD,CAAd,EAAsB;QAClB1F,WAAW,CAACvH,OAAZ,CAAoBD,GAApB,IAA2BwL,cAAc,GACnC;QACElE,OAAO,CAACrH,OAAR,CAAgBD,GAAhB,CAFiC,GAGnCkN,IAHN;;QAIA,IAAIxV,SAAJ,EAAe;UACX,MAAMuI,OAAO,GAAGgN,UAAU,CAAC7M,QAAX,MACZ;UACC6M,UAAU,CAAC7M,QAAX,GAAsB3K,OAAO,CAAC,EAAD,CAFlB,CAAhB;UAGAwK,OAAO,CAACgB,IAAR,CAAajB,GAAb;QACH;MACJ;IACJ;EACJ,CArR2E,CAsR5E;;EACA;;;EACA,IAAIpK,MAAJ,EAAY;IACRwB,MAAM,CAACuI,IAAP,CAAYsN,UAAZ,EAAwBpJ,OAAxB,CAAiC7D,GAAD,IAAS;MACrCjK,GAAG,CAACmJ,KAAD,EAAQc,GAAR,EAAaiN,UAAU,CAACjN,GAAD,CAAvB,CAAH;IACH,CAFD;EAGH,CAJD,MAKK;IACD1D,MAAM,CAAC4C,KAAD,EAAQ+N,UAAR,CAAN,CADC,CAED;IACA;;IACA3Q,MAAM,CAAChH,KAAK,CAAC4J,KAAD,CAAN,EAAe+N,UAAf,CAAN;EACH,CAlS2E,CAmS5E;EACA;EACA;;;EACA7V,MAAM,CAACwT,cAAP,CAAsB1L,KAAtB,EAA6B,QAA7B,EAAuC;IACnCiB,GAAG,EAAE,MAAQrJ,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA1B,IAA2CgS,GAA3C,GAAiDkD,QAAQ,CAACzO,KAA1D,GAAkE9G,KAAK,CAAC6G,KAAN,CAAYC,KAAZ,CAAkB4B,GAAlB,CAD3C;IAEnCtJ,GAAG,EAAGyH,KAAD,IAAW;MACZ;MACA,IAAK1G,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA1B,IAA2CgS,GAA/C,EAAoD;QAChD,MAAM,IAAI5M,KAAJ,CAAU,qBAAV,CAAN;MACH;;MACDmP,MAAM,CAAEjL,MAAD,IAAY;QACfhE,MAAM,CAACgE,MAAD,EAAS9C,KAAT,CAAN;MACH,CAFK,CAAN;IAGH;EAVkC,CAAvC,EAtS4E,CAkT5E;;EACA;;EACA,IAAK1G,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA9B,EAA6C;IACzCkI,KAAK,CAACoH,UAAN,GAAmB7Q,OAAO,CAAE8Q,QAAD,IAAc;MACrCrH,KAAK,CAAC6M,YAAN,GAAqB,IAArB;;MACAxF,QAAQ,CAACiB,WAAT,CAAqBhK,KAArB,CAA2BqG,OAA3B,CAAoCuJ,QAAD,IAAc;QAC7C,IAAIA,QAAQ,IAAIlO,KAAK,CAACoB,MAAtB,EAA8B;UAC1B,MAAM+M,cAAc,GAAG9G,QAAQ,CAACjG,MAAT,CAAgB8M,QAAhB,CAAvB;UACA,MAAME,cAAc,GAAGpO,KAAK,CAACoB,MAAN,CAAa8M,QAAb,CAAvB;;UACA,IAAI,OAAOC,cAAP,KAA0B,QAA1B,IACAnW,aAAa,CAACmW,cAAD,CADb,IAEAnW,aAAa,CAACoW,cAAD,CAFjB,EAEmC;YAC/B7L,WAAW,CAAC4L,cAAD,EAAiBC,cAAjB,CAAX;UACH,CAJD,MAKK;YACD;YACA/G,QAAQ,CAACjG,MAAT,CAAgB8M,QAAhB,IAA4BE,cAA5B;UACH;QACJ,CAb4C,CAc7C;QACA;;;QACAvX,GAAG,CAACmJ,KAAD,EAAQkO,QAAR,EAAkBjX,KAAK,CAACoQ,QAAQ,CAACjG,MAAV,EAAkB8M,QAAlB,CAAvB,CAAH;MACH,CAjBD,EAFqC,CAoBrC;;;MACAhW,MAAM,CAACuI,IAAP,CAAYT,KAAK,CAACoB,MAAlB,EAA0BuD,OAA1B,CAAmCuJ,QAAD,IAAc;QAC5C,IAAI,EAAEA,QAAQ,IAAI7G,QAAQ,CAACjG,MAAvB,CAAJ,EAAoC;UAChClK,GAAG,CAAC8I,KAAD,EAAQkO,QAAR,CAAH;QACH;MACJ,CAJD,EArBqC,CA0BrC;;MACAvB,WAAW,GAAG,KAAd;MACAG,eAAe,GAAG,KAAlB;MACArV,KAAK,CAAC6G,KAAN,CAAYC,KAAZ,CAAkB4B,GAAlB,IAAyBlJ,KAAK,CAACoQ,QAAQ,CAACiB,WAAV,EAAuB,UAAvB,CAA9B;MACAwE,eAAe,GAAG,IAAlB;MACA3V,QAAQ,GAAGkW,IAAX,CAAgB,MAAM;QAClBV,WAAW,GAAG,IAAd;MACH,CAFD;;MAGA,KAAK,MAAM/E,UAAX,IAAyBP,QAAQ,CAACiB,WAAT,CAAqB7E,OAA9C,EAAuD;QACnD,MAAMC,MAAM,GAAG2D,QAAQ,CAACO,UAAD,CAAvB;QACA/Q,GAAG,CAACmJ,KAAD,EAAQ4H,UAAR,EAAoB4F,UAAU,CAAC5F,UAAD,EAAalE,MAAb,CAA9B,CAAH;MACH,CArCoC,CAsCrC;;;MACA,KAAK,MAAMpC,UAAX,IAAyB+F,QAAQ,CAACiB,WAAT,CAAqBvH,OAA9C,EAAuD;QACnD,MAAMsN,MAAM,GAAGhH,QAAQ,CAACiB,WAAT,CAAqBvH,OAArB,CAA6BO,UAA7B,CAAf;QACA,MAAMgN,WAAW,GAAGhC,cAAc,GAC5B;QACElV,QAAQ,CAAC,MAAM;UACXI,cAAc,CAACC,KAAD,CAAd;UACA,OAAO4W,MAAM,CAAChW,IAAP,CAAY2H,KAAZ,EAAmBA,KAAnB,CAAP;QACH,CAHO,CAFkB,GAM5BqO,MANN;QAOAxX,GAAG,CAACmJ,KAAD,EAAQsB,UAAR,EAAoBgN,WAApB,CAAH;MACH,CAjDoC,CAkDrC;;;MACApW,MAAM,CAACuI,IAAP,CAAYT,KAAK,CAACsI,WAAN,CAAkBvH,OAA9B,EAAuC4D,OAAvC,CAAgD7D,GAAD,IAAS;QACpD,IAAI,EAAEA,GAAG,IAAIuG,QAAQ,CAACiB,WAAT,CAAqBvH,OAA9B,CAAJ,EAA4C;UACxC7J,GAAG,CAAC8I,KAAD,EAAQc,GAAR,CAAH;QACH;MACJ,CAJD,EAnDqC,CAwDrC;;MACA5I,MAAM,CAACuI,IAAP,CAAYT,KAAK,CAACsI,WAAN,CAAkB7E,OAA9B,EAAuCkB,OAAvC,CAAgD7D,GAAD,IAAS;QACpD,IAAI,EAAEA,GAAG,IAAIuG,QAAQ,CAACiB,WAAT,CAAqB7E,OAA9B,CAAJ,EAA4C;UACxCvM,GAAG,CAAC8I,KAAD,EAAQc,GAAR,CAAH;QACH;MACJ,CAJD,EAzDqC,CA8DrC;;MACAd,KAAK,CAACsI,WAAN,GAAoBjB,QAAQ,CAACiB,WAA7B;MACAtI,KAAK,CAACkB,QAAN,GAAiBmG,QAAQ,CAACnG,QAA1B;MACAlB,KAAK,CAAC6M,YAAN,GAAqB,KAArB;IACH,CAlEyB,CAA1B;EAmEH;;EACD,IAAInU,YAAJ,EAAkB;IACd,MAAM6V,aAAa,GAAG;MAClBC,QAAQ,EAAE,IADQ;MAElBC,YAAY,EAAE,IAFI;MAGlB;MACAC,UAAU,EAAE;IAJM,CAAtB;IAMA,CAAC,IAAD,EAAO,aAAP,EAAsB,UAAtB,EAAkC,mBAAlC,EAAuD/J,OAAvD,CAAgEgK,CAAD,IAAO;MAClEzW,MAAM,CAACwT,cAAP,CAAsB1L,KAAtB,EAA6B2O,CAA7B,EAAgC;QAC5BpQ,KAAK,EAAEyB,KAAK,CAAC2O,CAAD,CADgB;QAE5B,GAAGJ;MAFyB,CAAhC;IAIH,CALD;EAMH;EACD;;;EACA,IAAI7X,MAAJ,EAAY;IACR;IACAsJ,KAAK,CAACmM,EAAN,GAAW,IAAX;EACH,CA3Y2E,CA4Y5E;;;EACA1U,KAAK,CAACiR,EAAN,CAAS/D,OAAT,CAAkBiK,QAAD,IAAc;IAC3B;IACA,IAAIlW,YAAJ,EAAkB;MACd,MAAMmW,UAAU,GAAGrG,KAAK,CAACC,GAAN,CAAU,MAAMmG,QAAQ,CAAC;QACxC5O,KADwC;QAExC8C,GAAG,EAAErL,KAAK,CAACoR,EAF6B;QAGxCpR,KAHwC;QAIxC2Q,OAAO,EAAEmE;MAJ+B,CAAD,CAAxB,CAAnB;MAMArU,MAAM,CAACuI,IAAP,CAAYoO,UAAU,IAAI,EAA1B,EAA8BlK,OAA9B,CAAuC7D,GAAD,IAASd,KAAK,CAACuB,iBAAN,CAAwB4J,GAAxB,CAA4BrK,GAA5B,CAA/C;MACA1D,MAAM,CAAC4C,KAAD,EAAQ6O,UAAR,CAAN;IACH,CATD,MAUK;MACDzR,MAAM,CAAC4C,KAAD,EAAQwI,KAAK,CAACC,GAAN,CAAU,MAAMmG,QAAQ,CAAC;QACnC5O,KADmC;QAEnC8C,GAAG,EAAErL,KAAK,CAACoR,EAFwB;QAGnCpR,KAHmC;QAInC2Q,OAAO,EAAEmE;MAJ0B,CAAD,CAAxB,CAAR,CAAN;IAMH;EACJ,CApBD;;EAqBA,IAAK3U,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA1B,IACAkI,KAAK,CAACoB,MADN,IAEA,OAAOpB,KAAK,CAACoB,MAAb,KAAwB,QAFxB,IAGA,OAAOpB,KAAK,CAACoB,MAAN,CAAa0N,WAApB,KAAoC,UAHpC,IAIA,CAAC9O,KAAK,CAACoB,MAAN,CAAa0N,WAAb,CAAyB1W,QAAzB,GAAoC4F,QAApC,CAA6C,eAA7C,CAJL,EAIoE;IAChE3D,OAAO,CAACqD,IAAR,CAAc,0DAAD,GACR,gCADQ,GAER,mBAAkBsC,KAAK,CAACG,GAAI,IAFjC;EAGH,CA1a2E,CA2a5E;;;EACA,IAAI4L,YAAY,IACZO,cADA,IAEAlE,OAAO,CAAC2G,OAFZ,EAEqB;IACjB3G,OAAO,CAAC2G,OAAR,CAAgB/O,KAAK,CAACoB,MAAtB,EAA8B2K,YAA9B;EACH;;EACDY,WAAW,GAAG,IAAd;EACAG,eAAe,GAAG,IAAlB;EACA,OAAO9M,KAAP;AACH;;AACD,SAASgP,WAAT,EACA;AACAC,WAFA,EAEajD,KAFb,EAEoBkD,YAFpB,EAEkC;EAC9B,IAAIjP,EAAJ;EACA,IAAImI,OAAJ;EACA,MAAM+G,YAAY,GAAG,OAAOnD,KAAP,KAAiB,UAAtC;;EACA,IAAI,OAAOiD,WAAP,KAAuB,QAA3B,EAAqC;IACjChP,EAAE,GAAGgP,WAAL,CADiC,CAEjC;;IACA7G,OAAO,GAAG+G,YAAY,GAAGD,YAAH,GAAkBlD,KAAxC;EACH,CAJD,MAKK;IACD5D,OAAO,GAAG6G,WAAV;IACAhP,EAAE,GAAGgP,WAAW,CAAChP,EAAjB;EACH;;EACD,SAASiK,QAAT,CAAkBzS,KAAlB,EAAyBqS,GAAzB,EAA8B;IAC1B,MAAMsF,eAAe,GAAGlZ,kBAAkB,EAA1C;IACAuB,KAAK,GACD;IACA;IACA,CAAEG,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,MAA1B,IAAqCP,WAArC,IAAoDA,WAAW,CAAC8X,QAAhE,GAA2E,IAA3E,GAAkF5X,KAAnF,KACK2X,eAAe,IAAIjZ,MAAM,CAACwB,WAAD,EAAc,IAAd,CAJlC;IAKA,IAAIF,KAAJ,EACID,cAAc,CAACC,KAAD,CAAd;;IACJ,IAAKG,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA1B,IAA2C,CAACP,WAAhD,EAA6D;MACzD,MAAM,IAAI2F,KAAJ,CAAW,0FAAD,GACX,iCADW,GAEX,oBAFW,GAGX,+BAHC,CAAN;IAIH;;IACDzF,KAAK,GAAGF,WAAR;;IACA,IAAI,CAACE,KAAK,CAAC+I,EAAN,CAAS8E,GAAT,CAAarF,EAAb,CAAL,EAAuB;MACnB;MACA,IAAIkP,YAAJ,EAAkB;QACd/C,gBAAgB,CAACnM,EAAD,EAAK+L,KAAL,EAAY5D,OAAZ,EAAqB3Q,KAArB,CAAhB;MACH,CAFD,MAGK;QACDqU,kBAAkB,CAAC7L,EAAD,EAAKmI,OAAL,EAAc3Q,KAAd,CAAlB;MACH;MACD;;;MACA,IAAKG,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA9B,EAA6C;QACzC;QACAoS,QAAQ,CAACF,MAAT,GAAkBvS,KAAlB;MACH;IACJ;;IACD,MAAMuI,KAAK,GAAGvI,KAAK,CAAC+I,EAAN,CAASS,GAAT,CAAahB,EAAb,CAAd;;IACA,IAAKrI,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA1B,IAA2CgS,GAA/C,EAAoD;MAChD,MAAMwF,KAAK,GAAG,WAAWrP,EAAzB;MACA,MAAMoH,QAAQ,GAAG8H,YAAY,GACvB/C,gBAAgB,CAACkD,KAAD,EAAQtD,KAAR,EAAe5D,OAAf,EAAwB3Q,KAAxB,EAA+B,IAA/B,CADO,GAEvBqU,kBAAkB,CAACwD,KAAD,EAAQlS,MAAM,CAAC,EAAD,EAAKgL,OAAL,CAAd,EAA6B3Q,KAA7B,EAAoC,IAApC,CAFxB;;MAGAqS,GAAG,CAAC1C,UAAJ,CAAeC,QAAf,EALgD,CAMhD;;;MACA,OAAO5P,KAAK,CAAC6G,KAAN,CAAYC,KAAZ,CAAkB+Q,KAAlB,CAAP;;MACA7X,KAAK,CAAC+I,EAAN,CAAS+M,MAAT,CAAgB+B,KAAhB;IACH,CAxCyB,CAyC1B;;;IACA,IAAK1X,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA1B,IACAU,SADA,IAEA4W,eAFA,IAGAA,eAAe,CAAC9K,KAHhB,IAIA;IACA,CAACwF,GALL,EAKU;MACN,MAAMyF,EAAE,GAAGH,eAAe,CAAC9K,KAA3B;MACA,MAAMkL,KAAK,GAAG,cAAcD,EAAd,GAAmBA,EAAE,CAAC/K,QAAtB,GAAkC+K,EAAE,CAAC/K,QAAH,GAAc,EAA9D;MACAgL,KAAK,CAACvP,EAAD,CAAL,GAAYD,KAAZ;IACH,CAnDyB,CAoD1B;;;IACA,OAAOA,KAAP;EACH;;EACDkK,QAAQ,CAAC/J,GAAT,GAAeF,EAAf;EACA,OAAOiK,QAAP;AACH;;AAED,IAAIuF,cAAc,GAAG,OAArB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,iBAAT,CAA2BC,MAA3B,CAAkC;AAAlC,EACE;EACEF,cAAc,GAAGE,MAAjB;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,SAAT,CAAmB,GAAG7K,MAAtB,EAA8B;EAC1B,IAAKnN,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA1B,IAA2CwI,KAAK,CAACsB,OAAN,CAAcmD,MAAM,CAAC,CAAD,CAApB,CAA/C,EAAyE;IACrE1K,OAAO,CAACqD,IAAR,CAAc,qFAAD,GACR,WADQ,GAER,6CAFQ,GAGR,QAHQ,GAIR,2CAJQ,GAKR,4CALL;IAMAqH,MAAM,GAAGA,MAAM,CAAC,CAAD,CAAf;EACH;;EACD,OAAOA,MAAM,CAAC5D,MAAP,CAAc,CAAC0O,OAAD,EAAU3F,QAAV,KAAuB;IACxC;IACA2F,OAAO,CAAC3F,QAAQ,CAAC/J,GAAT,GAAesP,cAAhB,CAAP,GAAyC,YAAY;MACjD,OAAOvF,QAAQ,CAAC,KAAKjB,MAAN,CAAf;IACH,CAFD;;IAGA,OAAO4G,OAAP;EACH,CANM,EAMJ,EANI,CAAP;AAOH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,QAAT,CAAkB5F,QAAlB,EAA4B6F,YAA5B,EAA0C;EACtC,OAAOzP,KAAK,CAACsB,OAAN,CAAcmO,YAAd,IACDA,YAAY,CAAC5O,MAAb,CAAoB,CAAC0O,OAAD,EAAU/O,GAAV,KAAkB;IACpC+O,OAAO,CAAC/O,GAAD,CAAP,GAAe,YAAY;MACvB,OAAOoJ,QAAQ,CAAC,KAAKjB,MAAN,CAAR,CAAsBnI,GAAtB,CAAP;IACH,CAFD;;IAGA,OAAO+O,OAAP;EACH,CALC,EAKC,EALD,CADC,GAOD3X,MAAM,CAACuI,IAAP,CAAYsP,YAAZ,EAA0B5O,MAA1B,CAAiC,CAAC0O,OAAD,EAAU/O,GAAV,KAAkB;IACjD;IACA+O,OAAO,CAAC/O,GAAD,CAAP,GAAe,YAAY;MACvB,MAAMd,KAAK,GAAGkK,QAAQ,CAAC,KAAKjB,MAAN,CAAtB;MACA,MAAM+G,QAAQ,GAAGD,YAAY,CAACjP,GAAD,CAA7B,CAFuB,CAGvB;MACA;;MACA,OAAO,OAAOkP,QAAP,KAAoB,UAApB,GACDA,QAAQ,CAAC3X,IAAT,CAAc,IAAd,EAAoB2H,KAApB,CADC,GAEDA,KAAK,CAACgQ,QAAD,CAFX;IAGH,CARD;;IASA,OAAOH,OAAP;EACH,CAZC,EAYC,EAZD,CAPN;AAoBH;AACD;AACA;AACA;AACA;;;AACA,MAAMI,UAAU,GAAGH,QAAnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASI,UAAT,CAAoBhG,QAApB,EAA8B6F,YAA9B,EAA4C;EACxC,OAAOzP,KAAK,CAACsB,OAAN,CAAcmO,YAAd,IACDA,YAAY,CAAC5O,MAAb,CAAoB,CAAC0O,OAAD,EAAU/O,GAAV,KAAkB;IACpC;IACA+O,OAAO,CAAC/O,GAAD,CAAP,GAAe,UAAU,GAAGqF,IAAb,EAAmB;MAC9B,OAAO+D,QAAQ,CAAC,KAAKjB,MAAN,CAAR,CAAsBnI,GAAtB,EAA2B,GAAGqF,IAA9B,CAAP;IACH,CAFD;;IAGA,OAAO0J,OAAP;EACH,CANC,EAMC,EAND,CADC,GAQD3X,MAAM,CAACuI,IAAP,CAAYsP,YAAZ,EAA0B5O,MAA1B,CAAiC,CAAC0O,OAAD,EAAU/O,GAAV,KAAkB;IACjD;IACA+O,OAAO,CAAC/O,GAAD,CAAP,GAAe,UAAU,GAAGqF,IAAb,EAAmB;MAC9B,OAAO+D,QAAQ,CAAC,KAAKjB,MAAN,CAAR,CAAsB8G,YAAY,CAACjP,GAAD,CAAlC,EAAyC,GAAGqF,IAA5C,CAAP;IACH,CAFD;;IAGA,OAAO0J,OAAP;EACH,CANC,EAMC,EAND,CARN;AAeH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASM,gBAAT,CAA0BjG,QAA1B,EAAoC6F,YAApC,EAAkD;EAC9C,OAAOzP,KAAK,CAACsB,OAAN,CAAcmO,YAAd,IACDA,YAAY,CAAC5O,MAAb,CAAoB,CAAC0O,OAAD,EAAU/O,GAAV,KAAkB;IACpC;IACA+O,OAAO,CAAC/O,GAAD,CAAP,GAAe;MACXG,GAAG,GAAG;QACF,OAAOiJ,QAAQ,CAAC,KAAKjB,MAAN,CAAR,CAAsBnI,GAAtB,CAAP;MACH,CAHU;;MAIXjK,GAAG,CAAC0H,KAAD,EAAQ;QACP;QACA,OAAQ2L,QAAQ,CAAC,KAAKjB,MAAN,CAAR,CAAsBnI,GAAtB,IAA6BvC,KAArC;MACH;;IAPU,CAAf;IASA,OAAOsR,OAAP;EACH,CAZC,EAYC,EAZD,CADC,GAcD3X,MAAM,CAACuI,IAAP,CAAYsP,YAAZ,EAA0B5O,MAA1B,CAAiC,CAAC0O,OAAD,EAAU/O,GAAV,KAAkB;IACjD;IACA+O,OAAO,CAAC/O,GAAD,CAAP,GAAe;MACXG,GAAG,GAAG;QACF,OAAOiJ,QAAQ,CAAC,KAAKjB,MAAN,CAAR,CAAsB8G,YAAY,CAACjP,GAAD,CAAlC,CAAP;MACH,CAHU;;MAIXjK,GAAG,CAAC0H,KAAD,EAAQ;QACP;QACA,OAAQ2L,QAAQ,CAAC,KAAKjB,MAAN,CAAR,CAAsB8G,YAAY,CAACjP,GAAD,CAAlC,IAA2CvC,KAAnD;MACH;;IAPU,CAAf;IASA,OAAOsR,OAAP;EACH,CAZC,EAYC,EAZD,CAdN;AA2BH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASO,WAAT,CAAqBpQ,KAArB,EAA4B;EACxB;EACA;EACA,IAAItJ,MAAJ,EAAY;IACR;IACA,OAAOW,MAAM,CAAC2I,KAAD,CAAb;EACH,CAHD,MAIK;IACDA,KAAK,GAAG5J,KAAK,CAAC4J,KAAD,CAAb;IACA,MAAMqQ,IAAI,GAAG,EAAb;;IACA,KAAK,MAAMvP,GAAX,IAAkBd,KAAlB,EAAyB;MACrB,MAAMzB,KAAK,GAAGyB,KAAK,CAACc,GAAD,CAAnB;;MACA,IAAInK,KAAK,CAAC4H,KAAD,CAAL,IAAgB3H,UAAU,CAAC2H,KAAD,CAA9B,EAAuC;QACnC;QACA8R,IAAI,CAACvP,GAAD,CAAJ,GACI;QACA7J,KAAK,CAAC+I,KAAD,EAAQc,GAAR,CAFT;MAGH;IACJ;;IACD,OAAOuP,IAAP;EACH;AACJ;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,cAAc,GAAG,UAAUC,IAAV,EAAgB;EACnC;EACA;EACAA,IAAI,CAACC,KAAL,CAAW;IACPC,YAAY,GAAG;MACX,MAAMrI,OAAO,GAAG,KAAKsI,QAArB;;MACA,IAAItI,OAAO,CAAC3Q,KAAZ,EAAmB;QACf,MAAMA,KAAK,GAAG2Q,OAAO,CAAC3Q,KAAtB,CADe,CAEf;;QACA;;QACA,IAAI,CAAC,KAAKkZ,SAAV,EAAqB;UACjB,MAAMC,YAAY,GAAG,EAArB;UACA1Y,MAAM,CAACwT,cAAP,CAAsB,IAAtB,EAA4B,WAA5B,EAAyC;YACrCzK,GAAG,EAAE,MAAM2P,YAD0B;YAErC/Z,GAAG,EAAGga,CAAD,IAAO3Y,MAAM,CAACkF,MAAP,CAAcwT,YAAd,EAA4BC,CAA5B;UAFyB,CAAzC;QAIH;;QACD,KAAKF,SAAL,CAAehZ,WAAf,IAA8BF,KAA9B,CAXe,CAYf;QACA;;QACA;;QACA,IAAI,CAAC,KAAKwR,MAAV,EAAkB;UACd,KAAKA,MAAL,GAAcxR,KAAd;QACH;;QACDA,KAAK,CAACoR,EAAN,GAAW,IAAX;;QACA,IAAIrQ,SAAJ,EAAe;UACX;UACA;UACAhB,cAAc,CAACC,KAAD,CAAd;QACH;;QACD,IAAIiB,YAAJ,EAAkB;UACdmK,qBAAqB,CAACpL,KAAK,CAACoR,EAAP,EAAWpR,KAAX,CAArB;QACH;MACJ,CA3BD,MA4BK,IAAI,CAAC,KAAKwR,MAAN,IAAgBb,OAAO,CAAC0I,MAAxB,IAAkC1I,OAAO,CAAC0I,MAAR,CAAe7H,MAArD,EAA6D;QAC9D,KAAKA,MAAL,GAAcb,OAAO,CAAC0I,MAAR,CAAe7H,MAA7B;MACH;IACJ,CAlCM;;IAmCP8H,SAAS,GAAG;MACR,OAAO,KAAKvM,QAAZ;IACH;;EArCM,CAAX;AAuCH,CA1CD;;AA4CA,SAASjM,YAAT,EAAuB+X,cAAvB,EAAuC1G,eAAvC,EAAwDrB,WAAxD,EAAqEyG,WAArE,EAAkFtX,cAAlF,EAAkGwY,UAAlG,EAA8GD,UAA9G,EAA0HH,QAA1H,EAAoIF,SAApI,EAA+IO,gBAA/I,EAAiK3Y,cAAjK,EAAiLkY,iBAAjL,EAAoMlE,WAApM,EAAiN4E,WAAjN"},"metadata":{},"sourceType":"module"}
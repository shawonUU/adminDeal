{"ast":null,"code":"import { extend } from '../vue';\nimport { PROP_TYPE_ARRAY_OBJECT, PROP_TYPE_STRING } from '../constants/props';\nimport { get } from '../utils/get';\nimport { stripTags } from '../utils/html';\nimport { isArray, isPlainObject, isUndefined } from '../utils/inspect';\nimport { keys } from '../utils/object';\nimport { makeProp, makePropsConfigurable } from '../utils/props';\nimport { warn } from '../utils/warn'; // --- Constants ---\n\nvar OPTIONS_OBJECT_DEPRECATED_MSG = 'Setting prop \"options\" to an object is deprecated. Use the array format instead.'; // --- Props ---\n\nexport var props = makePropsConfigurable({\n  disabledField: makeProp(PROP_TYPE_STRING, 'disabled'),\n  htmlField: makeProp(PROP_TYPE_STRING, 'html'),\n  options: makeProp(PROP_TYPE_ARRAY_OBJECT, []),\n  textField: makeProp(PROP_TYPE_STRING, 'text'),\n  valueField: makeProp(PROP_TYPE_STRING, 'value')\n}, 'formOptionControls'); // --- Mixin ---\n// @vue/component\n\nexport var formOptionsMixin = extend({\n  props: props,\n  computed: {\n    formOptions: function formOptions() {\n      return this.normalizeOptions(this.options);\n    }\n  },\n  methods: {\n    normalizeOption: function normalizeOption(option) {\n      var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null; // When the option is an object, normalize it\n\n      if (isPlainObject(option)) {\n        var value = get(option, this.valueField);\n        var text = get(option, this.textField);\n        return {\n          value: isUndefined(value) ? key || text : value,\n          text: stripTags(String(isUndefined(text) ? key : text)),\n          html: get(option, this.htmlField),\n          disabled: Boolean(get(option, this.disabledField))\n        };\n      } // Otherwise create an `<option>` object from the given value\n\n\n      return {\n        value: key || option,\n        text: stripTags(String(option)),\n        disabled: false\n      };\n    },\n    normalizeOptions: function normalizeOptions(options) {\n      var _this = this; // Normalize the given options array\n\n\n      if (isArray(options)) {\n        return options.map(function (option) {\n          return _this.normalizeOption(option);\n        });\n      } else if (isPlainObject(options)) {\n        // Deprecate the object options format\n        warn(OPTIONS_OBJECT_DEPRECATED_MSG, this.$options.name); // Normalize a `options` object to an array of options\n\n        return keys(options).map(function (key) {\n          return _this.normalizeOption(options[key] || {}, key);\n        });\n      } // If not an array or object, return an empty array\n\n      /* istanbul ignore next */\n\n\n      return [];\n    }\n  }\n});","map":{"version":3,"names":["extend","PROP_TYPE_ARRAY_OBJECT","PROP_TYPE_STRING","get","stripTags","isArray","isPlainObject","isUndefined","keys","makeProp","makePropsConfigurable","warn","OPTIONS_OBJECT_DEPRECATED_MSG","props","disabledField","htmlField","options","textField","valueField","formOptionsMixin","computed","formOptions","normalizeOptions","methods","normalizeOption","option","key","arguments","length","undefined","value","text","String","html","disabled","Boolean","_this","map","$options","name"],"sources":["C:/VUE/adminDeal/node_modules/bootstrap-vue/esm/mixins/form-options.js"],"sourcesContent":["import { extend } from '../vue';\r\nimport { PROP_TYPE_ARRAY_OBJECT, PROP_TYPE_STRING } from '../constants/props';\r\nimport { get } from '../utils/get';\r\nimport { stripTags } from '../utils/html';\r\nimport { isArray, isPlainObject, isUndefined } from '../utils/inspect';\r\nimport { keys } from '../utils/object';\r\nimport { makeProp, makePropsConfigurable } from '../utils/props';\r\nimport { warn } from '../utils/warn'; // --- Constants ---\r\n\r\nvar OPTIONS_OBJECT_DEPRECATED_MSG = 'Setting prop \"options\" to an object is deprecated. Use the array format instead.'; // --- Props ---\r\n\r\nexport var props = makePropsConfigurable({\r\n  disabledField: makeProp(PROP_TYPE_STRING, 'disabled'),\r\n  htmlField: makeProp(PROP_TYPE_STRING, 'html'),\r\n  options: makeProp(PROP_TYPE_ARRAY_OBJECT, []),\r\n  textField: makeProp(PROP_TYPE_STRING, 'text'),\r\n  valueField: makeProp(PROP_TYPE_STRING, 'value')\r\n}, 'formOptionControls'); // --- Mixin ---\r\n// @vue/component\r\n\r\nexport var formOptionsMixin = extend({\r\n  props: props,\r\n  computed: {\r\n    formOptions: function formOptions() {\r\n      return this.normalizeOptions(this.options);\r\n    }\r\n  },\r\n  methods: {\r\n    normalizeOption: function normalizeOption(option) {\r\n      var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\r\n\r\n      // When the option is an object, normalize it\r\n      if (isPlainObject(option)) {\r\n        var value = get(option, this.valueField);\r\n        var text = get(option, this.textField);\r\n        return {\r\n          value: isUndefined(value) ? key || text : value,\r\n          text: stripTags(String(isUndefined(text) ? key : text)),\r\n          html: get(option, this.htmlField),\r\n          disabled: Boolean(get(option, this.disabledField))\r\n        };\r\n      } // Otherwise create an `<option>` object from the given value\r\n\r\n\r\n      return {\r\n        value: key || option,\r\n        text: stripTags(String(option)),\r\n        disabled: false\r\n      };\r\n    },\r\n    normalizeOptions: function normalizeOptions(options) {\r\n      var _this = this;\r\n\r\n      // Normalize the given options array\r\n      if (isArray(options)) {\r\n        return options.map(function (option) {\r\n          return _this.normalizeOption(option);\r\n        });\r\n      } else if (isPlainObject(options)) {\r\n        // Deprecate the object options format\r\n        warn(OPTIONS_OBJECT_DEPRECATED_MSG, this.$options.name); // Normalize a `options` object to an array of options\r\n\r\n        return keys(options).map(function (key) {\r\n          return _this.normalizeOption(options[key] || {}, key);\r\n        });\r\n      } // If not an array or object, return an empty array\r\n\r\n      /* istanbul ignore next */\r\n\r\n\r\n      return [];\r\n    }\r\n  }\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"h1\", null, \"okkkk\");\n}","map":{"version":3,"mappings":";;uBAIGA,oBAAc,IAAd,EAAc,IAAd,EAAI,OAAJ","names":["_createElementBlock"],"sourceRoot":"","sources":["C:\\VUE\\adminDeal\\src\\components\\layouts\\Modal\\AddToCartModal.vue"],"sourcesContent":["\r\n\r\n\r\n<template >\r\n   <h1>okkkk</h1>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nexport default {\r\n    props:['productId'],\r\n    data(){\r\n        return{\r\n            auth:{\r\n                isAuthenticated: false,\r\n                user: {},\r\n            },\r\n            productDetails: false,\r\n            addedTocart: false,\r\n            color: null,\r\n            quantity: 0,\r\n            preLoader: false,\r\n        }\r\n    },\r\n    created(){\r\n        alert('cartt');\r\n        var user = localStorage.getItem(\"user\");\r\n        if(user !== null){\r\n            user = JSON.parse(user);\r\n            this.auth.isAuthenticated = true;\r\n            this.auth.user = user;\r\n        }\r\n        this.getProductDetails();\r\n    },\r\n    methods:{\r\n        hidModal(){\r\n           this.emitter.emit(\"viewAddToCartModal\", false); \r\n           let ele = document.getElementsByTagName('body');\r\n           ele[0].classList.remove(\"modal-open\");\r\n        },\r\n        getProductDetails(){\r\n            this.preLoader = true;\r\n            axios.get(this.rootDomain+'vueweb/cart/show-cart-modal?id='+this.productId)\r\n            .then(res=>{\r\n                console.log(res.data.productCollection.data[0]);\r\n                // console.log(res.data);\r\n                this.productDetails = res.data.productCollection.data[0];\r\n                this.quantity = this.productDetails.min_qty;\r\n                // console,log(res.data)\r\n                \r\n                this.preLoader = false;\r\n                this.getVariantPrice();\r\n\r\n            }).catch(err=>{\r\n\r\n            });\r\n        },\r\n\r\n        getVariantPrice(){\r\n            let data;\r\n            if(this.color != null){data = {id: this.productDetails.id, quantity: this.quantity, color:this.color};}\r\n            else{data = {id: this.productDetails.id, quantity: this.quantity};}\r\n          \r\n            if(this.productDetails.min_qty > 0 && this.checkAddToCartValidity()){\r\n                $.ajax({\r\n                   type:\"get\",\r\n                   url: this.rootDomain+'vueweb/product-variant_price',\r\n                   data: data,\r\n                   success: function(data){\r\n                        $('.product-gallery-thumb .carousel-box').each(function (i) {\r\n                            if($(this).data('variation') && data.variation == $(this).data('variation')){\r\n                                $('.product-gallery-thumb').slick('slickGoTo', i);\r\n                            }\r\n                        })\r\n\r\n                        $('#option-choice-form #chosen_price_div').removeClass('d-none');\r\n                        $('#option-choice-form #chosen_price_div #chosen_price').html(data.price);\r\n                        $('#available-quantity').html(data.quantity);\r\n                        $('.input-number').prop('max', data.max_limit);\r\n                        if(parseInt(data.in_stock) == 0 && data.digital  == 0){\r\n                           $('.buy-now').addClass('d-none');\r\n                           $('.add-to-cart').addClass('d-none');\r\n                           $('.out-of-stock').removeClass('d-none');\r\n                        }\r\n                        else{\r\n                           $('.buy-now').removeClass('d-none');\r\n                           $('.add-to-cart').removeClass('d-none');\r\n                           $('.out-of-stock').addClass('d-none');\r\n                        }\r\n                   }\r\n               });\r\n            }\r\n        },\r\n        checkAddToCartValidity(){\r\n            var names = {};\r\n            $('#option-choice-form input:radio').each(function() { // find unique names\r\n                names[$(this).attr('name')] = true;\r\n            });\r\n            var count = 0;\r\n            $.each(names, function() { // then count them\r\n                count++;\r\n            });\r\n\r\n            if($('#option-choice-form input:radio:checked').length == count){\r\n                return true;\r\n            }\r\n            return false;\r\n        },\r\n\r\n        incresQuantity(){\r\n             this.quantity = this.quantity + 1;\r\n            if( this.quantity > this.productDetails.stocksQty)  \r\n                this.quantity = this.productDetails.stocksQty;\r\n            this.getVariantPrice();\r\n        },\r\n        decresQuantity(){\r\n            this.quantity = this.quantity - 1;\r\n            if( this.quantity<1)  this.quantity = 1;\r\n            this.getVariantPrice();\r\n        },\r\n        setQuantity(){\r\n            let qty = $(\"#quantity\").val();\r\n            if(qty<1) qty = 1;\r\n            if(qty > this.productDetails.stocksQty) \r\n                qty = this.productDetails.stocksQty;\r\n            this.quantity = qty;\r\n            this.getVariantPrice();\r\n        },\r\n        changeColor(color){\r\n            this.color = color;\r\n             this.getVariantPrice();\r\n        },\r\n        addToCart(){\r\n            // console.log('##################');\r\n            if(this.auth.isAuthenticated==true &&  this.auth.user.type != 'customer'){\r\n                alert('Please Login as a customer to add products to the Cart.');\r\n                return false;\r\n            }\r\n\r\n            if(this.checkAddToCartValidity()) {\r\n               \r\n                this.preLoader = true;\r\n\r\n                var temp_user = \"\";\r\n                var token = \"\";\r\n                if(this.auth.isAuthenticated==true){\r\n                    // alert('athentic');\r\n                    token = this.auth.user.access_token;\r\n                }else{\r\n                    // alert('');\r\n                    var temp_user = localStorage.getItem(\"temp_user\");\r\n                    if(!temp_user) temp_user = \"\";\r\n                }\r\n                \r\n\r\n                let data;\r\n                if(this.color != null){data = {id: this.productId, quantity: this.quantity, color: this.color, token:token, temp_user:temp_user};}\r\n                else{data = {id: this.productId, quantity: this.quantity, token:token, temp_user:temp_user};}\r\n\r\n                // console.log(data);\r\n\r\n                // axios.defaults.headers.common['X-CSRF-TOKEN'] = document.querySelector('meta[name=\"csrf-token\"]').getAttribute('content');\r\n                axios.get(this.selfDomain+'vueweb/cart/addtocart',{params: data})\r\n                .then(res=>{\r\n                    // console.log(res);\r\n                    this.productDetails = false;\r\n                    this.preLoader = false;\r\n                    // console.log(\"********************\");\r\n                    // console.log(res.data);return;\r\n                    localStorage.setItem(\"temp_user\", res.data.temp_user);\r\n                    // console.log(\"ADDED\");\r\n                    // console.log(res.data);\r\n                    this.addedTocart = res.data;\r\n                    this.addedTocart.product = this.addedTocart.product.data[0];\r\n                    this.addedTocart.reletedProducts = this.addedTocart.reletedProducts.data;\r\n                    this.emitter.emit(\"reload\", true);\r\n\r\n                }).catch(err=>{\r\n\r\n                });\r\n\r\n                // $.ajax({\r\n                //     type:\"get\",\r\n                //     url: this.rootDomain+'vueweb/cart/addtocart',\r\n                //     data: data,\r\n                //     success: function(data){\r\n\r\n                //        $('#addToCart-modal-body').html(null);\r\n                //        $('.c-preloader').hide();\r\n                //        $('#modal-size').removeClass('modal-lg');\r\n                //        $('#addToCart-modal-body').html(data.modal_view);\r\n                //        AIZ.extra.plusMinus();\r\n                //        AIZ.plugins.slickCarousel();\r\n                //        updateNavCart(data.nav_cart_view,data.cart_count);\r\n                //     //    this.addedTocart = \r\n                //     }\r\n                // });\r\n            }\r\n            else{\r\n                alert('Please choose all the options');\r\n            }\r\n        }\r\n\r\n        \r\n\r\n\r\n    }\r\n}\r\n</script>\r\n<style>\r\n\r\nelement {\r\n  z-index: 1040;\r\n  display: block;\r\n  padding-right: 17px;\r\n}\r\n.modal-open .modal {\r\n  overflow-x: hidden;\r\n  overflow-y: hidden;\r\n}\r\n.modal-open .modal {\r\n  overflow-x: hidden;\r\n  overflow-y: auto;\r\n}\r\n.modal {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 100;\r\n  display: none;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n  outline: 0;\r\n}\r\n.fade {\r\n  transition: opacity .15s linear;\r\n}\r\n*, ::after, ::before {\r\n  box-sizing: border-box;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"export default {\n  name: \"PriceRangeSlider\",\n  props: {\n    trackHeight: {\n      type: Number,\n      deafult: 1\n    }\n  },\n\n  data() {\n    return {\n      min: 10,\n      max: 210,\n      minValue: 40,\n      maxValue: 150,\n      step: 5,\n      totalSteps: 0,\n      percentPerStep: 1,\n      trackWidth: null,\n      isDragging: false,\n      pos: {\n        curTrack: null\n      }\n    };\n  },\n\n  methods: {\n    moveTrack(track, ev) {\n      let percentInPx = this.getPercentInPx();\n      let trackX = Math.round(this.$refs._vpcTrack.getBoundingClientRect().left);\n      let clientX = ev.clientX;\n      let moveDiff = clientX - trackX;\n      let moveInPct = moveDiff / percentInPx; // console.log(moveInPct)\n\n      if (moveInPct < 1 || moveInPct > 100) return;\n      let value = Math.round(moveInPct / this.percentPerStep) * this.step + this.min;\n\n      if (track === 'track1') {\n        if (value >= this.maxValue - this.step) return;\n        this.minValue = value;\n      }\n\n      if (track === 'track2') {\n        if (value <= this.minValue + this.step) return;\n        this.maxValue = value;\n      }\n\n      this.$refs[track].style.left = moveInPct + '%';\n      this.setTrackHightlight();\n    },\n\n    mousedown(ev, track) {\n      if (this.isDragging) return;\n      this.isDragging = true;\n      this.pos.curTrack = track;\n    },\n\n    touchstart(ev, track) {\n      this.mousedown(ev, track);\n    },\n\n    mouseup(ev, track) {\n      if (!this.isDragging) return;\n      this.isDragging = false;\n    },\n\n    touchend(ev, track) {\n      this.mouseup(ev, track);\n    },\n\n    mousemove(ev, track) {\n      if (!this.isDragging) return;\n      this.moveTrack(track, ev);\n    },\n\n    touchmove(ev, track) {\n      this.mousemove(ev.changedTouches[0], track);\n    },\n\n    valueToPercent(value) {\n      return (value - this.min) / this.step * this.percentPerStep;\n    },\n\n    setTrackHightlight() {\n      this.$refs.trackHighlight.style.left = this.valueToPercent(this.minValue) + '%';\n      this.$refs.trackHighlight.style.width = this.valueToPercent(this.maxValue) - this.valueToPercent(this.minValue) + '%';\n    },\n\n    getPercentInPx() {\n      let trackWidth = this.$refs._vpcTrack.offsetWidth;\n      let oneStepInPx = trackWidth / this.totalSteps; // 1 percent in px\n\n      let percentInPx = oneStepInPx / this.percentPerStep;\n      return percentInPx;\n    },\n\n    setClickMove(ev) {\n      let track1Left = this.$refs.track1.getBoundingClientRect().left;\n      let track2Left = this.$refs.track2.getBoundingClientRect().left; // console.log('track1Left', track1Left)\n\n      if (ev.clientX < track1Left) {\n        this.moveTrack('track1', ev);\n      } else if (ev.clientX - track1Left < track2Left - ev.clientX) {\n        this.moveTrack('track1', ev);\n      } else {\n        this.moveTrack('track2', ev);\n      }\n    }\n\n  },\n\n  mounted() {\n    // calc per step value\n    this.totalSteps = (this.max - this.min) / this.step; // percent the track button to be moved on each step\n\n    this.percentPerStep = 100 / this.totalSteps; // console.log('percentPerStep', this.percentPerStep)\n    // set track1 initilal\n\n    document.querySelector('.track1').style.left = this.valueToPercent(this.minValue) + '%'; // track2 initial position\n\n    document.querySelector('.track2').style.left = this.valueToPercent(this.maxValue) + '%'; // set initila track highlight\n\n    this.setTrackHightlight();\n    var self = this;\n    ['mouseup', 'mousemove'].forEach(type => {\n      document.body.addEventListener(type, ev => {\n        // ev.preventDefault();\n        if (self.isDragging && self.pos.curTrack) {\n          self[type](ev, self.pos.curTrack);\n        }\n      });\n    });\n    ['mousedown', 'mouseup', 'mousemove', 'touchstart', 'touchmove', 'touchend'].forEach(type => {\n      document.querySelector('.track1').addEventListener(type, ev => {\n        ev.stopPropagation();\n        self[type](ev, 'track1');\n      });\n      document.querySelector('.track2').addEventListener(type, ev => {\n        ev.stopPropagation();\n        self[type](ev, 'track2');\n      });\n    }); // on track clik\n    // determine direction based on click proximity\n    // determine percent to move based on track.clientX - click.clientX\n\n    document.querySelector('.track').addEventListener('click', function (ev) {\n      ev.stopPropagation();\n      self.setClickMove(ev);\n    });\n    document.querySelector('.track-highlight').addEventListener('click', function (ev) {\n      ev.stopPropagation();\n      self.setClickMove(ev);\n    });\n  }\n\n};","map":{"version":3,"mappings":"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","names":["name","props","trackHeight","type","Number","deafult","data","min","max","minValue","maxValue","step","totalSteps","percentPerStep","trackWidth","isDragging","pos","curTrack","methods","moveTrack","track","ev","percentInPx","getPercentInPx","trackX","Math","round","$refs","_vpcTrack","getBoundingClientRect","left","clientX","moveDiff","moveInPct","value","style","setTrackHightlight","mousedown","touchstart","mouseup","touchend","mousemove","touchmove","changedTouches","valueToPercent","trackHighlight","width","offsetWidth","oneStepInPx","setClickMove","track1Left","track1","track2Left","track2","mounted","document","querySelector","self","forEach","body","addEventListener","stopPropagation"],"sourceRoot":"","sources":["F:\\adminDeal\\src\\components\\pages\\FrontEnd\\Range.vue"],"sourcesContent":["<template>\r\n    \r\n    <div class=\"track-container\">\r\n      <span class=\"range-value min\">{{ minValue}} </span> <span class=\"range-value max\">{{ maxValue }}</span>\r\n      <div class=\"track\" ref=\"_vpcTrack\"></div>\r\n      <div class=\"track-highlight\" ref=\"trackHighlight\"></div>\r\n      <button class=\"track-btn track1\" ref=\"track1\"></button>\r\n      <button class=\"track-btn track2\" ref=\"track2\"></button>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  name: \"PriceRangeSlider\",\r\n\r\n  props: {\r\n    trackHeight: {\r\n      type: Number,\r\n      deafult: 1\r\n    }\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      min: 10,\r\n      max: 210,\r\n      minValue: 40,\r\n      maxValue: 150,\r\n      step: 5,\r\n      totalSteps: 0,\r\n      percentPerStep: 1,\r\n      trackWidth: null,\r\n      isDragging: false,\r\n      pos: {\r\n        curTrack: null\r\n      }\r\n    \r\n    }\r\n  },\r\n\r\n  methods: {\r\n    moveTrack(track, ev){\r\n      \r\n      let percentInPx = this.getPercentInPx();\r\n      \r\n      let trackX = Math.round(this.$refs._vpcTrack.getBoundingClientRect().left);\r\n      let clientX = ev.clientX;\r\n      let moveDiff = clientX-trackX;\r\n\r\n      let moveInPct = moveDiff / percentInPx\r\n      // console.log(moveInPct)\r\n\r\n      if(moveInPct<1 || moveInPct>100) return;\r\n      let value = ( Math.round(moveInPct / this.percentPerStep) * this.step ) + this.min;\r\n      if(track==='track1'){\r\n        if(value >= (this.maxValue - this.step)) return;\r\n        this.minValue = value;\r\n      }\r\n\r\n      if(track==='track2'){\r\n        if(value <= (this.minValue + this.step)) return;\r\n        this.maxValue = value;\r\n      }\r\n      \r\n      this.$refs[track].style.left = moveInPct + '%';\r\n      this.setTrackHightlight()\r\n            \r\n    },\r\n    mousedown(ev, track){\r\n\r\n      if(this.isDragging) return;\r\n      this.isDragging = true;\r\n      this.pos.curTrack = track;\r\n    },\r\n\r\n    touchstart(ev, track){\r\n      this.mousedown(ev, track)\r\n    },\r\n\r\n    mouseup(ev, track){\r\n      if(!this.isDragging) return;\r\n      this.isDragging = false\r\n    },\r\n\r\n    touchend(ev, track){\r\n      this.mouseup(ev, track)\r\n    },\r\n\r\n    mousemove(ev, track){\r\n      if(!this.isDragging) return;      \r\n      this.moveTrack(track, ev)\r\n    },\r\n\r\n    touchmove(ev, track){\r\n      this.mousemove(ev.changedTouches[0], track)\r\n    },\r\n\r\n    valueToPercent(value){\r\n      return ((value - this.min) / this.step) * this.percentPerStep\r\n    },\r\n\r\n    setTrackHightlight(){\r\n      this.$refs.trackHighlight.style.left = this.valueToPercent(this.minValue) + '%'\r\n      this.$refs.trackHighlight.style.width = (this.valueToPercent(this.maxValue) - this.valueToPercent(this.minValue)) + '%'\r\n    },\r\n\r\n    getPercentInPx(){\r\n      let trackWidth = this.$refs._vpcTrack.offsetWidth;\r\n      let oneStepInPx = trackWidth / this.totalSteps;\r\n      // 1 percent in px\r\n      let percentInPx = oneStepInPx / this.percentPerStep;\r\n      \r\n      return percentInPx;\r\n    },\r\n\r\n    setClickMove(ev){\r\n      let track1Left = this.$refs.track1.getBoundingClientRect().left;\r\n      let track2Left = this.$refs.track2.getBoundingClientRect().left;\r\n      // console.log('track1Left', track1Left)\r\n      if(ev.clientX < track1Left){\r\n        this.moveTrack('track1', ev)\r\n      }else if((ev.clientX - track1Left) < (track2Left - ev.clientX) ){\r\n        this.moveTrack('track1', ev)\r\n      }else{\r\n        this.moveTrack('track2', ev)\r\n      }\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    // calc per step value\r\n    this.totalSteps = (this.max - this.min) / this.step;\r\n\r\n    // percent the track button to be moved on each step\r\n    this.percentPerStep = 100 / this.totalSteps;\r\n    // console.log('percentPerStep', this.percentPerStep)\r\n\r\n    // set track1 initilal\r\n    document.querySelector('.track1').style.left = this.valueToPercent(this.minValue) + '%'\r\n    // track2 initial position\r\n    document.querySelector('.track2').style.left = this.valueToPercent(this.maxValue) + '%'\r\n    // set initila track highlight\r\n    this.setTrackHightlight()\r\n\r\n    var self = this;\r\n\r\n    ['mouseup', 'mousemove'].forEach( type => {\r\n      document.body.addEventListener(type, (ev) => {\r\n        // ev.preventDefault();\r\n        if(self.isDragging && self.pos.curTrack){\r\n          self[type](ev, self.pos.curTrack)\r\n        }\r\n      })\r\n    });\r\n\r\n    ['mousedown', 'mouseup', 'mousemove', 'touchstart', 'touchmove', 'touchend'].forEach( type => {\r\n      document.querySelector('.track1').addEventListener(type, (ev) => {\r\n        ev.stopPropagation();\r\n        self[type](ev, 'track1')\r\n      })\r\n\r\n      document.querySelector('.track2').addEventListener(type, (ev) => {\r\n        ev.stopPropagation();\r\n        self[type](ev, 'track2')\r\n      })\r\n    })\r\n\r\n    // on track clik\r\n    // determine direction based on click proximity\r\n    // determine percent to move based on track.clientX - click.clientX\r\n    document.querySelector('.track').addEventListener('click', function(ev) {\r\n      ev.stopPropagation();\r\n      self.setClickMove(ev)\r\n      \r\n    })\r\n\r\n    document.querySelector('.track-highlight').addEventListener('click', function(ev) {\r\n      ev.stopPropagation();\r\n      self.setClickMove(ev)\r\n      \r\n    })\r\n     \r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n\r\n  .range-value{\r\n    position: absolute;\r\n    top: -2rem;\r\n  }\r\n  .range-value.min{\r\n    left: 0;\r\n  }\r\n\r\n  .range-value.max{\r\n    right: 0;\r\n  }\r\n  .track-container{\r\n    width: 100%;\r\n    position: relative;\r\n    cursor: pointer;\r\n    height: 0.5rem;\r\n  }\r\n\r\n  .track,\r\n  .track-highlight {\r\n    display: block;\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 0.5rem;\r\n  }\r\n\r\n  .track{\r\n    background-color: #ddd;\r\n  }\r\n\r\n  .track-highlight{\r\n    background-color: black;\r\n    z-index: 2;\r\n  }\r\n\r\n  .track-btn{\r\n    -webkit-appearance: none;\r\n    -moz-appearance: none;\r\n    appearance: none;\r\n    outline: none;\r\n    cursor: pointer;\r\n    display: block;\r\n    position: absolute;\r\n    z-index: 2;\r\n    width: 1.5rem;\r\n    height: 1.5rem;\r\n    top: calc(-50% - 0.25rem);\r\n    margin-left: -1rem;\r\n    border: none;\r\n    background-color: black;\r\n    -ms-touch-action: pan-x;\r\n    touch-action: pan-x;\r\n    transition: box-shadow .3s ease-out,background-color .3s ease,-webkit-transform .3s ease-out;\r\n    transition: transform .3s ease-out,box-shadow .3s ease-out,background-color .3s ease;\r\n    transition: transform .3s ease-out,box-shadow .3s ease-out,background-color .3s ease,-webkit-transform .3s ease-out;\r\n  }\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/*!\r\n * express\r\n * Copyright(c) 2009-2013 TJ Holowaychuk\r\n * Copyright(c) 2013 Roman Shtylman\r\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\n'use strict';\n/**\r\n * Module dependencies.\r\n * @private\r\n */\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nvar debug = require('debug')('express:view');\n\nvar path = require('path');\n\nvar fs = require('fs');\n/**\r\n * Module variables.\r\n * @private\r\n */\n\n\nvar dirname = path.dirname;\nvar basename = path.basename;\nvar extname = path.extname;\nvar join = path.join;\nvar resolve = path.resolve;\n/**\r\n * Module exports.\r\n * @public\r\n */\n\nmodule.exports = View;\n/**\r\n * Initialize a new `View` with the given `name`.\r\n *\r\n * Options:\r\n *\r\n *   - `defaultEngine` the default template engine name\r\n *   - `engines` template engine require() cache\r\n *   - `root` root path for view lookup\r\n *\r\n * @param {string} name\r\n * @param {object} options\r\n * @public\r\n */\n\nfunction View(name, options) {\n  var opts = options || {};\n  this.defaultEngine = opts.defaultEngine;\n  this.ext = extname(name);\n  this.name = name;\n  this.root = opts.root;\n\n  if (!this.ext && !this.defaultEngine) {\n    throw new Error('No default engine was specified and no extension was provided.');\n  }\n\n  var fileName = name;\n\n  if (!this.ext) {\n    // get extension from default engine name\n    this.ext = this.defaultEngine[0] !== '.' ? '.' + this.defaultEngine : this.defaultEngine;\n    fileName += this.ext;\n  }\n\n  if (!opts.engines[this.ext]) {\n    // load engine\n    var mod = this.ext.slice(1);\n    debug('require \"%s\"', mod); // default engine export\n\n    var fn = require(mod).__express;\n\n    if (typeof fn !== 'function') {\n      throw new Error('Module \"' + mod + '\" does not provide a view engine.');\n    }\n\n    opts.engines[this.ext] = fn;\n  } // store loaded engine\n\n\n  this.engine = opts.engines[this.ext]; // lookup path\n\n  this.path = this.lookup(fileName);\n}\n/**\r\n * Lookup view by the given `name`\r\n *\r\n * @param {string} name\r\n * @private\r\n */\n\n\nView.prototype.lookup = function lookup(name) {\n  var path;\n  var roots = [].concat(this.root);\n  debug('lookup \"%s\"', name);\n\n  for (var i = 0; i < roots.length && !path; i++) {\n    var root = roots[i]; // resolve the path\n\n    var loc = resolve(root, name);\n    var dir = dirname(loc);\n    var file = basename(loc); // resolve the file\n\n    path = this.resolve(dir, file);\n  }\n\n  return path;\n};\n/**\r\n * Render with the given options.\r\n *\r\n * @param {object} options\r\n * @param {function} callback\r\n * @private\r\n */\n\n\nView.prototype.render = function render(options, callback) {\n  debug('render \"%s\"', this.path);\n  this.engine(this.path, options, callback);\n};\n/**\r\n * Resolve the file within the given directory.\r\n *\r\n * @param {string} dir\r\n * @param {string} file\r\n * @private\r\n */\n\n\nView.prototype.resolve = function resolve(dir, file) {\n  var ext = this.ext; // <path>.<ext>\n\n  var path = join(dir, file);\n  var stat = tryStat(path);\n\n  if (stat && stat.isFile()) {\n    return path;\n  } // <path>/index.<ext>\n\n\n  path = join(dir, basename(file, ext), 'index' + ext);\n  stat = tryStat(path);\n\n  if (stat && stat.isFile()) {\n    return path;\n  }\n};\n/**\r\n * Return a stat, maybe.\r\n *\r\n * @param {string} path\r\n * @return {fs.Stats}\r\n * @private\r\n */\n\n\nfunction tryStat(path) {\n  debug('stat \"%s\"', path);\n\n  try {\n    return fs.statSync(path);\n  } catch (e) {\n    return undefined;\n  }\n}","map":{"version":3,"names":["debug","require","path","fs","dirname","basename","extname","join","resolve","module","exports","View","name","options","opts","defaultEngine","ext","root","Error","fileName","engines","mod","slice","fn","__express","engine","lookup","prototype","roots","concat","i","length","loc","dir","file","render","callback","stat","tryStat","isFile","statSync","e","undefined"],"sources":["E:/adminDeal/node_modules/express/lib/view.js"],"sourcesContent":["/*!\r\n * express\r\n * Copyright(c) 2009-2013 TJ Holowaychuk\r\n * Copyright(c) 2013 Roman Shtylman\r\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * Module dependencies.\r\n * @private\r\n */\r\n\r\nvar debug = require('debug')('express:view');\r\nvar path = require('path');\r\nvar fs = require('fs');\r\n\r\n/**\r\n * Module variables.\r\n * @private\r\n */\r\n\r\nvar dirname = path.dirname;\r\nvar basename = path.basename;\r\nvar extname = path.extname;\r\nvar join = path.join;\r\nvar resolve = path.resolve;\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nmodule.exports = View;\r\n\r\n/**\r\n * Initialize a new `View` with the given `name`.\r\n *\r\n * Options:\r\n *\r\n *   - `defaultEngine` the default template engine name\r\n *   - `engines` template engine require() cache\r\n *   - `root` root path for view lookup\r\n *\r\n * @param {string} name\r\n * @param {object} options\r\n * @public\r\n */\r\n\r\nfunction View(name, options) {\r\n  var opts = options || {};\r\n\r\n  this.defaultEngine = opts.defaultEngine;\r\n  this.ext = extname(name);\r\n  this.name = name;\r\n  this.root = opts.root;\r\n\r\n  if (!this.ext && !this.defaultEngine) {\r\n    throw new Error('No default engine was specified and no extension was provided.');\r\n  }\r\n\r\n  var fileName = name;\r\n\r\n  if (!this.ext) {\r\n    // get extension from default engine name\r\n    this.ext = this.defaultEngine[0] !== '.'\r\n      ? '.' + this.defaultEngine\r\n      : this.defaultEngine;\r\n\r\n    fileName += this.ext;\r\n  }\r\n\r\n  if (!opts.engines[this.ext]) {\r\n    // load engine\r\n    var mod = this.ext.slice(1)\r\n    debug('require \"%s\"', mod)\r\n\r\n    // default engine export\r\n    var fn = require(mod).__express\r\n\r\n    if (typeof fn !== 'function') {\r\n      throw new Error('Module \"' + mod + '\" does not provide a view engine.')\r\n    }\r\n\r\n    opts.engines[this.ext] = fn\r\n  }\r\n\r\n  // store loaded engine\r\n  this.engine = opts.engines[this.ext];\r\n\r\n  // lookup path\r\n  this.path = this.lookup(fileName);\r\n}\r\n\r\n/**\r\n * Lookup view by the given `name`\r\n *\r\n * @param {string} name\r\n * @private\r\n */\r\n\r\nView.prototype.lookup = function lookup(name) {\r\n  var path;\r\n  var roots = [].concat(this.root);\r\n\r\n  debug('lookup \"%s\"', name);\r\n\r\n  for (var i = 0; i < roots.length && !path; i++) {\r\n    var root = roots[i];\r\n\r\n    // resolve the path\r\n    var loc = resolve(root, name);\r\n    var dir = dirname(loc);\r\n    var file = basename(loc);\r\n\r\n    // resolve the file\r\n    path = this.resolve(dir, file);\r\n  }\r\n\r\n  return path;\r\n};\r\n\r\n/**\r\n * Render with the given options.\r\n *\r\n * @param {object} options\r\n * @param {function} callback\r\n * @private\r\n */\r\n\r\nView.prototype.render = function render(options, callback) {\r\n  debug('render \"%s\"', this.path);\r\n  this.engine(this.path, options, callback);\r\n};\r\n\r\n/**\r\n * Resolve the file within the given directory.\r\n *\r\n * @param {string} dir\r\n * @param {string} file\r\n * @private\r\n */\r\n\r\nView.prototype.resolve = function resolve(dir, file) {\r\n  var ext = this.ext;\r\n\r\n  // <path>.<ext>\r\n  var path = join(dir, file);\r\n  var stat = tryStat(path);\r\n\r\n  if (stat && stat.isFile()) {\r\n    return path;\r\n  }\r\n\r\n  // <path>/index.<ext>\r\n  path = join(dir, basename(file, ext), 'index' + ext);\r\n  stat = tryStat(path);\r\n\r\n  if (stat && stat.isFile()) {\r\n    return path;\r\n  }\r\n};\r\n\r\n/**\r\n * Return a stat, maybe.\r\n *\r\n * @param {string} path\r\n * @return {fs.Stats}\r\n * @private\r\n */\r\n\r\nfunction tryStat(path) {\r\n  debug('stat \"%s\"', path);\r\n\r\n  try {\r\n    return fs.statSync(path);\r\n  } catch (e) {\r\n    return undefined;\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}
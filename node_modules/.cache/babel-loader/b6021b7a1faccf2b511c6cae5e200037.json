{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      auth: {\n        isAuthenticated: false,\n        user: {}\n      }\n    };\n  },\n\n  created() {\n    var user = localStorage.getItem(\"user\");\n\n    if (user !== null) {\n      user = JSON.parse(user);\n      this.auth.isAuthenticated = true;\n      this.auth.user = user;\n    }\n\n    this.getReviews();\n  },\n\n  mounted() {\n    this.emitter.emit(\"headerFooter\", false);\n    console.log('unmounted has been called');\n  },\n\n  unmounted() {\n    this.emitter.emit(\"headerFooter\", false);\n    console.log('unmounted has been called');\n  },\n\n  methods: {\n    getReviews() {\n      axios.get(this.selfDomain + 'vueseller/seller/reviews', {\n        headers: {\n          Authorization: \"Bearer \" + this.auth.user.access_token\n        }\n      }).then(response => {\n        this.review = response.data.review;\n        console.log(response.data.review);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA4DA,OAAOA,KAAP,MAAkB,OAAlB;AACA,eAAe;EACXC,IAAI,GAAE;IACF,OAAM;MACFC,IAAI,EAAC;QACDC,eAAe,EAAE,KADhB;QAEDC,IAAI,EAAE;MAFL;IADH,CAAN;EAMH,CARU;;EASXC,OAAO,GAAE;IACL,IAAID,IAAG,GAAIE,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX;;IACI,IAAGH,IAAG,KAAM,IAAZ,EAAiB;MACbA,IAAG,GAAII,IAAI,CAACC,KAAL,CAAWL,IAAX,CAAP;MACA,KAAKF,IAAL,CAAUC,eAAV,GAA4B,IAA5B;MACA,KAAKD,IAAL,CAAUE,IAAV,GAAiBA,IAAjB;IACJ;;IACA,KAAKM,UAAL;EACP,CAjBU;;EAkBXC,OAAO,GAAG;IACV,KAAKC,OAAL,CAAaC,IAAb,CAAkB,cAAlB,EAAkC,KAAlC;IACAC,OAAO,CAACC,GAAR,CAAY,2BAAZ;EACC,CArBU;;EAsBXC,SAAS,GAAG;IACZ,KAAKJ,OAAL,CAAaC,IAAb,CAAkB,cAAlB,EAAkC,KAAlC;IACAC,OAAO,CAACC,GAAR,CAAY,2BAAZ;EACC,CAzBU;;EA0BXE,OAAO,EAAC;IACJP,UAAU,GAAE;MACRV,KAAK,CAACkB,GAAN,CAAU,KAAKC,UAAL,GAAgB,0BAA1B,EAAqD;QACrDC,OAAO,EAAE;UACDC,aAAa,EAAE,YAAY,KAAKnB,IAAL,CAAUE,IAAV,CAAekB;QADzC;MAD4C,CAArD,EAMCC,IAND,CAMOC,QAAD,IAAc;QAChB,KAAKC,MAAL,GAAcD,QAAQ,CAACvB,IAAT,CAAcwB,MAA5B;QACAX,OAAO,CAACC,GAAR,CAAYS,QAAQ,CAACvB,IAAT,CAAcwB,MAA1B;MACH,CATD,EAUCC,KAVD,CAUQC,GAAD,IAAO;QACVb,OAAO,CAACC,GAAR,CAAYY,GAAZ;MACH,CAZD;IAaJ;;EAfI;AA1BG,CAAf","names":["axios","data","auth","isAuthenticated","user","created","localStorage","getItem","JSON","parse","getReviews","mounted","emitter","emit","console","log","unmounted","methods","get","selfDomain","headers","Authorization","access_token","then","response","review","catch","err"],"sourceRoot":"","sources":["F:\\adminDeal\\src\\components\\pages\\sellers\\pages\\products\\product_review.vue"],"sourcesContent":["<template>\r\n      <div class=\"card\">\r\n        <div class=\"card-header\">\r\n            <h5 class=\"mb-0 h6\">Product Reviews</h5>\r\n        </div>\r\n        <div class=\"card-body\">\r\n            <table class=\"table mb-0\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Product</th>\r\n                        <th data-breakpoints=\"lg\">Customer</th>\r\n                        <th>Rating</th>\r\n                        <th data-breakpoints=\"lg\">Comment</th>\r\n                        <th data-breakpoints=\"lg\">Published</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <!-- @foreach ($reviews as $key => $value)\r\n                        @php\r\n                            $review = \\App\\Models\\Review::find($value->id);\r\n                        @endphp\r\n                        @if($review != null && $review->product != null && $review->user != null) -->\r\n                            <tr>\r\n                                <td>\r\n                                    <!-- {{ $key+1 }} -->\r\n                                </td>\r\n                                <td>\r\n                                    <a href=\"product', $review->product->slug\" target=\"_blank\">name</a>\r\n                                </td>\r\n                                <td>user->name</td>\r\n                                <td>\r\n                                    <span class=\"rating rating-sm\">\r\n                                        <!-- @for ($i=0; $i < $review->rating; $i++)\r\n                                            <i class=\"las la-star active\"></i>\r\n                                        @endfor\r\n                                        @for ($i=0; $i < 5-$review->rating; $i++)\r\n                                            <i class=\"las la-star\"></i>\r\n                                        @endfor -->\r\n                                    </span>\r\n                                </td>\r\n                                <td>review->comment</td>\r\n                                <td>\r\n                                    <!-- @if ($review->status == 1) -->\r\n                                        <span class=\"badge badge-inline badge-success\">Published</span>\r\n                                    <!-- @else -->\r\n                                        <span class=\"badge badge-inline badge-danger\">Unpublished</span>\r\n                                    <!-- @endif -->\r\n                                </td>\r\n                            </tr>\r\n                </tbody>\r\n            </table>\r\n            <div class=\"aiz-pagination\">\r\n                <!-- {{ $reviews->links() }} -->\r\n          \t</div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nexport default {\r\n    data(){\r\n        return{\r\n            auth:{\r\n                isAuthenticated: false,\r\n                user: {},\r\n                },\r\n        }\r\n    },\r\n    created(){\r\n        var user = localStorage.getItem(\"user\");\r\n            if(user !== null){\r\n                user = JSON.parse(user);\r\n                this.auth.isAuthenticated = true;\r\n                this.auth.user = user;\r\n            }\r\n            this.getReviews();\r\n    },\r\n    mounted() {\r\n    this.emitter.emit(\"headerFooter\", false);\r\n    console.log('unmounted has been called'); \r\n    },\r\n    unmounted() {\r\n    this.emitter.emit(\"headerFooter\", false);\r\n    console.log('unmounted has been called'); \r\n    },\r\n    methods:{\r\n        getReviews(){\r\n            axios.get(this.selfDomain+'vueseller/seller/reviews',{  \r\n            headers: {\r\n                    Authorization: \"Bearer \" + this.auth.user.access_token,\r\n              }\r\n\r\n            })\r\n            .then((response) => {    \r\n                this.review = response.data.review\r\n                console.log(response.data.review);\r\n            })\r\n            .catch((err)=>{\r\n                console.log(err)\r\n            })\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}